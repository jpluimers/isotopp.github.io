<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>computer on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/tags/computer.html</link>
    <description>Recent content in computer on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Aug 2022 07:17:33 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/tags/computer/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Revisiting the file server</title>
      <link>https://blog.koehntopp.info/2022/02/06/revisiting-the-file-server.html</link>
      <pubDate>Sun, 06 Feb 2022 21:06:03 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/02/06/revisiting-the-file-server.html</guid>
      <description>&lt;p&gt;The new disks in the file server had synchronized nicely, and that resulted in an interesting graph:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/disk-sync.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sectors on the outer part of a hard disk are transferred faster than inner sectors. You can see how the disk speed halves between the outermost and the innermost part.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While watching, I decided on a whim that I wanted to convert the entire setup from using Linux &lt;code&gt;mdraid&lt;/code&gt; to &lt;code&gt;dmraid&lt;/code&gt;, the LVM2 implementation of RAID1.
It is essentially the same code, but integrated into LVM2 instead of using &lt;code&gt;mdadm&lt;/code&gt; for control.&lt;/p&gt;
&lt;p&gt;I had already experimented with &lt;code&gt;dmraid&lt;/code&gt; before, as documented in &lt;a href=&#34;https://blog.koehntopp.info/2019/12/02/cloning-and-splitting-logical-volumes.html&#34;&gt;an earlier article&lt;/a&gt;

, and that was &lt;a href=&#34;https://blog.koehntopp.info/2019/12/03/trying-lvmraid-for-real.html&#34;&gt;not without problems&lt;/a&gt;

.
But since the array would contain no original data, only backups, I decided to give it a try.&lt;/p&gt;
&lt;p&gt;So here we go:&lt;/p&gt;
&lt;h1 id=&#34;destroying-the-mdraid&#34;&gt;
    &lt;a href=&#34;#destroying-the-mdraid&#34;&gt;
	Destroying the &lt;code&gt;mdraid&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I had created a RAID-1 pair of the disks &lt;code&gt;/dev/sdb2&lt;/code&gt; and &lt;code&gt;/dev/sdc2&lt;/code&gt; under the name &lt;code&gt;/dev/md126&lt;/code&gt;, then added &lt;code&gt;/dev/md126&lt;/code&gt; to the &lt;code&gt;hdd&lt;/code&gt; volume group. In order to get the disks back, I had to undo this.&lt;/p&gt;
&lt;p&gt;So we need to check if the &lt;code&gt;/dev/md126&lt;/code&gt; PV is empty:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvdisplay --map /dev/sda2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical volume ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Name               /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG Name               hdd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Size               9.09 TiB / not usable 1022.98 MiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocatable           yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PE Size               1.00 GiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Total PE              9303
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Free PE               9303
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocated PE          0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV UUID               ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical Segments ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 1 to 9302:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s fine. We can remove the pair from the volume group again, remove the LVM2 label, and then stop and destroy the raid:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vgreduce hdd /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvremove /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --stop /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --remove /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --zero-superblock /dev/sdb2 /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That did not work: An Ubuntu Component, &lt;code&gt;os-prober&lt;/code&gt;, took possession of the devices after removing the RAID-1. I had to actually uninstall the component and remove the &lt;code&gt;osprober&lt;/code&gt; from devicemapper before I could continue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;### After uninstalling os-prober:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dmsetup ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dmsetup remove osprober-linux-sdb2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dmsetup remove osprober-linux-sdc2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mdadm --zero-superblock /dev/sdb2 /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;preparing-the-disks-individually-for-lvm2&#34;&gt;
    &lt;a href=&#34;#preparing-the-disks-individually-for-lvm2&#34;&gt;
	Preparing the disks individually for LVM2
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Only then I could continue, add the disks to LVM2 and extend the &lt;code&gt;hdd&lt;/code&gt; volume group:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvcreate /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;b,c&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vgextend hdd /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;b,c&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now have a very weird, asymmetric VG in which there is a single 9.09 TiB raid PV and two 9.09 TiB unraided PVs.
Our next objective is to evacuate the raided PV, and then destroy this as well, adding the disks back unraided.
This will result in a 36 TiB total VG.&lt;/p&gt;
&lt;h1 id=&#34;evacuating-devmd127-to-unraid-it&#34;&gt;
    &lt;a href=&#34;#evacuating-devmd127-to-unraid-it&#34;&gt;
	Evacuating &lt;code&gt;/dev/md127&lt;/code&gt; to unraid it
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This is going to take a long time. We need to do this in a &lt;code&gt;tmux&lt;/code&gt; session:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvmove /dev/md127 /dev/sdb2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will, over the course of about one day, move all physical extents from &lt;code&gt;/dev/md127&lt;/code&gt; to &lt;code&gt;/dev/sdb2&lt;/code&gt;.
This exposes us to disk failure, as for the moment the data on &lt;code&gt;/dev/sdb2&lt;/code&gt; is unraided.&lt;/p&gt;
&lt;h1 id=&#34;restoring-redundancy&#34;&gt;
    &lt;a href=&#34;#restoring-redundancy&#34;&gt;
	Restoring redundancy
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;There are two kinds of backup on this disk pack:
A number of Apple Time Machine targets and an Acronis Windws target, &lt;code&gt;tm_*&lt;/code&gt; and &lt;code&gt;win_*&lt;/code&gt;, and an internal backup that is being produced by a cron job, &lt;code&gt;rsync&lt;/code&gt;ing data from the internal SSDs to the disks, &lt;code&gt;/backup&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I decided to destroy the &lt;code&gt;/backup&lt;/code&gt; LV and recreate it as a &lt;code&gt;raid10&lt;/code&gt; across all 4 disks.
This was relatively easy, and worked immediately &amp;ndash; it just took a few hours for the backup job to run from scratch.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; umount /backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvremove /dev/hdd/backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvcreate --type raid10 -i2 -m1 -n backup -L4T hdd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkfs -t xfs -f /dev/hdd/backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mount /backup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; /root/bin/make-backup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the Time Machine and Acronis targets, I decided to &lt;code&gt;lvconvert&lt;/code&gt; them to &lt;code&gt;raid1&lt;/code&gt;.
&lt;a href=&#34;https://blog.koehntopp.info/2019/12/02/cloning-and-splitting-logical-volumes.html&#34;&gt;As stated before&lt;/a&gt;

, there are two competing implementations of of RAID in LVM2, &lt;code&gt;--type mirror&lt;/code&gt; and &lt;code&gt;--type raid1&lt;/code&gt;.
The &lt;code&gt;mirror&lt;/code&gt; implementation is very extremely strongly deprecated, the &lt;code&gt;raid1&lt;/code&gt; implementation is okay, because it uses the same code as  &lt;code&gt;mdraid&lt;/code&gt; internally.&lt;/p&gt;
&lt;p&gt;We need to make sure to specify &lt;code&gt;--type raid1&lt;/code&gt; in the &lt;code&gt;lvconvert&lt;/code&gt; command to ensure the proper type is being used.
For each target we do&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvconvert --type raid1 -m1 /dev/hdd/tm_...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This returns immediately, and begins to sync the mirror halves internally.
If we at this point convert all Time Machine and Acronis targets at once, the sync speed is abysmally slow, because of disk head treshing.
There is no way to stop this.
The only option is to slow down all resyncs except one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;### for all targets, slow them down to minimum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;  lvchange --maxrecoveryspeed&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1k /dev/hdd/tm_...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;### for one target, set a very large max speed:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvchange --maxrecoveryspeed&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;100000k /dev/hdd/tm_...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then let one &lt;code&gt;tm_...&lt;/code&gt; target finish.
After that, we can increase the max sync speed for the next target, and so on.&lt;/p&gt;
&lt;p&gt;This is what a &lt;code&gt;--type raid1&lt;/code&gt; looks like in &lt;code&gt;lsblk&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lsblk /dev/sda2 /dev/sdg2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sda2                       8:2    0  9.1T  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rmeta_0  253:18   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rimage_0 253:25   0    1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sdg2                       8:98   0  9.1T  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rmeta_1  253:26   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─hdd-tm_aircat_rimage_1 253:30   0    1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;│ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That is, for each leg of the RAID1 you get a &lt;code&gt;rimage&lt;/code&gt; and &lt;code&gt;rmeta&lt;/code&gt; LV.
If the LVs are named &lt;code&gt;mimage_0&lt;/code&gt; and &lt;code&gt;mimage1&lt;/code&gt; and there is no &lt;code&gt;rmeta&lt;/code&gt; but only a single &lt;code&gt;mlog&lt;/code&gt;, this is not &lt;code&gt;--type raid&lt;/code&gt;, but the deprecated &lt;code&gt;mirror&lt;/code&gt; implementation.
This is not good, and should be converted to &lt;code&gt;--type raid1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There is no way to convert a &lt;code&gt;linear&lt;/code&gt; or &lt;code&gt;raid1&lt;/code&gt; to &lt;code&gt;raid10&lt;/code&gt;, unfortunately.&lt;/p&gt;
&lt;h1 id=&#34;checking-status-and-progress&#34;&gt;
    &lt;a href=&#34;#checking-status-and-progress&#34;&gt;
	Checking status and progress
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A few handy commands to check the status and the progress of the conversion.&lt;/p&gt;
&lt;p&gt;Monitor the sync state of the devices:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvs -a -o name,copy_percent,devices,raid_max_recovery_rate,raid_mismatch_count,raid_sync_action hdd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-a&lt;/code&gt; shows all the LVs, even the internal ones.
We are interested into the &lt;code&gt;copy_percent&lt;/code&gt; to see the progress of the sync.
We also want the &lt;code&gt;max_recovery_rate&lt;/code&gt;, because we might have throttled it with the &lt;code&gt;lvchange&lt;/code&gt; command mentioned above.
And we want to see the &lt;code&gt;raid_mismatch_count&lt;/code&gt; and &lt;code&gt;raid_sync_action&lt;/code&gt; to see what&amp;rsquo;s going on.&lt;/p&gt;
&lt;p&gt;Of course, the ubiquitous &lt;code&gt;lvs -a -o +devices&lt;/code&gt; is always handy to get an impression of the entire VG:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvs -a -o +devices hdd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  LV                   VG  Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert Devices
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  backup               hdd rwi-aor---   4.00t                                    100.00           backup_rimage_0(0),backup_rimage_1(0),backup_rimage_2(0),backup_rimage_3(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_0]    hdd iwi-aor---   2.00t                                                     /dev/sdb2(2561)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_1]    hdd iwi-aor---   2.00t                                                     /dev/sdc2(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_2]    hdd iwi-aor---   2.00t                                                     /dev/sda2(1026)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rimage_3]    hdd iwi-aor---   2.00t                                                     /dev/sdg2(3158)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_0]     hdd ewi-aor---   1.00g                                                     /dev/sdb2(2560)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_1]     hdd ewi-aor---   1.00g                                                     /dev/sdc2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_2]     hdd ewi-aor---   1.00g                                                     /dev/sda2(1025)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [backup_rmeta_3]     hdd ewi-aor---   1.00g                                                     /dev/sdg2(3157)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  tm_aircat            hdd rwi-aor---   1.00t                                    100.00           tm_aircat_rimage_0(0),tm_aircat_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rimage_0] hdd iwi-aor---   1.00t                                                     /dev/sda2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rimage_1] hdd iwi-aor---   1.00t                                                     /dev/sdg2(2133)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rmeta_0]  hdd ewi-aor---   1.00g                                                     /dev/sda2(1024)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_aircat_rmeta_1]  hdd ewi-aor---   1.00g                                                     /dev/sdg2(2132)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  tm_joram             hdd rwi-aor---   1.50t                                    100.00           tm_joram_rimage_0(0),tm_joram_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rimage_0]  hdd iwi-aor---   1.50t                                                     /dev/sdc2(2049)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rimage_1]  hdd iwi-aor---   1.50t                                                     /dev/sdb2(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rmeta_0]   hdd ewi-aor---   1.00g                                                     /dev/sdc2(3585)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_joram_rmeta_1]   hdd ewi-aor---   1.00g                                                     /dev/sdb2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  tm_mini              hdd rwi-aor--- 512.00g                                    100.00           tm_mini_rimage_0(0),tm_mini_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rimage_0]   hdd iwi-aor--- 512.00g                                                     /dev/sdb2(8786)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rimage_1]   hdd iwi-aor--- 512.00g                                                     /dev/sdc2(4609)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rmeta_0]    hdd ewi-aor---   1.00g                                                     /dev/sdb2(9298)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [tm_mini_rmeta_1]    hdd ewi-aor---   1.00g                                                     /dev/sdc2(4608)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  win_kk               hdd rwi-aor---   2.08t                                    100.00           win_kk_rimage_0(0),win_kk_rimage_1(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rimage_0]    hdd iwi-aor---   2.08t                                                     /dev/sdg2(2)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rimage_1]    hdd iwi-aor---   2.08t                                                     /dev/sda2(3075)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rmeta_0]     hdd ewi-aor---   1.00g                                                     /dev/sdg2(0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  [win_kk_rmeta_1]     hdd ewi-aor---   1.00g                                                     /dev/sda2(3074)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another way to look at the construct is &lt;code&gt;lsblk&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lsblk /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;a,b,c,g&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;NAME                       MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sda                          8:0    0  9.1T  0 disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;├─sda1                       8:1    0   10G  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;└─sda2                       8:2    0  9.1T  0 part
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-tm_aircat_rmeta_0  253:18   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-tm_aircat_rimage_0 253:25   0    1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-tm_aircat        253:20   0    1T  0 lvm  /export/tm_aircat
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-backup_rmeta_2     253:35   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-backup           253:39   0    4T  0 lvm  /backup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-backup_rimage_2    253:36   0    2T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-backup           253:39   0    4T  0 lvm  /backup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ├─hdd-win_kk_rmeta_1     253:42   0    1G  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  │ └─hdd-win_kk           253:23   0  2.1T  0 lvm  /export/win_kk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  └─hdd-win_kk_rimage_1    253:43   0  2.1T  0 lvm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    └─hdd-win_kk           253:23   0  2.1T  0 lvm  /export/win_kk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;what-is-where&#34;&gt;
    &lt;a href=&#34;#what-is-where&#34;&gt;
	What is where?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;And of course, we might be interested into the actual distribution of data on the disk:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvdisplay --map /dev/sd&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;a,b,c,g&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical volume ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Name               /dev/sdg2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG Name               hdd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV Size               9.09 TiB / not usable 1022.98 MiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocatable           yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PE Size               1.00 GiB
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Total PE              9303
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Free PE               4098
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Allocated PE          5205
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  PV UUID               ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  --- Physical Segments ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 0 to 0:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/win_kk_rmeta_0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 1 to 1:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 2 to 2131:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/win_kk_rimage_0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 2129
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 2132 to 2132:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/tm_aircat_rmeta_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 2133 to 3156:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/tm_aircat_rimage_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 1023
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3157 to 3157:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/backup_rmeta_3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3158 to 5205:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/backup_rimage_3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 2047
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 5206 to 9302:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;defragmenting-devsdb2&#34;&gt;
    &lt;a href=&#34;#defragmenting-devsdb2&#34;&gt;
	Defragmenting &lt;code&gt;dev/sdb2&lt;/code&gt;
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Due to the way we created things, initially all &lt;code&gt;RAID1&lt;/code&gt; have the left leg of their mirror on &lt;code&gt;/dev/sdb2&lt;/code&gt;, because that is where we &lt;code&gt;pvmove&lt;/code&gt;ed stuff initially.
We might want to fix that, and push a few things over.
I did that, as can be seen by the &lt;code&gt;lvs -a -o +devices hdd&lt;/code&gt; output further up.&lt;/p&gt;
&lt;p&gt;Here is how:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvmove -n &amp;lt;LV_name&amp;gt; /dev/sdb2 /dev/sdg2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will move all data belonging to &lt;code&gt;LV_name&lt;/code&gt; that is currently on &lt;code&gt;/dev/sdb2&lt;/code&gt; to &lt;code&gt;/dev/sdg2&lt;/code&gt;.
Again, this will take a long time, and there should be no other sync action currently active for maximum speed, as rotating disks slow down a lot when there are competing disk seeks.&lt;/p&gt;
&lt;p&gt;This leaves us with a fragmented &lt;code&gt;/dev/sdb2&lt;/code&gt; and LVs on higher numbered extents, which are a lot slower than lower numbered extents.
We could fix that as well, again with &lt;code&gt;pvmove&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvdisplay --map /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3587 to 3596:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/keks_rimage_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3597 to 4607:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pvmove -n keks --alloc anywhere /dev/sdc2:3587-3596 /dev/sdc2:4000-4009
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; /dev/sdc2: Moved: 0.00%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; /dev/sdc2: Moved: 100.00%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This moves extents internally on a drive.
&lt;code&gt;pvmove&lt;/code&gt; normally refuses to do this, so we have to tell it to shut up about this, using &lt;code&gt;--alloc anywhere&lt;/code&gt;.
We then use extent-addressing to change the map manually:
We move data from &lt;code&gt;/dev/sdc2:3587-3596&lt;/code&gt;, the entire &lt;code&gt;keks&lt;/code&gt; Test-LV, somewhere into the &lt;code&gt;FREE&lt;/code&gt; space, &lt;code&gt;4000-4009&lt;/code&gt;.
The result looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 3587 to 3999:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 4000 to 4009:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical volume      /dev/hdd/keks_rimage_1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Logical extents     0 to 9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Physical extent 4010 to 4607:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    FREE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvremove /dev/hdd/keks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Do you really want to remove and DISCARD active logical volume hdd/keks? [y/n]: y
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  Logical volume &amp;#34;keks&amp;#34; successfully removed
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that concludes a largely pointless refactoring of my home storage, because I could.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vgs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG     #PV #LV #SN Attr   VSize   VFree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  data     2  15   0 wz--n-   7.28t   3.25t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  hdd      4   5   0 wz--n-  36.34t  18.17t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  system   1   4   0 wz--n- 466.94g 234.94g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;do-you-have-checksums&#34;&gt;
    &lt;a href=&#34;#do-you-have-checksums&#34;&gt;
	Do you have checksums?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Not yet.
There is a thing called &lt;code&gt;dm-integrity&lt;/code&gt;, though, and a &lt;a href=&#34;https://gist.github.com/MawKKe/caa2bbf7edcc072129d73b61ae7815fb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gist&lt;/a&gt;

 that I have to try. The &lt;a href=&#34;https://www.kernel.org/doc/html/latest/admin-guide/device-mapper/dm-integrity.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dm-integrity Documentation&lt;/a&gt;

 is here.
And &lt;code&gt;integritysetup&lt;/code&gt; is part of &lt;code&gt;cryptsetup-bin&lt;/code&gt; on Ubuntu.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time to grow the file server</title>
      <link>https://blog.koehntopp.info/2022/02/01/time-to-grow-the-file-server.html</link>
      <pubDate>Tue, 01 Feb 2022 21:06:03 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/02/01/time-to-grow-the-file-server.html</guid>
      <description>&lt;p&gt;The old file server was full, and since the little one got more local storage in his laptop, I also needed more storage for backup to match.
I am running a 5x cage using up 3 disk slots in a Midi-Tower.
Two slots are filled with Seagate Ironwolf 10 TB disks already, the rest is available.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.de/-/en/gp/product/B019HE69FO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/cold-storage1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A 5x &lt;a href=&#34;https://www.amazon.de/-/en/gp/product/B019HE69FO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hot swap disk cage&lt;/a&gt;

 using 3 disk slots in a midi tower.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The disk situation in the machine was like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo vgs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[sudo] password for kris: 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG     #PV #LV #SN Attr   VSize   VFree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  data     2  16   0 wz--n-   7.28t   3.24t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  hdd      2   5   0 wz--n-   9.08t   5.00g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  system   1   4   0 wz--n- 466.94g 234.94g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;hdd&lt;/code&gt; volume group is running in a RAID-1 configuration using &lt;code&gt;mdraid&lt;/code&gt; for historical reasons - this is a very old machine.
Additional space would be added as another &lt;code&gt;mdraid&lt;/code&gt;, and then linearly extend the existing volume.
That is fine, the disks are used as backup targets for a number of Mac devices only and speed or seeks are not our primary goal.&lt;/p&gt;
&lt;p&gt;I ordered two additional Seagate Ironwolf 10 TB disks to match the existing ones.
They came in rather cold from the delivery van:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/cold-storage2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;After unpacking the disk chassis had single digit celsius temperatures.
When I remembered to take a thermal image they were already warmed up a bit.
I let them warm up a bit more before I put them in.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pushing in the disks generated a lot of kernel log, and also a nice graph in the temperature monitoring:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/02/cold-storage3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The new disks are warming up rapidly. The dropping line is a scratch disk that I have been taking out of slot 3 and pushing back in into slot 5.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556459.695008] ata2: SRST failed (errno=-16)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.651016] ata2: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.671217] ata2.00: ATA-11: ST10000VN0008-2PJ103, SC61, max UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.671220] ata2.00: 19532873728 sectors, multi 16: LBA48 NCQ (depth 31/32)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676016] ata2.00: configured for UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676157] scsi 1:0:0:0: Direct-Access     ATA      ST10000VN0008-2P SC61 PQ: 0 ANSI: 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676549] sd 1:0:0:0: Attached scsi generic sg1 type 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676844] sd 1:0:0:0: [sdb] 19532873728 512-byte logical blocks: (10.0 TB/9.10 TiB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676847] sd 1:0:0:0: [sdb] 4096-byte physical blocks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676879] sd 1:0:0:0: [sdb] Write Protect is off
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676885] sd 1:0:0:0: [sdb] Mode Sense: 00 3a 00 00
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.676973] sd 1:0:0:0: [sdb] Write cache: enabled, read cache: enabled, doesn&amp;#39;t support DPO or FUA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556461.771798] sd 1:0:0:0: [sdb] Attached SCSI disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556464.406986] ata3: link is slow to respond, please be patient (ready=0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556468.514986] ata3: SRST failed (errno=-16)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.586999] ata3: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.589417] ata3.00: ATA-11: ST10000VN0008-2PJ103, SC61, max UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.589420] ata3.00: 19532873728 sectors, multi 16: LBA48 NCQ (depth 31/32)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594222] ata3.00: configured for UDMA/133
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594361] scsi 2:0:0:0: Direct-Access     ATA      ST10000VN0008-2P SC61 PQ: 0 ANSI: 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594676] sd 2:0:0:0: Attached scsi generic sg2 type 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594933] sd 2:0:0:0: [sdc] 19532873728 512-byte logical blocks: (10.0 TB/9.10 TiB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.594937] sd 2:0:0:0: [sdc] 4096-byte physical blocks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.595017] sd 2:0:0:0: [sdc] Write Protect is off
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.595022] sd 2:0:0:0: [sdc] Mode Sense: 00 3a 00 00
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.595120] sd 2:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn&amp;#39;t support DPO or FUA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[556470.695659] sd 2:0:0:0: [sdc] Attached SCSI disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Yup, 3 GBps. This is an old &lt;code&gt;i7-3770&lt;/code&gt; with an old SATA subsystem to match.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I created partition tables using &lt;code&gt;sfdisk&lt;/code&gt;, copying from the existing &lt;code&gt;sda&lt;/code&gt; (another Ironwolf) to the new devices &lt;code&gt;sdb&lt;/code&gt; and &lt;code&gt;sdc&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo sfdisk -d /dev/sda | sudo sfdisk /dev/sdb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo sfdisk -d /dev/sda | sudo sfdisk /dev/sdc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo sfdisk -d /dev/sdb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;label: gpt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;label-id: ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;device: /dev/sdb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;unit: sectors
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;first-lba: 34
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;last-lba: 19532873694
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;/dev/sdb1 : start=        2048, size=    20971520, type=..., uuid=...., name=&amp;#34;Linux filesystem&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/dev/sdb2 : start=    20973568, size= 19511900127, type=..., uuid=...., name=&amp;#34;Linux RAID&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This works, because &lt;code&gt;sfdisk&lt;/code&gt; like &lt;code&gt;sgdisk&lt;/code&gt; understands about MBR and GPT partition tables, and can handle large 10 TB partitions. We have a 10 GB &lt;code&gt;/dev/sdb1&lt;/code&gt; as a potential boot space, and use the rest of the disk as a giant &lt;code&gt;/dev/sdb2&lt;/code&gt; in LVM2. The other disk, &lt;code&gt;/dev/sdc&lt;/code&gt; matches this.&lt;/p&gt;
&lt;p&gt;We can then construct the RAID from the two partitions &lt;code&gt;/dev/sd{b,c}2&lt;/code&gt;. Because this is a large device, &lt;code&gt;mdadm&lt;/code&gt; will also automatically add an internal bitmap.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo mdadm -C /dev/md126 --level=1 --raid-devices=2 /dev/sd{b,c}2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo mdadm --detail /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;/dev/md126:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;           Version : 1.2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Creation Time : Tue Feb  1 20:23:20 2022
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        Raid Level : raid1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        Array Size : 9755817920 (9303.87 GiB 9989.96 GB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Used Dev Size : 9755817920 (9303.87 GiB 9989.96 GB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;      Raid Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Total Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       Persistence : Superblock is persistent
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     Intent Bitmap : Internal
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;       Update Time : Tue Feb  1 21:27:07 2022
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;             State : clean, resyncing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Active Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   Working Devices : 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    Failed Devices : 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     Spare Devices : 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Consistency Policy : bitmap
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;     Resync Status : 0% complete
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;              Name : server:126  (local to host server)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;              UUID : ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;            Events : 799
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    Number   Major   Minor   RaidDevice State
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       0       8       18        0      active sync   /dev/sdb2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;       1       8       34        1      active sync   /dev/sdc2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And while the RAID synchronizes in the background, we can turn the new device into a physical volume and add it to the &lt;code&gt;hdd&lt;/code&gt; volume group.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo pvcreate /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Physical volume &amp;#34;dev/md126&amp;#34; successfully created.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ sudo vgextend hdd /dev/md126
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Volume Group &amp;#34;hdd&amp;#34; successfully extended
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@server:~$ vgs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  VG     #PV #LV #SN Attr   VSize   VFree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  data     2  16   0 wz--n-   7.28t   3.24t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  hdd      2   5   0 wz--n-  18.17t   9.09t
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  system   1   4   0 wz--n- 466.94g 234.94g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With that, we now have sufficient disk space to continue to work.
After the sync completes, I will &lt;code&gt;lvconvert&lt;/code&gt; two existing backup partitions into mirrors to move them to the new disk pair, and then dissolve the mirror, dropping the image on the old half.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AMD und 128 cores</title>
      <link>https://blog.koehntopp.info/2021/11/08/amd-und-128-cores.html</link>
      <pubDate>Mon, 08 Nov 2021 13:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/08/amd-und-128-cores.html</guid>
      <description>&lt;p&gt;Wir sprachen in
&lt;a href=&#34;https://blog.koehntopp.info/2021/09/30/software-defined-silicon.html&#34;&gt;Software Defined Silicon&lt;/a&gt;


darüber, wie die CPU-Bedürfnisse von Hyperscalern und normalen Kunden divergieren.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hyperscaler haben Interesse an immer größeren CPUs mit immer mehr Kernen, und immer höherer Dichte in ihren Rechenzentren. [&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Normale Kunden sehen das nicht so: man kann in einer 64C/128T-Core-Single-Socket-Konfiguration mit 2-4 TB RAM unter Umständen den gesamten Serverbedarf einer kleineren Firma in einer einzelnen physikalischen Maschine in VMs unterbringen.
Das Problem dabei: Explosionsradius, wenn mal etwas ausfällt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Und das passiert:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=AMD-Zen-4-Genoa-Bergamo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AMD Shares Early Details Of Zen 4 Genoa, Bergamo&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Heute hat AMD einen Ausblick auf die kommenden Zen 4 CPUs geliefert:
Die normale &amp;ldquo;Genoa&amp;rdquo; wird 96 Cores pro Socket liefern, also 192C/384T in einem 2P-Board.&lt;/p&gt;
&lt;p&gt;Es wird jedoch von dieser CPU auch eine &amp;ldquo;Bergamo&amp;rdquo;-Variante geben, und das ist eine
&amp;ldquo;high-core count compute engine designed for cloud-native workloads&amp;rdquo;.
Das sind dann 256C/512T in einem 2P-Board.&lt;/p&gt;
&lt;p&gt;Das ist nicht nur zu viel Maschinerie in einer einzelnen Kiste, sondern auch in einem normalen Rechenzentrums-Rack vermutlich nicht mehr so einfach zu kühlen.
Wenn man sich als Hyperscaler jedoch seine Rechenzentren nach Maß bauen lässt, sollte das alles nicht weiter weh tun.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Wozu der 4K-Monitor, fragst Du?
Na, damit die &amp;lsquo;htop&amp;rsquo; Anzeige auf den Bildschirm passt.&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaverse (en)</title>
      <link>https://blog.koehntopp.info/2021/10/27/metaverse-en.html</link>
      <pubDate>Wed, 27 Oct 2021 17:10:21 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/27/metaverse-en.html</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;https://twitter.com/isotopp/status/1450739310546886657&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wrote on Twitter&lt;/a&gt;

 something about the term &amp;ldquo;Metaverse&amp;rdquo;.
That led to a contact with &lt;a href=&#34;https://twitter.com/michacarl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Michael Carl&lt;/a&gt;

, who wanted to make an episode for his &lt;a href=&#34;https://carls-zukunft.de/folge-58-how-to-build-a-metaversum-in-three-simple-steps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast&lt;/a&gt;

 with me.
My &lt;a href=&#34;https://docs.google.com/document/d/1_OIl_bcrjVczLQrMrVnt5IoYbitp1504mb2GbQK0EM4/edit#heading=h.wbe6wnc7fg59&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;german notes and talk prep&lt;/a&gt;

 are now also available here:&lt;/p&gt;
&lt;h1 id=&#34;metaverse&#34;&gt;
    &lt;a href=&#34;#metaverse&#34;&gt;
	Metaverse
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The term &amp;ldquo;Metaverse&amp;rdquo; was initially coined by Neal Stephenson in 1992, but in the context of the current discussion it was defined as in &lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

 by Matthew Ball. Ball later &lt;a href=&#34;https://www.matthewball.vc/the-metaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wrote a lot more about the same&lt;/a&gt;

, and that led to the current Valley Hype around it.&lt;/p&gt;
&lt;p&gt;We are starting with games, who no longer are what they started out as, but somehow transcended:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fortnite by Epic Games, which now also hosts non-Fortnite events,&lt;/li&gt;
&lt;li&gt;Roblox, a platform to make and host low-end games, and&lt;/li&gt;
&lt;li&gt;Minecraft in the Java and Bedrock editions, to show how both fail differently.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fortnite&#34;&gt;
    &lt;a href=&#34;#fortnite&#34;&gt;
	Fortnite
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Fortnite originally was a Battle Royale game, but is now also a platform that can host events. You can also buy skins for your characters or items, often in a partnership with other IP, for example Marvel/DC super heroes.
People gave concerts in there, or hosting other events.
Epic likes to do this, openly, because it establishes Fortnite with people who are not originally interested in Battle Royale or part of gaming culture.&lt;/p&gt;
&lt;p&gt;Epic Games also makes the Unreal Engine, and the associated pipelines for creating and editing in-game assets, hosts a market to sell these things, and is building a living infrastructure to produce games, and market them.
They are in a way the invisible back-cover of many games.&lt;/p&gt;
&lt;h2 id=&#34;roblox&#34;&gt;
    &lt;a href=&#34;#roblox&#34;&gt;
	Roblox
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Similarly, but way more casual, Roblox operates a platform to create, host and market low-end games, &amp;ldquo;making games as a game&amp;rdquo;, and matching this, they also have assets, and an asset and game marketing outlet.
Roblox is mostly a thing with young and very young people, and vastly underrated with older people.&lt;/p&gt;
&lt;h2 id=&#34;minecraft-in-two-flavors&#34;&gt;
    &lt;a href=&#34;#minecraft-in-two-flavors&#34;&gt;
	Minecraft in two flavors
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft is a classic: The original game is written in Java, and meanwhile completely replaceable with third party components. There are alternative clients, alternative servers, and alternative assets.
The game is bad: It is a sandbox without much story, an ill-defined goal and primitive graphics, the original servers are slow and buggy.&lt;/p&gt;
&lt;p&gt;But the graphics are simple enough that even old potato computers can render it.
It is written in Java, which can be easily reversed and extended without cooperation from the vendor.
And thus there is an extremely rich community of modders, server and client plugins, and many other extensions.
As such, Minecraft is a gateway drug into Java programming with young people, because it has unlimited potential for self-motivation and initiates undirected and unprompted learning in many people.&lt;/p&gt;
&lt;p&gt;None of that leads to monetization that the current owner, Microsoft, can hook on.
As an IP asset, Minecraft Java is an utter failure, because after the initial purchase Microsoft is no longer part of the value chain.&lt;/p&gt;
&lt;p&gt;That is why there is &amp;ldquo;Minecraft Bedrock Edition&amp;rdquo;, more performant, better designed and from the ground up with an asset marketplace.
You can buy Bedrock extensions in that marketplace, and only there.
As a maker of extensions, you will have to license IP from Microsoft, and pay percentages, as a customer anyway.
With gamers, it is not very popular, sterile, and without its own subculture.
Compared to the Java Edition, an even bigger failure.&lt;/p&gt;
&lt;p&gt;The Bedrock model is comparable to the Apple Developer mode, but smaller in scope:
You can&amp;rsquo;t seriously develop for Apple machines without having an Apple-ID, a developer license, support for Apple Cloud for handover, and without leaving percentages to the Apple Store.
Bedrock copies that model, but not as a Computer-Tablet ecosystem, only as a game, and that did not take off.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-a-first-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-a-first-definition&#34;&gt;
	Metaverse: A first definition.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The definition of &amp;ldquo;Metaverse&amp;rdquo; is hence less 3D goggles, and more &amp;ldquo;Integration of the gaming industry with the value chain of the entertainment industry for an open digital asset market&amp;rdquo;.
Or more open: siphoning off percentages along the gaming value chain during production, marketing and usage, and improving the value of gaming assets by partnering with entertainment properties and using their IP in gaming contexts.&lt;/p&gt;
&lt;p&gt;The objective is to get more lifetime consumer budget out of a person, without bothering them too much by investing actual time.
We want to extend the scope of &amp;ldquo;sellable media&amp;rdquo; in the widest sense.&lt;/p&gt;
&lt;h2 id=&#34;attention-and-time-budgets&#34;&gt;
    &lt;a href=&#34;#attention-and-time-budgets&#34;&gt;
	Attention and time budgets
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;People have monetary limits, &lt;a href=&#34;https://en.wikipedia.org/wiki/Disposable_and_discretionary_income&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the consumption part of disposable income&lt;/a&gt;

.
They also have time limits, an attention budget.
Both are convertible, but that is media dependent.&lt;/p&gt;
&lt;p&gt;Assuming a useful lifetime of 60 years for media consumption, during that time I could read for example one book per week, for a total of 40 books per year.
In a total lifetime, that are 2400 books, at - say - 30 Euro each.&lt;/p&gt;
&lt;p&gt;With AAA games, one can do around 4-6 of them per year, 240-300 in a lifetime, at a value of around 60 Euro each.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a total lifetime value of around 70k Euro in books, or 20k Euro in games per person.&lt;/p&gt;
&lt;p&gt;We can see that games are too cheap compared to their production cost, but a higher price than 60 Euro is unrealistic even for AAA titles.
That is one reason why each and every game has additional ways of spending money after purchase.&lt;/p&gt;
&lt;p&gt;In general with both media types, there is a lot of my lifetime attention span bound for comparatively little money:
We need to up the burn rate.
Books, movies and especially AAA games are much too valuable per time and their consume binds too much attention for the business to scale up.
We need a different way to extract money that does not bind as many minutes of person-lifetime and attention.&lt;/p&gt;
&lt;p&gt;That is critically important, because there is also a lot of free content which competes for attention with our paid for assets, and which often is &amp;ldquo;good enough&amp;rdquo; to bind time which we then cannot monetize.&lt;/p&gt;
&lt;h2 id=&#34;a-sidebar-death-and-inheritances&#34;&gt;
    &lt;a href=&#34;#a-sidebar-death-and-inheritances&#34;&gt;
	A sidebar: death and inheritances
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;With an aging population there is the sidebar &amp;ldquo;boomers die, their children inherit&amp;rdquo;.
For example, right now I have around 600 Steam titles, and around 1000 Kindle books.
When I die this represents multiple 10k Euro of value.
How can my son inherit this?
Politics has no answers, and the vendors say &amp;ldquo;he won&amp;rsquo;t&amp;rdquo;.
I can only leave my Steam login to my son, and crack the DRM of my Kindle titles.&lt;/p&gt;
&lt;p&gt;Economically, Kindle and Steam inheritances are largely irrelevant, or would be even be positive, and it is unclear why vendors are blocking this.&lt;/p&gt;
&lt;p&gt;When I am inheriting a villa at the lake, I can go in, open the veranda, walk down through the park to the shore and enjoy the asset within minutes.
It does not take much time.&lt;/p&gt;
&lt;p&gt;Inheriting my Kindle and Steam library, my son will need to invest a lot of time to enjoy that:
With 1200 books that will bind 30 years of lifetime,  and with an inheritance of 1000 games there will be titles from 2002 that look like drawn with crayons today.
I am inheriting &amp;ldquo;Skyrim&amp;rdquo;, but I will have to purchase the &amp;ldquo;VR&amp;rdquo; and &amp;ldquo;Remastered&amp;rdquo; editions of that myself.&lt;/p&gt;
&lt;p&gt;We can see immediately that this will hardly lead to a loss in revenue for vendors, in some cases it is more like a kind of advertisement, actually.&lt;/p&gt;
&lt;h2 id=&#34;assets-high-budget-little-time&#34;&gt;
    &lt;a href=&#34;#assets-high-budget-little-time&#34;&gt;
	Assets: high budget, little time
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Even today, games offer loot boxes, pay-to-win and pay-to-skip purchases, and they sell cosmetics. Unlike the first three, the last one is hardly controversial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay-to-Win: to finish the game successfully you have to buy equipment with real money. Ideally this becomes apparent only of tou already are invested in the game emotionally and with lifetime.&lt;/li&gt;
&lt;li&gt;Pay-to-Skip: gameplay is often interrupted with annoying delays in which you can&amp;rsquo;t play, except you purchase immediate continuations with real money.&lt;/li&gt;
&lt;li&gt;Lootboxes: The game sells containers with &amp;ldquo;random&amp;rdquo; in-game assets to you, some of which are very important in the context of the game. The actual game is just a wrapper for an addictive (and usually rigged) game of chance. The practice is already illegal as unregulated gambling in several EU countries.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contrary to this, cosmetics are widely accepted: These are assets that change the way the character or their equipment looks like, without affecting gameplay. Also, virtual houses and house furnishings that have no effect on gameplay.&lt;/p&gt;
&lt;p&gt;For example, in &amp;ldquo;Elder Scrolls Online&amp;rdquo; as a player you can get easily and early in-game houses which are spectacularly located, and have a lot of empty space for decorations.
Furnishings to decorate the house can be gotten as trophies in-game, but every day things can only be gotten by using real money and purchase from the shop.&lt;/p&gt;
&lt;p&gt;This has many desirable properties for the vendor:
The player can spend a lot of money (without limits!) in-game, and hardly has to invest time or attention to make use of these assets.
We are no longer revenue-bound by the players&amp;rsquo; attention budget.
This is a much better thing to sell than books, films or the games themselves.
The game only provides context and reason for the cosmetics to exist, and defines their visuals.&lt;/p&gt;
&lt;h2 id=&#34;epic-games&#34;&gt;
    &lt;a href=&#34;#epic-games&#34;&gt;
	Epic Games
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This is precisely the operating model of Epic Games:
With the Unreal Engine the company owns a platform for the fast and efficient design and rendering of really good-looking games.
This also includes the tooling for making in-game assets, but also a market to sell these to other game developers.
With the Epic Launcher and the integrated shop this is also a platform for game sales, and to collect meta and usage data for Epic, which again (for money) are sold back to the developer as analytics.
Epic operates a payment system, which pipes money from the customer to the developer, not only for games, but also for extensions, DLC and in-game purchases.&lt;/p&gt;
&lt;p&gt;With Fortnite, Epic has their own game, which at the same time can also sell 3D assets to players as equipment, cosmetics and other things.&lt;/p&gt;
&lt;p&gt;Fortnite is a special kind of game - player vs. player, battle royal - players play against each other and last man standing wins the round.
This kind of game is not interesting for all target demographics, but the engine of Fortnite is flexible and can be repurposed.
This enables other use-cases, among them also as a &amp;ldquo;virtual event platform&amp;rdquo;, which also keeps the interest up through media tie-ins and licensed IP.&lt;/p&gt;
&lt;p&gt;The interpretation of &amp;ldquo;The Metaverse&amp;rdquo; as a value chain for digital assets, specifically 3D assets, is too short-sighted:
As an ecosystem with a controlled number of large market operators and a very large numbers of content creators and customers the foundations will look better and have better longevity.
It is entirely possible to allow third parties to operate in this &amp;ldquo;virtual world&amp;rdquo;, trade with each other, especially if the market operators at all times get a tiny share from each transaction.
This is the idea of the &amp;ldquo;Microsoft tax&amp;rdquo;, revitalized.&lt;/p&gt;
&lt;h1 id=&#34;players-in-this-market&#34;&gt;
    &lt;a href=&#34;#players-in-this-market&#34;&gt;
	Players in this market
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Different parties have different starting positions and strengths:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Epic Games/Fortnite - weak in IP, but some original IP, even if niche. Unreal Engine and other things on the &amp;ldquo;games invisible back-cover&amp;rdquo; as a big strength.&lt;/li&gt;
&lt;li&gt;Roblox - original IP, very young customers, grooms them into future customers, wait 10 years.&lt;/li&gt;
&lt;li&gt;Microsoft - Minecraft, MS Store et al., too enterprise for success? But Halo, MSFS.&lt;/li&gt;
&lt;li&gt;Apple (sic!) - no IP, but platform/chain.&lt;/li&gt;
&lt;li&gt;Disney (sic!) - only IP, but weak marketing outside of films/merchandise. Knows the game very well in the real world: Imagine Disneyland principles applied to a Metaverse.&lt;/li&gt;
&lt;li&gt;Facebook - wants in at all costs, &amp;ldquo;pivot our enterprise&amp;rdquo;: If &amp;ldquo;social&amp;rdquo; of the future is &amp;ldquo;here&amp;rdquo;, we need to be &amp;ldquo;here&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Google - all of this is a reason why Stadia still exists, despite being a flop.&lt;/li&gt;
&lt;li&gt;Amazon - this is where the gaming strategy of Amazon is anchored. Amazon would like to be the AWS of the gaming world, instead of Epic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tech-maturity-cycle-and-standards&#34;&gt;
    &lt;a href=&#34;#tech-maturity-cycle-and-standards&#34;&gt;
	Tech Maturity Cycle and standards
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cynefin_framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cynefin&lt;/a&gt;

 as a Market Maturity Model.&lt;/p&gt;
&lt;p&gt;We are in the chaotic phase of market maturity:
Nobody has a business model for this.
It is unclear what the market will look like, what the standards are.&lt;/p&gt;
&lt;p&gt;This is the landgrab phase, building market share in a new and emerging market.
Interop is secondary, because the future standards are not yet visible.
Player try to differentiate themselves with features, also to find out which features matter.
All players grow in a growing market.&lt;/p&gt;
&lt;p&gt;As soon as a business model and stable feature lists exists and there is a system for money extraction the market can consolidate.
As always, 3-5 companies will dominate the market, which is dropping out of hypergrowth.
The dominating companies acknowledge their respective existence and roles, and compete semi-cooperatively:
It is more important to erect barriers to entry for disruptors than to destroy the existing competition, and hence there will be complex, hard to implement standards with expensive compliance tests.
This will then, against all wishes, lead to interoperability.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-revised-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-revised-definition&#34;&gt;
	Metaverse, revised definition
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So we get:
The Metaverse is an integration of the gaming industry with the entertainment industry, and the merging of their value chains, optionally extracting a transactional tax at any point of the value chain.
The objective is to monetize the lifetime intellectual consumption budget of any person, and extending the market of products relevant to that person, decoupling spend from attention.&lt;/p&gt;
&lt;p&gt;A main result is that books, films and games bind too much time to consume and limit spend.
3D assets are a better sale binding for less time.&lt;/p&gt;
&lt;p&gt;This is also the backdrop to read &amp;ldquo;Epic vs. Apple and Google&amp;rdquo; properly:
This is about opening the monopolistic markets these companies have for their hardware products, and allow other companies to monetize their walled gardens with their own offerings directly.&lt;/p&gt;
&lt;p&gt;The german outlook is dreary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lacking highspeed, low latency infrastructure for gaming.&lt;/li&gt;
&lt;li&gt;lacking a German company with identity platforms (&amp;ldquo;Login with x&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;lacking resources and companies with 3D asset tooling, production, marketplaces.&lt;/li&gt;
&lt;li&gt;lacking German film/tv/literature IP that can be integrated with any of this, especially on a global scale.&lt;/li&gt;
&lt;li&gt;German companies and culture looks inward, into the own country, not towards a global cultural base.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Compare with Korea: Korean production chains in K-Pop; Korean &amp;ldquo;cultural technology&amp;rdquo; that integrated other cultures styles and art and integrates it into K-Pop; production and grooming pipelines for stars and starlets; emerging similar chains for IP.&lt;/p&gt;
&lt;p&gt;In comparison, Germany counts as unarmed.&lt;/p&gt;
&lt;h2 id=&#34;toxic-dystopic-interpretation&#34;&gt;
    &lt;a href=&#34;#toxic-dystopic-interpretation&#34;&gt;
	Toxic-dystopic interpretation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Property&amp;rdquo; in a simulated reality looks like property, but is virtual and can be duplicated easily.
Virtualization removes resource constraints in production, but &amp;ldquo;value&amp;rdquo; is only created by uniqueness in consumption.&lt;/p&gt;
&lt;p&gt;The platform operators and &amp;ldquo;tax&amp;rdquo; authorities have full market transparency and can meter the time spent and consumption habits of everybody.
They know what you look at and listen to, what you are using, which styles you like and can sell this data for money to creators. They will also sell access to you to creators.&lt;/p&gt;
&lt;p&gt;A friend of mine:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HHOS: in the future at birth of child, you will first have to decide which corporate tribe it joins and then find a name compliant with that tribes rules. Switching between tribes is as complicated as an emigration to or from North Korea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A central building block is also DRM, here under the marketing name of &amp;ldquo;NFT&amp;rdquo;. NFT is the blockchain word for DRM, only with added destruction of the planet.&lt;/p&gt;
&lt;p&gt;Unique things are only possible with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;locking the machine&lt;/li&gt;
&lt;li&gt;TPM,&lt;/li&gt;
&lt;li&gt;in-game only licensed assets and mods usable, and&lt;/li&gt;
&lt;li&gt;NFT Laser Eyes crypto bullshit that burns the planet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this context also the current engagement of Epic in the NFT bull.
Proper standards will be important, and &amp;ldquo;identity&amp;rdquo; is central for &amp;ldquo;property&amp;rdquo;.
This does not need blockchain, and will work better without - the platforms are central anyway.&lt;/p&gt;
&lt;p&gt;My friend, commenting further:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is important to bind these people into this universe (&amp;ldquo;Hyperinclusion&amp;rdquo;).
They buy in the metaverses store, date their partners in metaverse locations, watch ads for products only available in the metaverse, and can hardly formulate metaverse critical thinking.
There is no public space anymore, everything is part of the gated community (cf loss of the almende).&lt;/p&gt;
&lt;p&gt;There may be competition between a small number of metaverses, but within one metaverse there is only managed competition.
That is, the metaverse monopolizes a life in its totality.&lt;/p&gt;
&lt;p&gt;That is a lot like mining towns in the US in the late 19th century.
The shop was owned by the mine, the priest was employed by the mine, and the sheriff and mayor were mine employees.&lt;/p&gt;
&lt;p&gt;Effectively the FB strategy is to make their social media monopoly permanent.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This leads us to&lt;/p&gt;
&lt;h2 id=&#34;currency&#34;&gt;
    &lt;a href=&#34;#currency&#34;&gt;
	Currency
    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Cryptocurrencies have demonstrated to large players that money creation is now &amp;ldquo;up for grabs&amp;rdquo;.
A metaverse is a very good environment to realize that &amp;ldquo;en passant&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, watch the Epic engagement in crypto for details.
This is problematic:
Metaverse and production in it takes resources from the real world, but does not produce value for the real world.
The real world is getting poorer, but that is where we live.
What does that mean long term for the creation of value and money?&lt;/p&gt;
&lt;h1 id=&#34;material&#34;&gt;
    &lt;a href=&#34;#material&#34;&gt;
	Material
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;URL collection&lt;/p&gt;
&lt;h2 id=&#34;golem-auf-der-suche-nach-dem-wal&#34;&gt;
    &lt;a href=&#34;#golem-auf-der-suche-nach-dem-wal&#34;&gt;
	Golem &amp;ldquo;Auf der Suche nach dem Wal&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.golem.de/news/geschaeftsethik-bei-videospielen-auf-der-suche-nach-dem-wal-2110-160163.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Auf der Suche nach dem Wal&lt;/a&gt;

&amp;rdquo;, a video game growth manager (German article).&lt;/p&gt;
&lt;h2 id=&#34;colorado-law-review-dark-patterns&#34;&gt;
    &lt;a href=&#34;#colorado-law-review-dark-patterns&#34;&gt;
	Colorado Law Review Dark Patterns
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Link from the above.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.google.com/url?q=https://lawreview.colorado.edu/printed/when-the-cats-away-techlash-loot-boxes-and-regulating-dark-patterns-in-the-video-game-industrys-monetization-strategies/%23IV_Broad_Guidance_for_Crafting_Effective_Dark_Pattern_Regulation_in_the_Video_Game_Industry&amp;amp;sa=D&amp;amp;source=docs&amp;amp;ust=1635284752797000&amp;amp;usg=AOvVaw30IDuuhFqtcvDbNj32joER&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;When the Cat’s Away: Techlash, Loot Boxes, and Regulating “Dark Patterns” in the Video Game Industry’s Monetization Strategies&lt;/a&gt;

&amp;rdquo;,
Sektion &amp;ldquo;IV. Broad Guidance for Crafting Effective Dark Pattern Regulation in the Video Game Industry&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;matthew-ballhttpstwittercomballmatthew&#34;&gt;
    &lt;a href=&#34;#matthew-ballhttpstwittercomballmatthew&#34;&gt;
	&lt;a href=&#34;https://twitter.com/ballmatthew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matthew Ball&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

: Original Metaverse Article&lt;/p&gt;
&lt;p&gt;Media side:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the time Netflix launched its streaming service, much of Hollywood knew that the future of television was online (IP TV had been deployed in the late 1999s). The challenge was timing and how to package such a service (it took another 10 years for Hollywood to accept all of their channels, genres and content needs to be collapsed into a single app/brand).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ball writes:&lt;/p&gt;
&lt;p&gt;The Metaverse, we think, will be &amp;hellip;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Persistent.&lt;/li&gt;
&lt;li&gt;Synchronous and live.&lt;/li&gt;
&lt;li&gt;Be without any cap to concurrent users, while also providing each user with an individual sense of “presence”&lt;/li&gt;
&lt;li&gt;Be a fully functioning economy&lt;/li&gt;
&lt;li&gt;Be an experience that spans both the digital and physical worlds, private and public networks/experiences, and open and closed platforms&lt;/li&gt;
&lt;li&gt;Offer unprecedented interoperability of data, digital items/assets, content, and so on across each of these experiences&lt;/li&gt;
&lt;li&gt;Be populated by “content” and “experiences” created and operated by an incredibly wide range of contributors&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Metaverse is not…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A “virtual world”&lt;/li&gt;
&lt;li&gt;A “virtual space”  (2nd life)&lt;/li&gt;
&lt;li&gt;“Virtual reality”&lt;/li&gt;
&lt;li&gt;A “digital and virtual economy”&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;game&amp;rdquo;&lt;/li&gt;
&lt;li&gt;A “virtual theme park or Disneyland”&lt;/li&gt;
&lt;li&gt;A “new app store”&lt;/li&gt;
&lt;li&gt;A “new UGC platform”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That is, of course, nonsense, it will be all of these things, &lt;em&gt;too&lt;/em&gt;.
This is Valley Hype to make the Next Internet sellable, and to have a common tale to tell.
But in the end this is all about the things it is supposedly NOT.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/the-metaverse-primer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nine newer longer articles&lt;/a&gt;

 on this.&lt;/p&gt;
&lt;h2 id=&#34;fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
    &lt;a href=&#34;#fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
	&lt;a href=&#34;https://twitter.com/DuddyAlan233/status/1391884040547049473&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fortnite Loyalty Program&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Keep up engagement and interest.
A problem for any MMO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People don&amp;rsquo;t live in the metaverse, the live here.&lt;/li&gt;
&lt;li&gt;Primary consumption is casual, not high-end gamer.&lt;/li&gt;
&lt;li&gt;That is the weakness of the concept, esp Facebook.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It can only become a Metaverse if it becomes a permanent place.
That&amp;rsquo;s still a long road to travel.&lt;/p&gt;
&lt;p&gt;My VR goggles are sitting around, idle (sold the Oculus because mandatory FB account).
That is, because &amp;ldquo;entering VR&amp;rdquo; is an act (set things up, calibrate), and the goggles isolate (when I put them on, I am &amp;ldquo;gone&amp;rdquo;), and because it is used only by very few games.&lt;/p&gt;
&lt;h2 id=&#34;epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
    &lt;a href=&#34;#epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
	&lt;a href=&#34;https://twitter.com/thegamespodcast/status/1450468392952115233&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Epic and Facebook: The Race called Metaverse&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;h2 id=&#34;pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
    &lt;a href=&#34;#pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
	&lt;a href=&#34;https://twitter.com/PastryEth/status/1423803492314009606&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pastry Eth Thread&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Crypto bullshit with a few good ideas, but also illusions/lies about what will happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;1/5 of FB now working on AR&amp;rdquo;, FB looks at Metaverse as &amp;ldquo;Oculus&amp;rdquo;, &amp;ldquo;VR&amp;rdquo;. That&amp;rsquo;s dangerous tunnel vision.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The &amp;ldquo;Metaverse&amp;rdquo; is a virtual space created by the convergence of virtually enhanced physical reality, AR &amp;amp; the Internet: Our current 2D search based version of the Internet is giving way to a fully 3D immersive reality&amp;rdquo;: bullshit, unless consumption becomes casual. 3D Assets in Pancake Games are easier to sell &amp;ldquo;Cosmetics&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Metaverse is always “on” &amp;amp; is beyond the control of any individual. It exists in real time, can host any size audience, has a functioning economy, spans across platforms, provides interoperability for digital assets, &amp;amp; consists of the content and experiences its users create.&amp;rdquo; That is 2nd 2nd life as a concept, and  &amp;ldquo;3D Shoppingmalls&amp;rdquo; of the early 90ies revived. As a concept not wrong, and at the same time completely wrong.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;In the Metaverse, the earning power for young creators won’t be limited to the top 1%. There will be an entire new era of young entrepreneurs making a living in virtual worlds, earning real value and steady income quicker than ever imagined.&amp;rdquo; LOL. Mainly this is about a microsoft tax, that will siphon off money from creators along the way.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Creators who were once limited in their ability by technological constraints, lack of capital, time, or creativity, now have everything that is needed. What happens when physical objects are dematerialized? All formerly scarce materials become abundant.&amp;rdquo; LOL. DRM all the way is a requirement to make this work. Also, the permanent promise of creators paradise, when this is really about monopolization of the value chain.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
    &lt;a href=&#34;#digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
	&lt;a href=&#34;https://www.dezeen.com/2021/07/23/digital-twins-metaverse-david-weir-mccall-epic-games/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Digital Twins&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Digital twins will act as &amp;ldquo;foundations of the metaverse&amp;rdquo; and allow people to move between real and virtual spaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again &amp;ldquo;2nd 2nd Life&amp;rdquo;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Skeuomorph&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Skeumorphism&lt;/a&gt;

 is what we do with new tech that does not yet have its own design language. The first cars looked like coaches, and the first Apple applications mimicked Rolodexes and Moleskines. &amp;ldquo;Digital Twins&amp;rdquo; is the same thing.&lt;/p&gt;
&lt;p&gt;Core idea:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In April 2020, music artist Travis Scott staged a virtual concert inside the game that was attended live by 12.3 million people. It was a global phenomenon that sent the American rapper to the top of all music charts and earned him a reported $20 million.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read: &amp;ldquo;OMG, somebody has used a children&amp;rsquo;s battle royale to earn money without shooting players, but with traditional media work.&amp;rdquo;, and we are back to &amp;ldquo;all the ideas of 2nd life we know are problematic may still be valid again&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If the metaverse is an equivalent reality that coexists next to the physical reality, there needs to be a connection,&amp;rdquo; said Weir-McCall.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Does not need that at all. If, then more likely as AR than as 3D models, because connections to the real world is what you lose with 3D VR goggles. Casual is king.&lt;/p&gt;
&lt;h2 id=&#34;facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-and-acceptance&#34;&gt;
    &lt;a href=&#34;#facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-and-acceptance&#34;&gt;
	&lt;a href=&#34;https://www.reuters.com/technology/facebook-unveils-its-first-smart-glasses-2021-09-09/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebook Glass&lt;/a&gt;

 and acceptance
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Google Goggle were identifiable and their users vilified as glassholes.
Facebook is using Ray Bay to cover that.
There is no technical relationship between Oculus and AR.
This is about hiding the tech in the goggles to make it acceptable, and prevent a Facebook glasshole effect.
Also, AR is more casual than VR.
Fashion also allows easier re-sales of the same item, see also Apple Watch accessories.&lt;/p&gt;
&lt;h2 id=&#34;laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
    &lt;a href=&#34;#laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
	&lt;a href=&#34;https://twitter.com/Cryptomarsmoon/status/1448249433573904384&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Laser Eyes&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s gonna be epic to bring the squid game to the metaverse. Salute to your team! I am a big fan of the TV series. I am super excited to have a chance to participate in this game! LFG!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More Laser Eyes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaverse</title>
      <link>https://blog.koehntopp.info/2021/10/26/metaverse.html</link>
      <pubDate>Tue, 26 Oct 2021 20:55:51 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/26/metaverse.html</guid>
      <description>&lt;p&gt;Ich &lt;a href=&#34;https://twitter.com/isotopp/status/1450739310546886657&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;schrieb auf Twitter&lt;/a&gt;

 was zum aktuellen Begriff &amp;ldquo;Metaverse&amp;rdquo;.
Das hat zu einem Kontakt mit &lt;a href=&#34;https://twitter.com/michacarl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Michael Carl&lt;/a&gt;

 geführt, der mich in seinem &lt;a href=&#34;https://carls-zukunft.de/folge-58-how-to-build-a-metaversum-in-three-simple-steps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast&lt;/a&gt;

 haben wollte.
Meine &lt;a href=&#34;https://docs.google.com/document/d/1_OIl_bcrjVczLQrMrVnt5IoYbitp1504mb2GbQK0EM4/edit#heading=h.wbe6wnc7fg59&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gesprächsnotizen und Vorbereitung&lt;/a&gt;

 habe ich nun auch hier:&lt;/p&gt;
&lt;h1 id=&#34;metaverse&#34;&gt;
    &lt;a href=&#34;#metaverse&#34;&gt;
	Metaverse
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der Begriff &amp;ldquo;Metaverse&amp;rdquo; stammt ursprünglich von Neal Stephenson, aus dem Jahre 1992, aber er ist im aktuellen Kontext von Matthew Ball in &lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

 mit Sinn gefüllt worden. Ball hat dann später &lt;a href=&#34;https://www.matthewball.vc/the-metaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mehr zum Thema&lt;/a&gt;

 geschrieben, und so den aktuellen Silicon Valley Hype erzeugt.&lt;/p&gt;
&lt;p&gt;Die Überlegung beginnt mit Spielen, die nicht mehr sind, was sie mal waren, sondern irgendwie mehr geworden sind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fortnite von Epic Games, in der nun auch Nicht-Fortnite-Aktivitäten stattfinden,&lt;/li&gt;
&lt;li&gt;Roblox, eine Plattform zur spielerischen Generierung von Computerspielen, und&lt;/li&gt;
&lt;li&gt;Minecraft in der Java- und der Bedrock-Edition, um zu zeigen, wie beides auf seine Weise unternehmerische Fehlschläge sind.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fortnite&#34;&gt;
    &lt;a href=&#34;#fortnite&#34;&gt;
	Fortnite
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Fortnite war mal Battle Royale, aber ist inzwischen auch eine &amp;ldquo;Veranstaltungsplattform&amp;rdquo;, man kann dort Skins kaufen, Partnerschaften mit anderem IP, zum Beispiel Marvel/DC Super Heroes.
Leute haben dort Konzerte gegeben oder andere Veranstaltungen durchgeführt.
Epic unterstützt das, recht offen, weil es Fortnite so auch bei Leuten bekannt macht, die an Battle Royal und Gamer-Kultur nicht primär interessiert sind.&lt;/p&gt;
&lt;p&gt;Epic Games macht auch die Unreal Engine, und die dazu gehörenden Pipelines zum Erstellen und Editieren von digitalen Game-Assets, betreibt einen Markt für diese Dinge und baut auch sonst eine lebendige Infrastruktur zur Spielerzeugung und zur Vermarktung auf.
Gewissermaßen ist dies die unsichtbare &amp;ldquo;Rückseite&amp;rdquo; von Spielen.&lt;/p&gt;
&lt;h2 id=&#34;roblox&#34;&gt;
    &lt;a href=&#34;#roblox&#34;&gt;
	Roblox
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ganz ähnlich, aber viel mehr casual betreibt Roblox sowieso eine Plattform zur Erzeugung von Spielen, und macht so Assets, aber auch einen Markt für Assets.
Roblox ist vor allen Dingen bei jungen und sehr jungen Menschen populär, und wird bei älteren Menschen weit unterschätzt.&lt;/p&gt;
&lt;h2 id=&#34;minecraft-in-zwei-geschmacksrichtungen&#34;&gt;
    &lt;a href=&#34;#minecraft-in-zwei-geschmacksrichtungen&#34;&gt;
	Minecraft in zwei Geschmacksrichtungen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft ist ein Klassiker: Das originale Minecraft ist in Java geschrieben und inzwischen komplett durch Komponenten von Drittherstellern ersetzbar. Es gibt alternative Clients, alternative Server, alternative Assets.
Das Spiel ist schlecht: Es ist eine Sandbox ohne viel Story und ohne Spielziel mit primitiver Grafik, die originalen Server sind langsam und fehlerhaft.&lt;/p&gt;
&lt;p&gt;Aber die Grafik ist simpel, sodass das Spiel auch auf abgelegten Kartoffelcomputern funktioniert.
Es ist alles in Java geschrieben, das sich leicht reversen und dann unkooperativ erweitern lässt, und so gibt es eine reichhaltige Community mit Moddern, Server- und Client-Plugins, und vielen anderen Erweiterungen.
Das macht das Spiel populär und zu einer &amp;ldquo;Einstiegsdroge&amp;rdquo; in die Java-Programmierung bei jungen Menschen, weil es ein unglaubliches Potenzial für Selbstmotivation bietet.&lt;/p&gt;
&lt;p&gt;Nichts davon ist durch den derzeitigen Eigentümer Microsoft monetarisierbar.
Als IP ist Minecraft für Microsoft gescheitert, weil Microsoft nach dem Kauf des Spiels nicht mehr Teil der Verwertungskette ist.&lt;/p&gt;
&lt;p&gt;Daher gibt es von Microsoft &amp;ldquo;Minecraft Bedrock Edition&amp;rdquo;, performanter und besser designt, und von Grund auf mit einem Asset-Markt integriert.
Erweiterungen für Bedrock sind im Laden kaufbar, und nur dort.
Man muss als Anbieter IP von Microsoft lizenzieren und dann Prozente zahlen, als Kunde sowieso.
Bei den Spielern ist es deswegen kaum populär, steril und ohne eigene Kultur.
Im Vergleich zu Java Edition noch ein größerer Fehlschlag.&lt;/p&gt;
&lt;p&gt;Das Bedrock-Modell ist vergleichbar mit dem Apple Entwicklermodell, aber kleiner im Scope:
Man kann nicht ernsthaft für Apple entwickeln ohne Apple-ID, Entwickler-Lizenz, Cloud-Nutzung für Handover und Storage und ohne Prozente im Apple Store zu bezahlen.
Bedrock ist danach modelliert, aber halt kein Computer-Tablet-ökosystem, sondern nur ein Spiel.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-eine-erste-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-eine-erste-definition&#34;&gt;
	Metaverse: Eine erste Definition
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Die tatsächliche Definition von &amp;ldquo;Metaverse&amp;rdquo; sind also nicht 3D-Brillen, sondern &amp;ldquo;die Integration der Computerspieleindustrie mit der Wertschöpfungskette der Unterhaltungsindustrie für einen offenen, digitalen Assetmarkt&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Oder offener: Das Anzapfen der Spieleverwertungskette an jeder Stelle im Produktionsfluß, und das Aufwerten der Spieleverwertungskette durch Integration mit Intellectual Property aus Filmen und Büchern.&lt;/p&gt;
&lt;p&gt;Es geht also darum, aus dem Lebenszeit-Konsum-Budget einer Person mehr Geld herauszuziehen, ohne zu viel Lebenszeit bei dieser Person zu verbrauchen, also um eine Aufweitung von Ausgaben für &amp;ldquo;Medien&amp;rdquo; im aller weitesten Sinne.&lt;/p&gt;
&lt;h2 id=&#34;budgets-für-aufmerksamkeit-und-geld&#34;&gt;
    &lt;a href=&#34;#budgets-f%c3%bcr-aufmerksamkeit-und-geld&#34;&gt;
	Budgets für Aufmerksamkeit und Geld
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Menschen haben Geldlimits für ihre Freizeit, der &lt;a href=&#34;https://de.wikipedia.org/wiki/Verf%C3%BCgbares_Einkommen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Konsumanteil des verfügbaren Einkommens&lt;/a&gt;

.
Sie haben auch Zeitlimits für ihre Freizeit, ein Budget für Aufmerksamkeit.
Beides ist konvertibel, aber das hängt am Medium.&lt;/p&gt;
&lt;p&gt;Nimmt man eine nützliche Lebenszeit, in der ich &amp;ldquo;Lesen&amp;rdquo; kann von 60 Jahren an, und unterstellt man einem fleißigen Leser 40 Bücher (eines pro Woche) im Jahr, dann wird diese Person in ihrem Leben 2400 Bücher lesen, im Wert von sagen wir ~30 Euro pro Stück.&lt;/p&gt;
&lt;p&gt;Arbeitet man mit Computerspielen der AAA-Klasse, dann schafft man eventuell 4-6 Spiele im Jahr sinnvoll durchzuspielen, also im Leben 240-300 Titel, im Wert von ~60 Euro pro Stück.&lt;/p&gt;
&lt;p&gt;Das setzt eine Größenordnung von Lebensumsatz pro Person für diese Dinge, also ~70k Euro in Büchern oder 20k Euro in Spielen pro Personenleben.&lt;/p&gt;
&lt;p&gt;Wir sehen insbesondere, daß Spiele im Vergleich zu ihrem Produktionsaufwand viel zu billig sind, aber ein höherer Preis als 60 Euro ist auch für einen AAA-Titel nicht durchsetzbar.
Das ist einer der Gründe, warum in jedem einzelnen dieser Spiele weitere Möglichkeiten zum Geldausgeben enthalten sind.&lt;/p&gt;
&lt;p&gt;Generell ist es aber bei beiden Medien so, daß das Geldausgeben im Vergleich zu der aufgewendeten Zeit zu langsam ist:
Die Burnrate muss hoch.
Bücher, aber auch Filme und insbesondere AAA-Titel von Computerspielen sind viel zu werthaltig, und ihr Konsum ist zu aufwendig.
Wir suchen was anderes, bei dem nicht so viele Minuten Lebenszeit pro ausgegebenem Euro aufgewendet werden müsse.&lt;/p&gt;
&lt;p&gt;Das ist kritisch, weil es ja auch noch viele freie Inhalte gibt, die auch um Aufmerksamkeit buhlen und &amp;ldquo;gut genug&amp;rdquo; sind, um bezahlte Inhalte zu verdrängen.
Sie kosten Minuten Aufmerksamkeit, ohne Geld zu verdienen.&lt;/p&gt;
&lt;h2 id=&#34;nebenschauplatz-sterben-und-erben&#34;&gt;
    &lt;a href=&#34;#nebenschauplatz-sterben-und-erben&#34;&gt;
	Nebenschauplatz: Sterben und Erben
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Angesichts der alternden Bevölkerung gibt es auch noch den Nebenschauplatz &amp;ldquo;Boomer sterben, Kinder erben&amp;rdquo;.
Ich habe zum Beispiel genau jetzt ca. 600 Steam Titel und 1000 Kindle Books.
Wenn ich sterbe, sind das einige 10k Euro Wert.
Wie vererbe ich die meinem Sohn?
Die Politik hat keine Antworten, und die Hersteller lassen das nicht zu.
Ich kann meinem Kind also nur mein Steam Login vermachen und von meinen Kindle-Büchern das DRM knacken.&lt;/p&gt;
&lt;p&gt;Wirtschaftlich sind Kindle und Steam-Erbschaften für die Hersteller weitgehend irrelevant, oder wären sogar positiv, und es ist unklar, wieso man sich so sträubt:&lt;/p&gt;
&lt;p&gt;Wenn ein Haus am See erbe, kann ich da hereingehen, die Veranda aufschließen, in den Park gehen und so das Asset genießen.
Das kostet mich nicht viel Zeit.&lt;/p&gt;
&lt;p&gt;Erbe ich dagegen eine Kindle- oder Steam-Library, kostet mich das viel Zeit in der Erschließung:
Wenn ich 1200 Bücher erbe, sind das 30 Jahre Lebenszeit, die ich investieren muss, um das Erbe zu verarbeiten.
Wenn ich 1000 Spiele erbe, sind da Titel von 2002 bei, die heute wie Dreck aussehen.
Ich erbe &amp;ldquo;Skyrim&amp;rdquo;, muss aber &amp;ldquo;Skyrim VR&amp;rdquo; und &amp;ldquo;Skyrim Remastered&amp;rdquo; selbst kaufen.&lt;/p&gt;
&lt;p&gt;Wir sehen sofort: Erben ist für den Hersteller kein relevanter Umsatzverlust, sondern eher noch ein Mittel zur Verkaufsförderung.&lt;/p&gt;
&lt;h2 id=&#34;assets-hoher-geldaufwand-geringer-zeitaufwand&#34;&gt;
    &lt;a href=&#34;#assets-hoher-geldaufwand-geringer-zeitaufwand&#34;&gt;
	Assets: hoher Geldaufwand, geringer Zeitaufwand
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bereits heute ist in Spielen neben Lootboxen und Pay-to-Win und Pay-to-Skip Modellen der Verkauf von Cosmetics eine der größten Einnahmequellen, und im Gegensatz zu den anderen Geldquellen weitgehend unumstritten.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay-to-Win: Das Spiel ist nicht erfolgreich zu beenden, außer man kauft Ausrüstungsgegenstände für Echtgeld dazu. Idealerweise wird das erst sichtbar, wenn man bereits eine Menge Zeit und Emotion in das Spiel investiert hat.&lt;/li&gt;
&lt;li&gt;Pay-to-Skip: Das Spiel wird immer wieder durch ärgerliche Wartepausen unterbrochen, in denen man nicht weiterspielen kann, außer man kauft die Pause durch Echtgeld weg.&lt;/li&gt;
&lt;li&gt;Lootboxen: Das Spiel verkauft einem Container einem zufälligen Inhalt an Spielgegenständen, bei denen selten wertvolle Dinge enthalten sind. Das eigentliche Spiel ist also eine Verpackung für ein Glücksspiel im Inneren. Diese Praxis ist mittlerweile in einigen EU-Ländern verboten.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Im Gegensatz dazu sind Cosmetics weitgehend unumstritten: Das sind Gegenstände, die der Spielfigur und ihrer Ausrüstung ein anderes Aussehen geben, ein virtuelles Haus und seine Einrichtung, die auf das Spiel keine wesentliche Auswirkung haben und ähnliches.&lt;/p&gt;
&lt;p&gt;Im Spiel &amp;ldquo;Elder Scrolls Online&amp;rdquo; zum Beispiel bekommt man als Spieler leicht und zu geringen Kosten virtuelle Wohnhäuser in der Spielwelt, die sehr spektakulär liegen und aussehen und viel leeren Platz bieten.
Gegenstände zum Einrichten kann man sich als Trophäen erspielen, aber wesentliche Alltagsgegenstände zur Einrichtung sind nur via Echtgeld-Einsatz im Shop zu kaufen.&lt;/p&gt;
&lt;p&gt;Das für den Hersteller wunderbare dabei:
Der Spieler kann in den Kauf von Cosmetics beliebig viel Geld reinpumpen und wird dabei kaum Lebenszeit oder Aufmerksamkeit aufbringen müssen.
Limitierend kann also nur die Geldbörse des Kunden wirken, nicht aber sein Zeitbudget.
Das macht so etwas zu einem viel besseren Geschäftsfeld als Bücher, Filme oder die Spiele selbst.
Das Spiel liefert nur den Kontext und Anlass für die Cosmetics zu existieren und bestimmt ihr Aussehen.&lt;/p&gt;
&lt;h2 id=&#34;epic-games&#34;&gt;
    &lt;a href=&#34;#epic-games&#34;&gt;
	Epic Games
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dies ist genau die Geschäftsgrundlage von Epic Games:
Mit der Unreal Engine bietet die Firma eine Plattform zum schnellen und effizienten Design von sehr gut aussehenden Videospielen.
Dazu gehören auch Werkzeuge zum Erzeugen der Ingame-Assets, aber auch der Betrieb einer Verkaufsplattform für solche Assets an Spielhersteller.
Mit dem Epic Launcher und dem darin integrierten Shop auch eine Plattform zum Verkauf von Spielen, und zum Erfassen von Meta- und Nutzungsdaten an Epic, die dann wiederum (gegen Geld) dem Spielhersteller als Analytics angeboten werden.
Das von Epic betriebene Payment-System ist die Pipeline, über die Geld vom Kunden zum Spielhersteller fließen kann, und über die nicht nur die Spiele, sondern auch Erweiterungen, In-Game Käufe und andere Geldausgaben abgewickelt werden können.&lt;/p&gt;
&lt;p&gt;Mit Fortnite hat man aber auch ein eigenes Spiel am Start, das zugleich auch 3D Assets an Endkunden als Ausrüstungsgegenstände, Cosmetics oder sonst wie verkaufen kann.&lt;/p&gt;
&lt;p&gt;Fortnite ist eine bestimmte Sorte Spiel - Player vs. Player, im Battle Royal Modus, Spieler treten gegeneinander an und der letzte Überlebende gewinnt.
Diese Sorte Spiel ist nicht für alle Zielgruppen interessant, aber die Engine von Fortnite lässt sich auch anderweitig nutzen.
Entsprechend weckt man Interesse durch Nutzung von Fortnite als &amp;ldquo;virtuelle Veranstaltungsplattform&amp;rdquo; und hält das Interesse durch Media Tie-Ins und Licensed IP aufrecht.&lt;/p&gt;
&lt;p&gt;Die Interpretation von Metaverse als Verwertungskette von digitalen Assets, speziell 3D Assets, als &amp;ldquo;Online-Merchandise&amp;rdquo; greift jedoch zu kurz:
Als Ökosystem mit einer kontrollierten Anzahl von großen Marktbetreibern und einer großen Anzahl von Kunden und Kreativen steht man viel besser und vor allen Dingen dauerhafter da.
Man kann Dritten auf diese Weise erlauben, untereinander Handel zu treiben, aber dabei laufend einen geringen Anteil an allen Transaktionen abgreifen.
Gewissermaßen will man die Idee der &amp;ldquo;Microsoft-Tax&amp;rdquo; in einem anderen Kontext wieder aufleben lassen.&lt;/p&gt;
&lt;h1 id=&#34;spieler-am-markt&#34;&gt;
    &lt;a href=&#34;#spieler-am-markt&#34;&gt;
	Spieler am Markt
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Unterschiedliche Ausgangspositionen bei&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Epic Games/Fortnite - schwach bei IP, aber original IP, wenn auch Nische, Unreal Engine und die anderen Dinge auf der &amp;ldquo;Rückseite&amp;rdquo; der Spiele als große Stärke.&lt;/li&gt;
&lt;li&gt;Roblox - original IP, sehr junge Kundschaft, erzieht sich gerade Kinder, 10 Jahre warten, groß unterschätzt.&lt;/li&gt;
&lt;li&gt;Microsoft - Minecraft, MS Store et al, zu Enterprise um erfolgreich zu sein? Aber Halo, MSFS.&lt;/li&gt;
&lt;li&gt;Apple (sic!) - kein IP, aber Plattform/Kette.&lt;/li&gt;
&lt;li&gt;Disney (sic!) - nur IP, aber schwach in Verwertung außerhalb von Filmen/offline Merchandise.&lt;/li&gt;
&lt;li&gt;Facebook - will da unbedingt rein, &amp;ldquo;Enterprise Pivot&amp;rdquo;: wenn Social in Zukunft &amp;ldquo;hier&amp;rdquo; stattfindet, dann muss Facebook &amp;ldquo;hier&amp;rdquo; sein.&lt;/li&gt;
&lt;li&gt;Google - insbesondere der Grund, wieso Google Stadia nicht wirklich einstellen kann, selbst wenn es ein Flop wird/ist.&lt;/li&gt;
&lt;li&gt;Amazon - hier ist auch die Spiele Strategie von Amazon mit einordnen. Amazon wäre gerne das AWS der Spielewelt anstelle von Epic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tech-maturity-cycle-und-standards&#34;&gt;
    &lt;a href=&#34;#tech-maturity-cycle-und-standards&#34;&gt;
	Tech Maturity Cycle und Standards
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cynefin_framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cynefin&lt;/a&gt;

 als Market Maturity Model.&lt;/p&gt;
&lt;p&gt;Wir sind derzeit in einer chaotischen Phase der Marktentwicklung:
Niemand hat ein Geschäftsmodell in diesem Markt, es ist unklar, wie dieser überhaupt aussehen wird.
Standards existieren noch nicht.&lt;/p&gt;
&lt;p&gt;Es geht um Landgrab, also um den Aufbau von Marktanteilen in einem entstehenden und wachsenden Markt.
Interop ist sekundär, weil noch keine Idee vorhanden ist, wie die Standards aussehen werden.
Man versucht sich vom Mitbewerb durch Features zu differenzieren, und dabei auch herauszufinden, was wichtig ist.
Alle Spieler wachsen in einem wachsenden, entstehenden Markt.&lt;/p&gt;
&lt;p&gt;Sobald es ein Geschäftsmodell, stabile Featurelisten und ein System zur Geldextraktion gibt, wird sich der Markt konsolidieren.
Dann beherrschen 3-5 Firmen den Markt, der auch aus dem Hyperwachstum heraus geht.
Die marktbeherrschenden Firmen erkennen einander an und konkurrieren semi-kooperativ miteinander:
Es ist wichtiger, den Marktzugang von Disruptoren zu erschweren, und es wird komplexe, schwierig zu implementierende Standards geben, mit Compliance Prüfungen und anderen Kostenfaktoren.
Das wird dann aber auch - zähneknirschend - zu Interoperabilität führen.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-überarbeitete-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-%c3%bcberarbeitete-definition&#34;&gt;
	Metaverse, überarbeitete Definition
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Das führt uns zur überarbeiteten Definition von Metaverse:
Die Integration der Spieleindustrie mit der Unterhaltungsindustrie und die Integration der Wertschöpfungsketten, mit der Möglichkeit die Verwertungskette an jeder Stelle im Produktionsfluß mit einer Art Steuer zu belegen.
Ein systematisches Anzapfen des Lifetime Intellectual Property-Konsumbudgets einer Person, und die Aufweitung des Marktes, der für einen Konsumenten relevant ist.&lt;/p&gt;
&lt;p&gt;Die Erkenntnis, daß Buch, Filme und Spiele zu zeitaufwendig zu erstellen und zu konsumieren sind.
3D Assets ist viel größere Verkaufsgelegenheit, ohne daß der Kunde so viel Lebenszeit investieren muss, um tatsächlich den Kauf zu konsumieren.&lt;/p&gt;
&lt;p&gt;Vor diesem Hintergrund ist auch die laufende Auseinandersetzung von Epic vs. Apple und Google vor Gericht zu lesen: Es geht darum, das Anzapf-Monopol von Apple und den von Apple dominierten Markt für andere zu Öffnen zu unterminieren.&lt;/p&gt;
&lt;p&gt;Besondere deutsche Probleme dabei:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keine Infrastruktur für Highspeed, Low Latency wie man das für Spiele braucht.&lt;/li&gt;
&lt;li&gt;keine deutsche Firma mit nennenswerter Identity Plattform (web.de? T-Online? &amp;ldquo;Login mit x&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;keine deutschen Ressourcen im 3D-Asset Tooling, Produktion, &amp;hellip; Markt.&lt;/li&gt;
&lt;li&gt;keine deutsche Film/Fernseh/Lit Industrie zur Produktion von IP, Stories, die weltweit wiedererkennbare Kultur prägen, die man verkaufen kann.&lt;/li&gt;
&lt;li&gt;Deutscher Blick geht nach innen, ins eigene Land, nicht auf einen Weltmarkt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vergleiche dabei Korea: koreanische Produktionsketten in K-Pop; die &amp;ldquo;cultural technology&amp;rdquo; die andere Stile und Kunstrichtungen aufgreift und in K-Pop integriert; Produktionspipelines für Stars und Sternchen, aber auch für IP (beginnend).
Im Vergleich ist Deutschland essenziell wehrlos und angehängt.&lt;/p&gt;
&lt;h2 id=&#34;toxisch-dystopische-interpretation&#34;&gt;
    &lt;a href=&#34;#toxisch-dystopische-interpretation&#34;&gt;
	Toxisch-dystopische Interpretation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das &amp;ldquo;Eigentum&amp;rdquo; in einer simulierten Realität sieht aus wie Eigentum, ist aber virtuell und kopierbar.
Es kommt im virtuellen zur einer Entfernung von Ressourcenknappheit bei der Produktion, aber &amp;ldquo;Wert&amp;rdquo; entsteht nur, wenn die Ware künstlich verknappt wird beim Konsum.&lt;/p&gt;
&lt;p&gt;Die Zollhaus-Stellen, Plattformbetreiber haben volle Markttransparenz, und können das Freizeit-Konsumverhalten jeder Person genau ausmessen.
Sie wissen, was Du siehst und hörst, was Du benutzt, welche Stile Dir zusagen und können diese Information gegen Geld an Kreative verkaufen, und verkaufen den Kreativen auch gegen Geld den Zugang zu Dir.&lt;/p&gt;
&lt;p&gt;Ein Freund von mir:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nur ein halber Witz: man muss in Zukunft bei Geburt eines Kindes als Erstes entscheiden muss, ob es Apple-, Google- oder Facebook-Angehöriger wird und der Name erst danach entsprechend den Regeln des Dienstes festgelegt wird. Wechsel zwischen den Services ist dann komplex wie eine Emigration nach Nordkorea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zentraler Bestandteil bezüglich der Verknappung auch DRM, hier unter dem Modenamen &amp;ldquo;NFT&amp;rdquo; - &amp;ldquo;NFT&amp;rdquo; ist das Blockchain Wort für DRM, nur zusätzlich mit Umweltvergiftung durch Energieverschwendung.
Unikate gibt es nur mit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rechner zunageln,&lt;/li&gt;
&lt;li&gt;TPM,&lt;/li&gt;
&lt;li&gt;in-game nur lizenzierte Assets und Mods verwendbar, und&lt;/li&gt;
&lt;li&gt;NFT Laser Eyes Kryptoscheisse, die den Planeten verbrennt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In diesem Kontext ist auch das aktuelle Engagement von Epic im NFT Misthaufen zu lesen sehen.
Daher: korrekte Standards sind wichtig, und Identität ist die Grundlage für &amp;ldquo;Eigentum&amp;rdquo;.
Das braucht nicht nur keine Blockchain, es funktioniert auch besser ohne - die Plattformen sind eh zentral.&lt;/p&gt;
&lt;p&gt;Der Freund kommentiert wieder:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Es geht darum, dass die Leute aus dem Universum nicht rauskommen können (Stichwort: Hyperinklusion).
Sie kaufen in Metaverse-Shops, daten ihre Partner in Metaverse-Locations, sehen nur noch Werbung für im Metaverse verfügbare Waren, können Metaverse-kritische Gedanken kaum noch formulieren.
Es gibt keinen Public-Space mehr im Leben, alles ist Teil der gated community (Vgl. Verlust der Almende).&lt;/p&gt;
&lt;p&gt;Du hast vielleicht noch einen Wettbewerb zwischen x Metaversen, aber innerhalb eines Metaversums gibt es dann einen oder nur noch einen gesteuerten Wettbewerb.
D.h. das Metaversum monopolisiert den Menschen in seiner Gesamtheit.&lt;/p&gt;
&lt;p&gt;Das ist ein bisschen wie die Minenstädte in den USA Ende des 19. Jhd.
Der Shop gehörte der Mine, der Pfarrer arbeitete für die Mine, die Mine stellte Sheriff und Bürgermeister.&lt;/p&gt;
&lt;p&gt;Effektiv will FB durch das Metaversum ihr gegenwärtiges Social-Media-Monopol verewigen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das führt thematisch zur Geldtheorie:&lt;/p&gt;
&lt;h2 id=&#34;currency&#34;&gt;
    &lt;a href=&#34;#currency&#34;&gt;
	Currency
    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Durch die CryptoCurrencies ist für die großen jetzt klar, dass die Geldschöpfung &amp;ldquo;up for the grabs&amp;rdquo; ist. Ein Metaversum wäre der perfekte Ansatz das &amp;ldquo;en passant&amp;rdquo; zu realisieren.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An dieser Stelle kommt dann gleich wieder das Epic Engagement bei &amp;ldquo;Cryptocurrentcies&amp;rdquo; zum Tragen.
Das ist sehr problematisch:
Metaversum und Produktion dort nimmt nur Ressourcen aus der realen Welt, produziert dort aber nicht.
Am Ende wird die reale Welt ärmer, dort leben wir aber.
Was heißt das langfristig für Wertschöpfung und Geld?&lt;/p&gt;
&lt;h1 id=&#34;material&#34;&gt;
    &lt;a href=&#34;#material&#34;&gt;
	Material
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;URL-Sammlung&lt;/p&gt;
&lt;h2 id=&#34;unsortierte-seitenlinien&#34;&gt;
    &lt;a href=&#34;#unsortierte-seitenlinien&#34;&gt;
	Unsortierte Seitenlinien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immature Market, Geschäftsmodell existiert noch nicht als erprobter Business Plan (Cynefin Chaotic)&lt;/li&gt;
&lt;li&gt;Einzelne Firmen weiter (Liste oben), Cynefin Complex&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alle Firmen unvollständig aufgestellt. Akquise schwierig, wen kaufen? Und die zu kaufenden Firmen sind selbst noch nicht fertig: Integration auch schwierig.&lt;/p&gt;
&lt;h2 id=&#34;golem-auf-der-suche-nach-dem-wal&#34;&gt;
    &lt;a href=&#34;#golem-auf-der-suche-nach-dem-wal&#34;&gt;
	Golem &amp;ldquo;Auf der Suche nach dem Wal&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.golem.de/news/geschaeftsethik-bei-videospielen-auf-der-suche-nach-dem-wal-2110-160163.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Auf der Suche nach dem Wal&lt;/a&gt;

&amp;rdquo;, Videospiele Growth Manager, ein Bericht. Richtige Richtung, zu kurz, erklärt aber die Kette.&lt;/p&gt;
&lt;p&gt;Im Gegensatz zu einem typischen Videospiel, bei dem man versucht, so viele Leute wie möglich dazu zu bringen, einmalig 60 Dollar für ein Spiel auszugeben, will ein Free-to-Play Spiel so viele Leute wie möglich zum Spielen zu animieren. Sobald sie spielen, bemüht sich das Unternehmen, so viele digitale Güter wie möglich an sie zu verkaufen. Es gibt zwar eine Obergrenze dafür, wie viel man für ein Spiel verlangen kann, aber es gibt keine Obergrenze für die Zahl an sinnlosen digitalen Tokens, die man verhökern kann.&lt;/p&gt;
&lt;p&gt;Metaverse: Industrialisiere diesen Prozess und mainstreame ihn. Aspekte: Spielen nach Termin, Pay to Skip, Pay to Win.&lt;/p&gt;
&lt;h2 id=&#34;colorado-law-review-dark-patterns&#34;&gt;
    &lt;a href=&#34;#colorado-law-review-dark-patterns&#34;&gt;
	Colorado Law Review Dark Patterns
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Link aus dem oa Golem Artikel.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.google.com/url?q=https://lawreview.colorado.edu/printed/when-the-cats-away-techlash-loot-boxes-and-regulating-dark-patterns-in-the-video-game-industrys-monetization-strategies/%23IV_Broad_Guidance_for_Crafting_Effective_Dark_Pattern_Regulation_in_the_Video_Game_Industry&amp;amp;sa=D&amp;amp;source=docs&amp;amp;ust=1635284752797000&amp;amp;usg=AOvVaw30IDuuhFqtcvDbNj32joER&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;When the Cat’s Away: Techlash, Loot Boxes, and Regulating “Dark Patterns” in the Video Game Industry’s Monetization Strategies&lt;/a&gt;

&amp;rdquo;,
Sektion &amp;ldquo;IV. Broad Guidance for Crafting Effective Dark Pattern Regulation in the Video Game Industry&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Es gibt eine Feedbackschleife zwischen den Spieldesignern und dem Wal (der Person, die sinnlos investiert):
Ungesund für beide Seiten, macht das Spiel schnell zu einem Spiel für wenige Vielzahler, und damit langfristig global schlecht; besondere Herausforderung beim Produktmanagement.&lt;/p&gt;
&lt;h2 id=&#34;matthew-ballhttpstwittercomballmatthew&#34;&gt;
    &lt;a href=&#34;#matthew-ballhttpstwittercomballmatthew&#34;&gt;
	&lt;a href=&#34;https://twitter.com/ballmatthew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matthew Ball&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

: Original Metaverse Article&lt;/p&gt;
&lt;p&gt;Medienseite:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the time Netflix launched its streaming service, much of Hollywood knew that the future of television was online (IP TV had been deployed in the late 1999s). The challenge was timing and how to package such a service (it took another 10 years for Hollywood to accept all of their channels, genres and content needs to be collapsed into a single app/brand).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ball schreibt:&lt;/p&gt;
&lt;p&gt;The Metaverse, we think, will be &amp;hellip;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Persistent.&lt;/li&gt;
&lt;li&gt;Synchronous and live.&lt;/li&gt;
&lt;li&gt;Be without any cap to concurrent users, while also providing each user with an individual sense of “presence”&lt;/li&gt;
&lt;li&gt;Be a fully functioning economy&lt;/li&gt;
&lt;li&gt;Be an experience that spans both the digital and physical worlds, private and public networks/experiences, and open and closed platforms&lt;/li&gt;
&lt;li&gt;Offer unprecedented interoperability of data, digital items/assets, content, and so on across each of these experiences&lt;/li&gt;
&lt;li&gt;Be populated by “content” and “experiences” created and operated by an incredibly wide range of contributors&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Metaverse is not…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A “virtual world”&lt;/li&gt;
&lt;li&gt;A “virtual space”  (2nd life)&lt;/li&gt;
&lt;li&gt;“Virtual reality”&lt;/li&gt;
&lt;li&gt;A “digital and virtual economy”&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;game&amp;rdquo;&lt;/li&gt;
&lt;li&gt;A “virtual theme park or Disneyland”&lt;/li&gt;
&lt;li&gt;A “new app store”&lt;/li&gt;
&lt;li&gt;A “new UGC platform”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Das ist natürlich Unsinn, es wird alle diese Dinge &lt;em&gt;auch&lt;/em&gt; sein.
Das ist alles Valley Hype, um The Next Internet als Begriff zu etablieren und eine gemeinsame Erzählung zu haben.
Aber am Ende ist geht es genau um diese 8 Dinge die es angeblich NICHT sein soll.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/the-metaverse-primer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neuere Artikel Serie, 9 Artikel lang&lt;/a&gt;

 dazu.&lt;/p&gt;
&lt;h2 id=&#34;fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
    &lt;a href=&#34;#fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
	&lt;a href=&#34;https://twitter.com/DuddyAlan233/status/1391884040547049473&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fortnite Loyalty Program&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Es geht darum, User Engagement zu erhalten.
Das Problem muss jedes MMO lösen, denn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Die Leute leben nicht im Metaverse, die leben hier.&lt;/li&gt;
&lt;li&gt;Primärer Konsum ist Casual, nicht High End Gamer.&lt;/li&gt;
&lt;li&gt;Das ist die Schwachstelle des Konzeptes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Erst wenn das Ding zu einem ständigen Ort wird, kann es ein Metaversum werden.
Das ist noch ein langer Weg:
Meine VR-Brille steht hier ungenutzt rum (Oculus verkauft, wegen FB Zwang).&lt;/p&gt;
&lt;p&gt;Das ist so, weil &amp;ldquo;in VR zu gehen&amp;rdquo; ein Akt ist (aufbauen, kalibrieren), und die Brille isoliert (ich bin dann weg), und weil es nicht viele Spiele gibt, die das sinnvoll nutzen (Elite Dangerous, MSFS-2020, Moss, selten auch Space Pirate Trainer).&lt;/p&gt;
&lt;h2 id=&#34;epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
    &lt;a href=&#34;#epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
	&lt;a href=&#34;https://twitter.com/thegamespodcast/status/1450468392952115233&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Epic and Facebook: The Race called Metaverse&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;h2 id=&#34;pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
    &lt;a href=&#34;#pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
	&lt;a href=&#34;https://twitter.com/PastryEth/status/1423803492314009606&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pastry Eth Thread&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Crypto Dummlall mit einigen guten Ideen, aber Illusionen über wie es laufen wird&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;1/5 of Facebook now working on AR&amp;rdquo;, für FB ist das Metaverse zur Zeit &amp;ldquo;Oculus&amp;rdquo;, &amp;ldquo;VR&amp;rdquo;. Das ist ein gefährlicher Tunnelblick (siehe oben &amp;ldquo;casual&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The &amp;ldquo;Metaverse&amp;rdquo; is a virtual space created by the convergence of virtually enhanced physical reality, AR &amp;amp; the internet: Our current 2D search based version of the internet is giving way to a fully 3D immersive reality&amp;rdquo;: Das ist Quatsch, solange 3D nicht komplett Casual konsumierbar wird, und eine 3D Brille ist derzeit isolierend, schwer und verkabelt. 3D Assets in Pancake Games sind leichter und direkt zu verkaufen, jetzt. &amp;ldquo;Cosmetics&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Metaverse is always “on” &amp;amp; is beyond the control of any individual. It exists in real time, can host any size audience, has a functioning economy, spans across platforms, provides interoperability for digital assets, &amp;amp; consists of the content and experiences its users create.&amp;rdquo; Das Konzept 2nd 2nd Life, und die &amp;ldquo;3D Shoppingmalls&amp;rdquo; der frühen 90er feiern fröhliche Urständ, als Konzept nicht falsch und gleichzeitig total falsch. 3D Events, die Presence ersetzen sind interessant, aber super hart.
Auch hier Korean Cultural Technology, K-POP Konsum während COVID-19 (Pancake, large Audiences, Gemeinschaftserlebnisse, &amp;ldquo;VR&amp;rdquo; Nebensache)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;In the Metaverse, the earning power for young creators won’t be limited to the top 1%. There will be an entire new era of young entrepreneurs making a living in virtual worlds, earning real value and steady income quicker than ever imagined.&amp;rdquo; LOL. In erster Linie geht es um Zollhäuschen entlang der Verwertungskette, mit dem durch Creators erschaffenen Mehrwert als Motor.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Creators who were once limited in their ability by technological constraints, lack of capital, time, or creativity, now have everything that is needed. What happens when physical objects are dematerialized? All formerly scarce materials become abundant.&amp;rdquo; LOL. DRM all the way ist notwendig, damit das funktioniert. Außerdem das Dauerversprechen vom Creators Paradise, wenn es tatsächlich um Monopolisierung der Wertschöpfungskette geht.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Danach: Thread degrades in Laser Eyes Nonsense&lt;/p&gt;
&lt;h2 id=&#34;digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
    &lt;a href=&#34;#digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
	&lt;a href=&#34;https://www.dezeen.com/2021/07/23/digital-twins-metaverse-david-weir-mccall-epic-games/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Digital Twins&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Digital twins will act as &amp;ldquo;foundations of the metaverse&amp;rdquo; and allow people to move between real and virtual spaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist &amp;ldquo;2nd 2nd Life&amp;rdquo; &lt;a href=&#34;https://en.wikipedia.org/wiki/Skeuomorph&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Skeumorphism&lt;/a&gt;

 ist, was wir machen, wenn wir noch nicht wissen, was die Design Language für eine neue Welt ist. Die ersten Autos sagen aus wie Kutschen, die ersten Apple Anwendungen haben Rolodexe und Moleskine imitiert. &amp;ldquo;Digital Twins&amp;rdquo; sind dasselbe Konzept, aber für ein Metaversum.&lt;/p&gt;
&lt;p&gt;Und die Kernidee:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In April 2020, music artist Travis Scott staged a virtual concert inside the game that was attended live by 12.3 million people. It was a global phenomenon that sent the American rapper to the top of all music charts and earned him a reported $20 million.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lies: &amp;ldquo;OMG, jemand hat in einem Kinder-Battle Royale Spiel Geld verdient ohne zu metzeln, sondern mit traditioneller Medienarbeit&amp;rdquo; führt sofort zu &amp;ldquo;Alle Ideen von 2nd Life, von denen wir schon wissen, dass sie problematisch sind, feiern Wiederauferstehung.&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If the metaverse is an equivalent reality that coexists next to the physical reality, there needs to be a connection,&amp;rdquo; said Weir-McCall.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ist es nicht, muss es nicht. Wenn es dann doch muss, eventuell eher AR als 3D-Modelle, denn Connection zur realen Welt hat man mit einer vollen VR-Brille eben nicht. Was ich oben über Casual Konsum sage.&lt;/p&gt;
&lt;p&gt;Mein Freund merkt an:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Digital Twins / Digital Shadows sind übrigens auch Begriffe um den die Datenspur von Leuten zu bezeichnen.
Der Gesundheitsbereich versucht das ebenso zu etablieren, um anhand dieser Zwillinge Diagnostik betreiben zu können.
Das wird auch noch einmal spannend, wie das mit dem Metaverse verbunden wird.
Gerade aus Facebooks Sicht - welche Daten kann das Metaversum aus Deinem Avatar auslesen?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-und-akzeptanz&#34;&gt;
    &lt;a href=&#34;#facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-und-akzeptanz&#34;&gt;
	&lt;a href=&#34;https://www.reuters.com/technology/facebook-unveils-its-first-smart-glasses-2021-09-09/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebook Glass&lt;/a&gt;

 und Akzeptanz
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bei Google Brille waren die Träger erkennbar, der Begriff Glassholes entstand.
Mit Ray Ban ist das besser zu tarnen.
Ray Ban hat keinen technischen Beitrag zu Oculus und AR, es geht nur darum, den Markennamen und das Design als Tarnung für Oculus zu nehmen, um den Google Glass Effect zu vermeiden.
Außerdem ist AR mehr Casual als VR.
Mode erlaubt auch einfacheren Neuverkauf, siehe auch Apple Watch Zubehör.&lt;/p&gt;
&lt;h2 id=&#34;laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
    &lt;a href=&#34;#laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
	&lt;a href=&#34;https://twitter.com/Cryptomarsmoon/status/1448249433573904384&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Laser Eyes&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s gonna be epic to bring the squid game to the metaverse. Salute to your team! I am a big fan of the TV series. I am super excited to have a chance to participate in this game! LFG!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Noch mehr Laser Eyes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Projektschmerzen</title>
      <link>https://blog.koehntopp.info/2021/10/01/projektschmerzen.html</link>
      <pubDate>Fri, 01 Oct 2021 21:38:44 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/01/projektschmerzen.html</guid>
      <description>&lt;p&gt;Es beginnt mit &lt;a href=&#34;https://mobile.twitter.com/HonkHase/status/1443623907064492035&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;einem Tweet von Manuel Atug&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Wegen Überlastung der Server: #Notruf-App vorerst nicht mehr in App-Stores&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;und der Tweet verlinkte einen (inzwischen nicht mehr existierenden) Artikel beim Deutschlandfunk.
&lt;a href=&#34;https://mobile.twitter.com/hikhvar/status/1443835052413104144&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Christoph Petrausch&lt;/a&gt;

 erklärt, wie solche Projekte falsch laufen können:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sowas erfordert eine Fehlerkultur. Du musst als Organisation in der Lage sein, nach so einem Incident einen Schritt zurückzutreten.
Alle Fakten auf den Tisch zu legen und zu fragen:
Warum kam es dazu?
Wo liegen die Probleme?
Und daraus musst du dann für das nächste Mal lernen.&lt;/p&gt;
&lt;p&gt;Und das ist sehr schwer, wenn du in einem Konglomerat aus Dienstleister und Konsortien sitzt.
Da sind nämlich Verträge und Vertragsstrafen im Weg.
Wenn der Dienstleister sagt: &amp;ldquo;Yes, da haben wir nicht nach State auf the Art gearbeitet&amp;rdquo;, kommt gleich der Anwalt vom Auftraggeber.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;it-projekte&#34;&gt;
    &lt;a href=&#34;#it-projekte&#34;&gt;
	IT-Projekte
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ich &lt;a href=&#34;https://mobile.twitter.com/isotopp/status/1443847331355504690&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;schrieb dazu&lt;/a&gt;

:&lt;/p&gt;
&lt;p&gt;Christoph Petrausch schneidet hier ein weiteres sehr unangenehmes Thema an:&lt;/p&gt;
&lt;p&gt;Wenn man mit mehreren externen Dienstleistern arbeitet, dann ist es auf viele Weisen schwieriger einen Projekterfolg zu haben.
Denn der Dienstleister arbeitet nicht für den Projekterfolg, sondern primär für den Vertrag.
Das muss er tun, um sich abzusichern, aus den von Christoph genannten Gründen.&lt;/p&gt;
&lt;p&gt;Ändern sich die Anforderungen des Projekts oder sind in Teilprojektphasen Learnings aufgetaucht, die man in den folgenden Projektphasen einfließen lassen möchte, dann ist das alles schwierig.
Denn Nachsteuern ist dann eine Vertragsänderung, mindestens eine Anpassung des Statement of Work.
Wahrscheinlich wird man jedoch auch das Finanzielle nachregeln müssen.&lt;/p&gt;
&lt;p&gt;Das Projekt wird dadurch schwieriger steuerbar und langsamer, weil jede Anpassung auf einmal ein Verwaltungsakt ist.&lt;/p&gt;
&lt;p&gt;Generell steigen die Projektrisiken mit jeder administrativen Grenze überproportional an:
hier mein Amt, dort Dein Dienstleister.
Das ist so, weil sich Verzögerungen auf dem Dienstweg, Nachrichtenverfälschungen durch Stille Post und dergleichen mehr akkumulieren.&lt;/p&gt;
&lt;p&gt;Mit einer steigenden Anzahl von Projektpartnern (&amp;ldquo;administrativen Einheiten&amp;rdquo;) steigen auch die Kommunikationsbeziehungen, der Verhandlungsbedarf und die auszugleichenden Interessen an: (n * (n-1)/2 → n^2).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/kommunikations-explosion.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Anzahl der Kommunikationsbeziehungen bei 3 (3), 4 (6), 5 (10) und 6 (15) Projektpartnern.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das ist einer der Hauptgründe für Kostenexplosionen und Verzögerungen bei solchen Projekten:
Vertragsstrukturen und Kommunikations- und Verhandlungsaufwand machen es schwer, die Ziele aller Projektbeteiligten kohärent zu halten und das Projekt schnell auf geänderte Anforderungen anzupassen.&lt;/p&gt;
&lt;h2 id=&#34;bärcode&#34;&gt;
    &lt;a href=&#34;#b%c3%a4rcode&#34;&gt;
	Bärcode
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Nun mache ich diese IT-Sache schon mehr als 35 Jahre, und dort ist es meiner Erfahrung nach &lt;em&gt;immer&lt;/em&gt; so, daß sich die Anforderungen im Laufe des Projektes ändern und man dann das Projekt anpassen muss.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://baercode.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/baercode.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Selbst bei so simplen Sachen wie &lt;a href=&#34;https://baercode.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;baercode.de&lt;/a&gt;

, den ich ehrenamtlich beratend begleitet habe, und die technisch korrekt und im Zeit- und Kostenbudget waren ist es so, daß die zusammenbrechende Kontrollpraxis zeigt, daß man einen wirksamen Test- und Covid-Pass eigentlich grundsätzlich anders gestalten muss.&lt;/p&gt;
&lt;p&gt;In einer weiteren Iteration (die nicht geplant ist) würde man grundsätzlich und viel aufwendiger an das Problem herangehen müssen.
Das ist aber etwas, das zum Zeitpunkt des Requirement Engineerings nicht absehbar war.
Es wäre auch nicht durchsetzbar gewesen, hätte jemand zu diesem Zeitpunkt damals die Anforderung eingebracht.&lt;/p&gt;
&lt;h2 id=&#34;experiment-early&#34;&gt;
    &lt;a href=&#34;#experiment-early&#34;&gt;
	Experiment early
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In meinem Hauptberuf ist es so, daß mein Arbeitgeber deswegen unfertige Features so schnell als möglich in der Produktion testet.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/8-rollouts-1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Slideshare &lt;a href=&#34;https://www.slideshare.net/isotopp/8-rollouts-a-day#19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;8 Rollouts a Day&lt;/a&gt;

&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Es geht darum, die Requirements zu validieren. &amp;ldquo;Ist diese Idee wirklich geeignet, das Problem zu lösen?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Als Webanwendung und als Anwendung, die nicht mit hoheitlichen oder medizinischen Daten arbeitet, sind wir da in einer privilegierten Position.
Wir können dann mit relativ wenig Aufwand früh experimentieren, solange wir uns aus PII und PCI heraushalten.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/8-rollouts-2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;HIPPO: HIghest Paid Persons Opinion. Experiments kill HIPPOs.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Weil wir das eigentliche Feature mit so wenig Entwicklungsaufwand als möglich implementieren können wir früh sehen, welche Änderungen an der Website uns reicher machen.
19 von 20 Ideen scheitern in dieser Experimentierphase.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/8-rollouts-3.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Das Experiment dient dazu, eine minimale (oder Fake-) Implementation eines Features auszumessen. Dabei ist ausschließlich interessant herauszufinden, ob die Requirements bei echten Usern überhaupt Sinn ergeben.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wir wissen dann jedoch auch, &lt;em&gt;wieviel&lt;/em&gt; reicher uns so ein Feature macht, und weil das so ist, können wir den Einsatz von Entwickler-Kapazitäten viel besser steuern:
Entwickler arbeiten nur an Dingen, von denen wir wissen, daß sie Mehreinnahmen generieren, und &lt;em&gt;wieviel&lt;/em&gt; Mehreinnahmen das sind.
Wir können dann den Aufwand beim Engineering gegen den Gewinn abwägen.&lt;/p&gt;
&lt;p&gt;Das geht nur im Haus. Das kann nicht outsourcen. Denn nur dann ist eine informale, enge Steuerung mit Umsetzungszeiten für Steuerungsinput im Bereich von Stunden möglich .
Tagen oder gar Wochen würden jede Form von Experimentieren scheitern lassen.&lt;/p&gt;
&lt;h2 id=&#34;insourcing-und-outsourcing-vs-marktreife-und-prozessreife&#34;&gt;
    &lt;a href=&#34;#insourcing-und-outsourcing-vs-marktreife-und-prozessreife&#34;&gt;
	Insourcing und Outsourcing vs. Marktreife und Prozessreife
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Expertise im Haus ist wichtig, um beurteilen zu können, was Dienstleister machen. Dan Luu hat dazu einen &lt;a href=&#34;https://danluu.com/in-house/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;interessanten Artikel&lt;/a&gt;

 geschrieben.&lt;/p&gt;
&lt;p&gt;Eigene Experten sind jedoch noch wichtiger, wenn man neue Dinge ausprobiert, und man deswegen das Projekt eng steuern muss.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/go-away-1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Slideshare &amp;ldquo;&lt;a href=&#34;https://www.slideshare.net/isotopp/go-away-or-i-will-replace-you-with-a-little-shell-script#12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go away or I will replace you with a very tiny shell script&lt;/a&gt;

&amp;rdquo;, Marktreife und Prozessreife&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das ist auch alles kein Hexenwerk, sondern lange bekannt.&lt;/p&gt;
&lt;p&gt;Wenn man neue, unerprobte Dinge macht, ist man im Chaotischen Quadranten des &lt;a href=&#34;https://en.wikipedia.org/wiki/Cynefin_framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cynefin Models&lt;/a&gt;

 und macht Forschung.
Dazu braucht man eine kleine Gruppe von Experten, die sich darauf konzentriert, Regeln und Gesetzmäßigkeiten (&amp;ldquo;überhaupt Practice&amp;rdquo;) zu finden.&lt;/p&gt;
&lt;p&gt;In der deutschen Pipeline ist das ein Uni-Projekt, in dem Professor/innen irgendwelche Ideen ausprobieren, von denen die Mehrheit auf irgendeine nicht offensichtliche Weise egal oder falsch ist.
Aber das herauszufinden ist genau Sinn der Sache:
Die Mehrheit dieser Versuche scheitert, genau wie wir beim Requirements Engineering 19 von 20 Experimenten im Test scheitern sehen.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Complex&amp;rdquo; ist der Engineering-Quadrant, in der wir versuchen, als funktionierend bekannte Grundideen hoch zu skalieren, und in der Masse anwendbar zu machen.
Hier braucht es mehr als ein Team, mit einem der Theoretiker aus der vorigen Phase als Beratung und vielen Praktikern (&amp;ldquo;Ingenieuren&amp;rdquo;) in den Teams, die immer noch so klein als möglich sein sollten.&lt;/p&gt;
&lt;p&gt;Idealerweise hat man zwei oder drei konkurrierende Ansätze mit überlappenden Zielsetzungen, von denen dann hoffentlich einer diese Phase überlebt.
Aus dieser bekommt man dann einen Satz Handlungsanweisungen (&amp;ldquo;Wiederholbare Practice&amp;rdquo;) und gute Ratschläge (&amp;ldquo;das da ist kritisch!&amp;rdquo;). Das kann man dann schrittweise Ausrollen und mit Feinkorrekturen in die Fläche bringen.
Dabei kommen auch Dienstleister und deren Training ins Spiel.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/go-away-2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Prozessreife: Ohne quantitative Metriken ist Outsourcing meist zum Scheitern verurteilt.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das geht halt aber erst genau dann, wenn man Prozesse &lt;em&gt;mit Metriken&lt;/em&gt; hat.
Das bedeutet: wenn man Erfahrung hat, was man messen muss und wie - auf beiden Seiten der Vertragsgrenze.&lt;/p&gt;
&lt;p&gt;Wenn der Prozess noch nicht reif genug ist und man gar keine Metriken hat, ist Einigkeit zwischen Auftraggeber und -nehmer schwierig.
Dasselbe Problem hat man, wenn der Prozess noch zu schnell wächst, um ohne grundlegende Änderungen wiederholbar zu sein.&lt;/p&gt;
&lt;p&gt;Wenn man - aus welchem Grund auch immer - solche Metriken nicht hat, oder nicht haben &lt;em&gt;kann&lt;/em&gt;, weil es noch nicht so weit ist, dann &lt;em&gt;kann man nicht outsourcen&lt;/em&gt;, also keinen Dienstleister verwenden.&lt;/p&gt;
&lt;p&gt;Warum ist das so?&lt;/p&gt;
&lt;p&gt;Weil man gar keine Grundlage hat, auf der beide Parteien beurteilen können, was verkauft und was geliefert worden ist, und ob das so okay ist.
Solange das Projekt oder Prozess-Produkt noch weich ist, weil es noch in der Forschungs- oder Engineering-Phase ist, kann man nicht richtig sinnvoll mit externer Expertise arbeiten, weil &lt;em&gt;niemand weiß, wie es geht&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Dann ist Expertise &lt;em&gt;im Haus&lt;/em&gt; absolut notwendig.&lt;/p&gt;
&lt;h2 id=&#34;blameless-postmortem&#34;&gt;
    &lt;a href=&#34;#blameless-postmortem&#34;&gt;
	Blameless Postmortem
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Christian Petrausch weist noch auf einen weiteren kritischen Baustein hin, der absolut zwingend notwendig ist, und der über Vertragsgrenzen hinweg nur sehr, sehr schwierig zu realisieren ist:&lt;/p&gt;
&lt;p&gt;Blameless Postmortem.&lt;/p&gt;
&lt;p&gt;Wenn irgendwo ein Flugzeug ein Unglück hat,
wenn irgendwo ein Patient verstirbt,
wenn irgendwo in einer gut geführten Softwarefirma eine Outage war, dann setzen sich alle Gruppen zusammen und versuchen herauszufinden, wie &lt;em&gt;der Prozess&lt;/em&gt; defekt ist, der dazu geführt hat.&lt;/p&gt;
&lt;p&gt;Die Annahme ist, daß alle Beteiligten mit den besten Absichten und im Rahmen ihrer Fähigkeiten und zum Zeitpunkt der Entscheidung verfügbaren Informationen gehandelt haben.&lt;/p&gt;
&lt;p&gt;Wenn also die Produktion ausfällt, weil Du (aufgrund der Monitoring-Daten, des Runbooks und Deiner Erfahrungen) angenommen hast, daß (A) der Fall war und deswegen (H) gemacht hast, aber in Wahrheit lag (B) vor und (H) hat alles gecrasht, &amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dann ist es ein Problem, wenn die Monitoring-Daten zu langsam aufbereitet worden sind,&lt;/li&gt;
&lt;li&gt;wenn nie alle wichtigen Dinge gemessen worden sind,&lt;/li&gt;
&lt;li&gt;wenn das Runbook unvollständig oder unklar ist,&lt;/li&gt;
&lt;li&gt;oder wenn Du unzureichend ausgebildet worden bist.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es ist außerdem zu prüfen, ob diese Entscheidung (H) zu machen überhaupt manuell zu treffen ist, und ob dann eine manuelle Handlung initiiert werden muss.&lt;/p&gt;
&lt;p&gt;Kurz: Der Blameless Postmortem konzentriert sich nicht darauf, &lt;em&gt;wer&lt;/em&gt; die Produktion gecrasht hat, sondern welche Kette von Entscheidungen dazu geführt hat, dass die gerade Dienst habende Person die Produktion crashen musste.&lt;/p&gt;
&lt;p&gt;So eine Diskussion über die Grenzen von Firmen, Verträgen, Statements of Work und mögliche Schadensersatzforderungen durchzuführen ist nahezu unmöglich, oder jedenfalls im Haus sehr viel einfacher.&lt;/p&gt;
&lt;p&gt;Wieder braucht es dazu aber auch in der öffentlichen Verwaltung eine andere Kultur:
einen grundlegenden Wandel, ein Bekenntnis zu Offenheit, Transparenz, Kooperation und Open Source.
Solange sich das nicht ändert, wird sich die Tragödie vom Scheitern der Digitalisierung in der deutschen Verwaltung wieder und wieder und wieder wiederholen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software Defined Silicon</title>
      <link>https://blog.koehntopp.info/2021/09/30/software-defined-silicon.html</link>
      <pubDate>Thu, 30 Sep 2021 20:01:06 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/09/30/software-defined-silicon.html</guid>
      <description>&lt;p&gt;Golem titelt &lt;a href=&#34;https://www.golem.de/news/software-defined-silicon-intel-will-xeon-funktionen-als-lizenz-update-verkaufen-2109-159912.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Intel will Xeon-Funktionen als Lizenz-Update verkaufen&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Intel will Xeon-Funktionen als Lizenz-Update verkaufen.&lt;/p&gt;
&lt;p&gt;Mit dem Software Defined Silicon will Intel in Xeon-Hardware zunächst abgeschaltete Funktionen künftig als Lizenz-Upgrade bereitstellen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/HonkHase/status/1442760700112343044&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Manuel Atug ranted&lt;/a&gt;

 darüber auf Twitter:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/09/intel-software-silicon.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Wenn dir die eigene Hardware nicht mehr gehört&amp;hellip;
Intel will Xeon-Funktionen als Lizenz-Update verkaufen
&amp;ldquo;Mit dem Software Defined Silicon will Intel in Xeon-Hardware zunächst abgeschaltete Funktionen künftig als Lizenz-Upgrade bereitstellen.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ich &lt;a href=&#34;https://twitter.com/isotopp/status/1442896442926895104&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;antwortete&lt;/a&gt;

:&lt;/p&gt;
&lt;p&gt;Das braucht wesentlich mehr Kontext.&lt;/p&gt;
&lt;h1 id=&#34;xeons-sind-selten-und-haben-nicht-viele-kunden&#34;&gt;
    &lt;a href=&#34;#xeons-sind-selten-und-haben-nicht-viele-kunden&#34;&gt;
	Xeons sind selten und haben nicht viele Kunden
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Intel stellt zurzeit eine sehr kleine einstellige Anzahl Millionen Xeon CPUs her.
Davon gehen 85 % an weniger als 10 Kunden - Hyperscaler in den USA und China.
12 % oder so gehen an ca. 150 Kunden, die messbare Stückzahlen der Produktion aufkaufen.
Der Rest sind Kleinkunden.&lt;/p&gt;
&lt;p&gt;Das ist eine sehr ungesunde Marktstruktur, und Intel weiß um die Probleme, die das mit sich bringt.
Dies ist keine neue Situation, sondern war schon ein Problem, bevor Apple mit ARM losgelegt hat und AMD mit dem EPYC auf den Markt kam.
Diese beiden Ereignisse haben die Situation aber noch verkompliziert.&lt;/p&gt;
&lt;p&gt;Dazu kommt noch, dass die obigen Prozentangaben nach Stückzahlen sind, nicht nach Core-Count.
Denn ansonsten sähe die Situation noch extremer aus:
Hyperscaler haben Interesse an immer größeren CPUs mit immer mehr Kernen, und immer höherer Dichte in ihren Rechenzentren.
Hyperscaler haben CPU Utilization und Return-per-Core als KPI und wollen Custom Silicon zum Auslagern der Virtualisierung, für das Netz, oder spezielle Tensorflow CPUs.&lt;/p&gt;
&lt;p&gt;Normale Kunden sehen das nicht so:
man kann in einer 64C/128T-Core-Single-Socket-Konfiguration mit 2-4 TB RAM unter Umständen den gesamten Serverbedarf einer kleineren Firma in einer einzelnen physikalischen Maschine in VMs unterbringen.
Das Problem dabei: Explosionsradius, wenn mal etwas ausfällt.&lt;/p&gt;
&lt;h1 id=&#34;cloud-und-on-premise-driften-auseinander&#34;&gt;
    &lt;a href=&#34;#cloud-und-on-premise-driften-auseinander&#34;&gt;
	Cloud und On-Premise driften auseinander
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Effektiv bewirkt dies, dass die Bauweise der Rechner, die in der Public Cloud Dienst tun, und die Bauweise der Rechner in den Rechenzentren normaler Leute stehen auseinander driften.
Das fängt heute an, aber der Bruch wird sich in den kommenden 5-10 Jahren noch vertiefen.&lt;/p&gt;
&lt;p&gt;Ein Xeon-Markt für Hyperscaler ist groß, aber der Xeon-Markt &amp;ldquo;Server CPU für Cloud-Feinde&amp;rdquo; wird eher klein sein und schrumpfen.
Und wird sich dann irgendwann nicht mehr lohnen.&lt;/p&gt;
&lt;p&gt;Davon mal abgesehen wird durch die laufend verbesserte Integration Chipfläche frei, und Intel muss sehen, was damit anzufangen ist, wenn es nicht &amp;ldquo;immer mehr Cores&amp;rdquo; sein können.
Software Defined Silicon ist ein Testballon, mit dem man das herausfinden kann.
Für die Firma wäre es schon wichtig, das herauszufinden:
von oben drücken die Hyperscaler mit ihren Forderungen nach Mengenrabatten, von der Seite drängt AMD mit ihrer derzeit überlegenen EPYC-Architektur in den Markt und von unten drückt ARM.&lt;/p&gt;
&lt;p&gt;Vielen Kunden können diese Pay-to-Play Features egal sein:
Eine Webshop-Workload sieht in einem Intel vTune aus wie ein REP MOVSB Benchmark, memcpy() at scale, Variablen werden in HTML Templates eingesetzt.&lt;/p&gt;
&lt;p&gt;Sogar die FPU und die ganzen AVX-Instruktionen - das ist alles Verschwendung von Chipfläche für die meisten Kunden.
Nur wenige Anwendungen brauchen und nutzen diese Funktionalität in der CPU wirklich.&lt;/p&gt;
&lt;p&gt;Man stelle sich vor, man muss zum Beispiel für einen Inference Offloader (&amp;ldquo;bestehende Machine Learning Netze ausführen, nicht lernen&amp;rdquo;) bezahlen, und dann wird der auf den meisten Maschinen nie angewendet.
Aber eine Serie CPUs herstellen, die diesen Inference Offloader hat, ihnen eine eigene Seriennummer zu geben und sie einzeln zu verkaufen will auch keiner.
Die Stückzahlen und die Preise geben das nicht her.&lt;/p&gt;
&lt;h1 id=&#34;der-marktdruck-zeigt-zur-cloud&#34;&gt;
    &lt;a href=&#34;#der-marktdruck-zeigt-zur-cloud&#34;&gt;
	Der Marktdruck zeigt zur Cloud
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Wenn aber absehbar ist, dass in 5-10 Jahren die Trennung von Cloud-Hardware und On-Premise Hardware vollzogen sein wird, dann ist es auch klar, dass es nach Ablauf dieser Zeit nicht mehr möglich sein wird, ein Rechenzentrum mit Private Cloud kompetitiv zu betreiben.
Das wird so kommen, weil die Cloud-Technik schlicht proprietär und für normalsterbliche Kunden nicht zu haben sein wird.&lt;/p&gt;
&lt;p&gt;Bei der Technik und der Wirtschaftlichkeit zeigen alle Push- und Pull-Faktoren derzeit massiv in Richtung Cloud.
Wer sein Unternehmen und seine IT darin nicht mit Gewalt und jetzt in die Public Cloud bringt, der wird nach dem Vollzug dieser Trennung in die Röhre schauen.&lt;/p&gt;
&lt;p&gt;Eigene Server vor Ort sind - bei vorhersagbarem Bedarf - auf viele Weisen billiger als in der Cloud zu mieten.
Aber man muss dann auch die eigenen Operations professionalisieren und man muss sich überlegen, wo in 5-10 Jahren die Technik herkommen soll.&lt;/p&gt;
&lt;p&gt;Und wenn wir uns noch einmal die eingangs diskutierte Kundenstruktur von Intel ansehen, dann gibt es weniger als 200 Unternehmen weltweit, die dazu die erforderliche Masse haben.
Das ist sehr frustrierend.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Computer science</title>
      <link>https://blog.koehntopp.info/2021/09/07/computer-science.html</link>
      <pubDate>Tue, 07 Sep 2021 18:24:48 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/09/07/computer-science.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/LilithWittmann/status/1435135620658122752&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lilith Wittmann&lt;/a&gt;

 asked on Twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why do we have so much dangerous software in Germany?&lt;/p&gt;
&lt;p&gt;Because we don&amp;rsquo;t have the competency anywhere (administration, enterprise or science) to understand the complexity of software.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/isotopp/status/1435141131285762052&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My take was&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Computer science is easy.
It is the science of Zeroes and Ones, and it does not get any more complicated anywhere.&lt;/p&gt;
&lt;p&gt;Computer science piles abstractions on top of each other, though, 30 layers deep and with non-linear interactions.
That creates a different kind of complexity that is also harder to handle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you grow older, you learn:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Computer science is the science of boxes and arrows between them.
Zeroes and Ones hardly matter.&lt;/p&gt;
&lt;p&gt;The boxes are still trivial, but problems come from the dependencies.
If the dependencies symbolize &amp;ldquo;communication between systems&amp;rdquo; things get truly awful.&lt;/p&gt;
&lt;p&gt;Communication and consensus are lossy and hard to do, and until recently, were untestable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you grow even older, you learn:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Computer science is the science of crystallized processes.
Code is law.&lt;/p&gt;
&lt;p&gt;Processes are contracts between people that regulate who talks when to whom about what and why.
Programs for human distributed systems, &amp;ldquo;companies&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Computer science takes processes and create a machine-readable form of them.
Interactions between people are mediated through code and automated.
That can be good, but requires that you understand the process and why it is what it is.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/06/15/pizza-people-projects-and-processes.html&#34;&gt;Pizza, People, Projects and Processes&lt;/a&gt;

 has some fundamental things about processes.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The german government fails at digitization&amp;rdquo; means from this point of view that the system has lost the ability to understand its own processes and to change them in a controlled way.&lt;/p&gt;
&lt;p&gt;It is ossified and critical organisational knowledge is not available.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Epochalypse</title>
      <link>https://blog.koehntopp.info/2021/08/18/epochalypse.html</link>
      <pubDate>Wed, 18 Aug 2021 11:15:50 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/08/18/epochalypse.html</guid>
      <description>&lt;p&gt;I had reason to look into the UNIX Eschaton, the time when the signed 32 bit counter of seconds since Midnight, 1970-01-01 UTC overflows. Going &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time#Notable_events_in_Unix_time&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;to Wikipedia&lt;/a&gt;

, I learned we will die two years earlier, because in 2036-02-07, 06:28:16 UTC NTP will kill us all:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At 06:28:16 UTC on Thursday, 7 February 2036, Network Time Protocol will loop over to the next epoch, as the 32-bit time stamp value used in NTP (unsigned, but based on 1 January 1900) will overflow. This date is close to the following date because the 136-year range of a 32-bit integer number of seconds is close to twice the 70-year offset between the two epochs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Good to know.&lt;/p&gt;
&lt;p&gt;Still, I wanted to know the state of things. &lt;a href=&#34;https://linuxreviews.org/Year_2038_Timestamp_Problem&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linuxreviews&lt;/a&gt;

 tells me that the kernel already uses a 64 bit time_t internally, so we are good for the next few billion years. Unfortunately, a lot of other structures don&amp;rsquo;t, and some of them are persisted on disk.&lt;/p&gt;
&lt;h1 id=&#34;filesystems&#34;&gt;
    &lt;a href=&#34;#filesystems&#34;&gt;
	Filesystems
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Extending a persistent data structure is hard, and often cannot be done in-place. In many filesystems, the inode is a tight fit and extending timestamp will double the size of an inode, going up from one power of two to the next higher power of two.&lt;/p&gt;
&lt;p&gt;The ext4 filesystem &lt;a href=&#34;https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Inode_Table&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;inode structure&lt;/a&gt;

 stores &lt;a href=&#34;https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Inode_Timestamps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;64 bit timestamps&lt;/a&gt;

 these days, but the conversion cannot be done in-place. Since Linux 5.4 you get a warning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ext4 filesystem being mounted at (mountpoint) supports timestamps until 2038&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You will need to dump these file systems, recreate them with 64 bit support and then restore the data.&lt;/p&gt;
&lt;p&gt;XFS has the &lt;code&gt;bigtime&lt;/code&gt; option since 5.10. It counts signed 64 bit, but at nanosecond resolution, so it is good until the year 2468.&lt;/p&gt;
&lt;p&gt;NFS V4 has 64 bit timestamps with a second resolution, since 20 years. Anybody using NFS V2 or V3 already gets exactly what they deserve, so not a problem.&lt;/p&gt;
&lt;p&gt;Java counts 64 bit signed values, but uses milliseconds. Good for another 300 million years. Other systems do 64 bit signed, but count microseconds. Still sufficient.&lt;/p&gt;
&lt;p&gt;I am expecting the first &amp;ldquo;Enterprise 2038 Compliance&amp;rdquo; projects to start very soon. It will be great fun to find every single timestamp in a large enterprise and check it for 64 bit time_t. The fact that afterwards there will be different cutoff dates due to different timer resolutions will be even more fun.&lt;/p&gt;
&lt;h1 id=&#34;negative-leap-seconds&#34;&gt;
    &lt;a href=&#34;#negative-leap-seconds&#34;&gt;
	Negative Leap Seconds
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;What also can kill us: Theoretically there are &lt;a href=&#34;https://www.timeanddate.com/time/negative-leap-second.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;negative leap seconds&lt;/a&gt;

, but no code in the world is prepared for them actually happening.&lt;/p&gt;
&lt;h1 id=&#34;gps&#34;&gt;
    &lt;a href=&#34;#gps&#34;&gt;
	GPS
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;GPS will have interesting events in October this year, that is, in 2 months time.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.com/gpsd/gpsd/-/issues/144&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GPSD time will jump back 1024 weeks at after week=2180 (23-October-2021)
&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;why-and-worse&#34;&gt;
    &lt;a href=&#34;#why-and-worse&#34;&gt;
	Why?, and worse
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I was triggered by &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;draft-peabody-dispatch-new-uuid-format-01&lt;/a&gt;

 speaking about &amp;ldquo;36-bit big-endian unsigned Unix Timestamp values&amp;rdquo; in various places. The text also contains phrases such as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example a 36-bit timestamp source would fully utilize timestamp_32 and 4-bits of timestamp_48. The remaining 12-bits in timestamp_48 MUST be set to 0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The string 2038 appears nowhere in this document.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a draft, it contains obvious typos in several place, but generally speaking UUID v7 and UUID v8 look underspecified, with different implementation variants, and have the look of untested ideas. I agree &lt;a href=&#34;https://blog.koehntopp.info/2020/09/22/alter-table-for-uuid.html&#34;&gt;on the general idea&lt;/a&gt;

 of sort-ordering UUID values PK friendly, but &lt;a href=&#34;https://blog.koehntopp.info/2021/04/06/mysql-and-uuids.html&#34;&gt;having a proper UUIDv1&lt;/a&gt;

 looks like the safer option to me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fork, exec, wait and exit</title>
      <link>https://blog.koehntopp.info/2020/12/28/fork-exec-wait-and-exit.html</link>
      <pubDate>Mon, 28 Dec 2020 18:25:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2020/12/28/fork-exec-wait-and-exit.html</guid>
      <description>&lt;p&gt;This is the &lt;a href=&#34;https://blog.koehntopp.info/2007/01/07/fork-exec-wait-und-exit.html&#34;&gt;english version of a 2007 article&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;news:de.comp.os.unix.linux.misc&#34;&gt;de.comp.os.unix.linux.misc&lt;/a&gt;

 somebody asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Are commands in a script executed strictly sequentially, that is,
will the next command only be executed when the previous command has
completed, or will the shell &lt;strong&gt;automatically&lt;/strong&gt; start the next command
if the system has spare capacity?&lt;/li&gt;
&lt;li&gt;Can I change the default behavior - whatever it may be - in any way?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are looking into the fine manual, it may explain at some point that the shell starts each command in a separate process. Then you may continue your thought process and ask what that actually means. As soon as you get to this stage, you may want to have a look at the Unix process lifecycle.&lt;/p&gt;
&lt;h2 id=&#34;processes-and-programs&#34;&gt;
    &lt;a href=&#34;#processes-and-programs&#34;&gt;
	Processes and programs
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A program in Unix is a sequence of executable instructions on a disk. You can use the command &lt;em&gt;size&lt;/em&gt; to get a very cursory check of the structure and memory demands of the program, or use the various invocations of &lt;em&gt;objdump&lt;/em&gt; for a much more detailed view. The only aspect that is of interest to us is the fact that a program is a sequence of instructions and data (on disk) that may potentially be executed at some point in time, maybe even multiple times, maybe even concurrently.&lt;/p&gt;
&lt;p&gt;Such a program in execution is called a process. The process contains the code and initial data of the program itself, and the actual state at the current point in time for the current execution. That is the memory map and the associated memory (check /proc/&lt;em&gt;pid&lt;/em&gt;/maps), but also the program counter, the processor registers, the stack, and finally the current root directory, the current directory, environment variables and the open files, plus a few other things (in modern Linux for example, we find the processes cgroups and namespace relationships, and so on - things became a lot more complicated since 1979).&lt;/p&gt;
&lt;p&gt;In Unix processes and programs are two different and independent things. You can run a program more than once, concurrently. For example, you can run two instances of the &lt;em&gt;vi&lt;/em&gt; editor, which edit two different texts. Program and initial data are the same: it is the same editor. But the state inside the processes is different: the text, the insert mode, cursor position and so on differ. From a programmers point of view, &amp;ldquo;the code is the same, but the variable values are differing&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;A process can run more than one program: The currently running program is throwing itself away, but asks that the operating system loads a different program into the same process. The new program will inherit some reused process state, such as current directories, file handles, privileges and so on.&lt;/p&gt;
&lt;p&gt;All of that is done in original Unix, at the system level, with only four syscalls:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;usermode-and-kernel&#34;&gt;
    &lt;a href=&#34;#usermode-and-kernel&#34;&gt;
	Usermode and Kernel
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/prozesswechsel.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Context switching: Process 1 is running for a bit, but at (1) the kernel interrupts the execution and switches to process 2. Some time later, process 2 is frozen, and we context switch back to where we left off with (1), and so on. For each process, this seems to be seamless, but it happens in intervals that are not continous.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Whenever a Unix process does a system call (and at some other opportunities) the current process leaves the user context and the operating system code is being activated. This is privileged kernel code, and the activation is not quite a subroutine call, because not only is privileged mode activated, but also a kernel stack is being used and the CPU registers of the user process are saved.&lt;/p&gt;
&lt;p&gt;From the point of view of the kernel function, the user process that has called us is inert data and can be manipulated at will.&lt;/p&gt;
&lt;p&gt;The kernel will then execute the system call on behalf of the user program, and then will try to exit the kernel. The typical way to leave the kernel is through the scheduler.&lt;/p&gt;
&lt;p&gt;The scheduler will review the process list and current situation. It will then decide into which of all the different userland processes to exit. It will restore the chosen processes registers, then return into this processes context, using this processes stack. The chosen process may or may not be the one that made the system call.&lt;/p&gt;
&lt;p&gt;In short: Whenever you make a system call, you may (or may not) lose the CPU to another process.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s not too bad, because this other process at some point has to give up the CPU and the kernel will then return into our process as if nothing happened.&lt;/p&gt;
&lt;p&gt;Our program is not being executed linearly, but in a sequence of subjectively linear segments, with breaks inbetween. During these breaks the CPU is working on segments of other processes that are also runnable.&lt;/p&gt;
&lt;h2 id=&#34;fork-and-exit&#34;&gt;
    &lt;a href=&#34;#fork-and-exit&#34;&gt;
	fork() and exit()
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In traditional Unix the only way to create a process is using the &lt;code&gt;fork()&lt;/code&gt; system call. The new process gets a copy of the current program, but new process id (pid). The process id of the parent process (the process that called &lt;code&gt;fork()&lt;/code&gt;) is registered as the new processes parent pid (ppid) to build a process tree.&lt;/p&gt;
&lt;p&gt;In the parent process, &lt;code&gt;fork()&lt;/code&gt; returns and delivers the new processes pid as a result.&lt;/p&gt;
&lt;p&gt;The new process also returns from the &lt;code&gt;fork()&lt;/code&gt; system call (because that is when the copy was made), but the result of the &lt;code&gt;fork()&lt;/code&gt; is 0.&lt;/p&gt;
&lt;p&gt;So &lt;code&gt;fork()&lt;/code&gt; is a special system call. You call it once, but the function returns twice: Once in the parent, and once in the child process. &lt;code&gt;fork()&lt;/code&gt; increases the number of processes in the system by one.&lt;/p&gt;
&lt;p&gt;Every Unix process always starts their existence by returning from a &lt;code&gt;fork()&lt;/code&gt; system call with a 0 result, running the same program as the parent process. They can have different fates because the result of the &lt;code&gt;fork()&lt;/code&gt; system call is different in the parent and child incarnation, and that can drive execution down different &lt;code&gt;if()&lt;/code&gt; branches.&lt;/p&gt;
&lt;p&gt;In Code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the child.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the parent, the child is %d.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In fork():&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Running this, we get:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; make probe1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;cc     probe1.c   -o probe1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; ./probe1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the child.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the parent, the child is 16959.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We are defining a variable &lt;code&gt;pid&lt;/code&gt; of the type &lt;code&gt;pid_t&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This variable saves the &lt;code&gt;fork()&lt;/code&gt; result, and using it we activate one (&amp;ldquo;I am the child.&amp;rdquo;) or the other (&amp;ldquo;I am the parent&amp;rdquo;) branch of an if().&lt;/p&gt;
&lt;p&gt;Running the program we get two result lines. Since we have only one variable, and this variable can have only one state, an instance of the program can only be in either one or the other branch of the code. Since we see two lines of output, two instances of the program with different values for &lt;code&gt;pid&lt;/code&gt; must have been running.&lt;/p&gt;
&lt;p&gt;If we called &lt;code&gt;getpid()&lt;/code&gt; and printed the result we could prove this by showing two different pids (change the program to do this as an exercise!).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fork()&lt;/code&gt; system call is entered once, but left twice, and increments the number of processes in the system by one. After finishing our program the number of processes in the system is as large as before. That means there must be another system call which decrements the number of system calls.&lt;/p&gt;
&lt;p&gt;This system call is &lt;code&gt;exit()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exit()&lt;/code&gt; is a system call you enter once and never leave. It decrements the number of processes in the system by one.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exit()&lt;/code&gt; also accepts an exit status as a parameter, which the parent process can receive (or even has to receive), and which communicates the fate of the child to the parent.&lt;/p&gt;
&lt;p&gt;In our example, all variants of the program call &lt;code&gt;exit()&lt;/code&gt; - we are calling &lt;code&gt;exit()&lt;/code&gt; in the child process, but also in the parent process. That means we terminate two processes. We can only do this, because even the parent process is a child, and in fact, a child of our shell.&lt;/p&gt;
&lt;p&gt;The shell does exactly the same thing we are doing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;bash (16957) --- calls fork() ---&amp;gt; bash (16958) --- becomes ---&amp;gt; probe1 (16958)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;probe1 (16958) --- calls fork() ---&amp;gt; probe1 (16959) --&amp;gt; exit()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   +---&amp;gt; exit()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;exit()&lt;/code&gt; closes all files and sockets, frees all memory and then terminates the process. The parameter of &lt;code&gt;exit()&lt;/code&gt; is the only thing that survives and is handed over to the parent process.&lt;/p&gt;
&lt;h2 id=&#34;wait&#34;&gt;
    &lt;a href=&#34;#wait&#34;&gt;
	wait()
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Our child process ends with an &lt;code&gt;exit(0)&lt;/code&gt;. The 0 is the exit status of our program and can be shipped. We need to make the parent process pick up this value and we need a new system call for this.&lt;/p&gt;
&lt;p&gt;This system call is &lt;code&gt;wait()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In Code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/wait.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the child.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the child, 10 seconds later.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the parent, the child is %d.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;End of process %d: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFEXITED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The process ended with exit(%d).&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WEXITSTATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFSIGNALED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The process ended with kill -%d.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WTERMSIG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In fork():&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the runtime protocol:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; make probe2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;cc     probe2.c   -o probe2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; ./probe2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the child.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the parent, the child is 17399.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the child, 10 seconds later.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;End of process 17399: The process ended with exit(0).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The variable &lt;code&gt;status&lt;/code&gt; is passed to the system call &lt;code&gt;wait()&lt;/code&gt; as a reference parameter, and will be overwritten by it. The value is a bitfield, containing the exit status and additional reasons explaining how the program ended. To decode this, C offers a number of macros with predicates such as &lt;code&gt;WIFEXITED()&lt;/code&gt; or &lt;code&gt;WIFSIGNALED()&lt;/code&gt;. We also get extractors, such as &lt;code&gt;WEXITSTATUS()&lt;/code&gt; and &lt;code&gt;WTERMSIG()&lt;/code&gt;. &lt;code&gt;wait()&lt;/code&gt; also returns the pid of the process that terminated, as a function result.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wait()&lt;/code&gt; stops execution of the parent process until either a signal arrives or a child process terminates. You can arrange for a SIGALARM to be sent to you in order to time bound the &lt;code&gt;wait()&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-init-program-and-zombies&#34;&gt;
    &lt;a href=&#34;#the-init-program-and-zombies&#34;&gt;
	The &lt;code&gt;init&lt;/code&gt; program, and Zombies
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The program &lt;code&gt;init&lt;/code&gt; with the pid 1 will do basically nothing but calling &lt;code&gt;wait()&lt;/code&gt;: It waits for terminating processes and polls their exit status, only to throw it away. It also reads &lt;code&gt;/etc/inittab&lt;/code&gt; and starts the programs configured there. When something from &lt;code&gt;inittab&lt;/code&gt; terminates and is set to &lt;code&gt;respawn&lt;/code&gt;, it will be restarted by &lt;code&gt;init&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When a child process terminates while the parent process is not (yet) waiting for the exit status, &lt;code&gt;exit()&lt;/code&gt; will still free all memory, file handles and so on, but the &lt;code&gt;struct task&lt;/code&gt; (basically the &lt;code&gt;ps&lt;/code&gt; entry) cannot be thrown away. It may be that the parent process at some point in time arrives at a &lt;code&gt;wait()&lt;/code&gt; and then we have to have the exit status, which is stored in a field in the &lt;code&gt;struct task&lt;/code&gt;, so we need to retain it.&lt;/p&gt;
&lt;p&gt;And while the child process is dead already, the process list entry cannot die because the exit status has not yet been polled by the parent. Unix calls such processes without memory or other resouces associated &lt;em&gt;Zombies&lt;/em&gt;. Zombies are visible in the process list when a process generator (a forking process) is faulty and does not &lt;code&gt;wait()&lt;/code&gt; properly. They do not take up memory or any other resouces but the bytes that make up their &lt;code&gt;struct task&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The other case can happen, too: The parent process exits while the child moves on. The kernel will set the ppid of such children with dead parents to the constant value 1, or in other words: &lt;code&gt;init&lt;/code&gt; inherits orphaned processes.&lt;/p&gt;
&lt;p&gt;When the child terminates, &lt;code&gt;init&lt;/code&gt; will &lt;code&gt;wait()&lt;/code&gt; for the exit status of the child, because that&amp;rsquo;s what &lt;code&gt;init&lt;/code&gt; does. No Zombies in this case.&lt;/p&gt;
&lt;p&gt;When we observe the number of processes in the system to be largely constant over time, then the number of calls to &lt;code&gt;fork()&lt;/code&gt;, &lt;code&gt;exit()&lt;/code&gt; and &lt;code&gt;wait()&lt;/code&gt; have to balanced. This is, because for each &lt;code&gt;fork()&lt;/code&gt; there will be an &lt;code&gt;exit()&lt;/code&gt; to match and for each &lt;code&gt;exit()&lt;/code&gt; there must be a &lt;code&gt;wait()&lt;/code&gt; somewhere.&lt;/p&gt;
&lt;p&gt;In reality, and in modern systems, the situation is a bit more complicated, but the original idea is as simple as this. We have a clean fork-exit-wait triangle that describes all processes.&lt;/p&gt;
&lt;h2 id=&#34;exec&#34;&gt;
    &lt;a href=&#34;#exec&#34;&gt;
	exec()
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So while &lt;code&gt;fork()&lt;/code&gt; makes processes, &lt;code&gt;exec()&lt;/code&gt; loads programs into processes that already exist.&lt;/p&gt;
&lt;p&gt;In Code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/wait.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the child.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;execl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/bin/ls&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ls&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-l&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;/tmp/kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In exec(): &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am the parent, and the child is %d.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;End of process %d: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFEXITED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The process ended with exit(%d).&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WEXITSTATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFSIGNALED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The process ended with kill -%d.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WTERMSIG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;In fork():&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The runtime protocol:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; make probe3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;cc     probe3.c   -o probe3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; ./probe3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the child.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;I am the parent, the child is 17690.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;total 36
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rwxr-xr-x 1 kris users 6984 2007-01-05 13:29 probe1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r--r-- 1 kris users  303 2007-01-05 13:36 probe1.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rwxr-xr-x 1 kris users 7489 2007-01-05 13:37 probe2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r--r-- 1 kris users  719 2007-01-05 13:40 probe2.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rwxr-xr-x 1 kris users 7513 2007-01-05 13:42 probe3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;-rw-r--r-- 1 kris users  728 2007-01-05 13:42 probe3.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;End of process 17690: The process ended with exit(0).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here the code of &lt;code&gt;probe3&lt;/code&gt; is thrown away in the child process (the &lt;code&gt;perror(&amp;quot;In exec():&amp;quot;)&lt;/code&gt; is not reached). Instead the running program is being replaced by the given call to &lt;code&gt;ls&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;From the protocol we can see the parent instance of &lt;code&gt;probe3&lt;/code&gt; waits for the &lt;code&gt;exit()&lt;/code&gt;. Since the &lt;code&gt;perror()&lt;/code&gt; after the &lt;code&gt;execl()&lt;/code&gt;is never executed, it cannot be an &lt;code&gt;exit()&lt;/code&gt; in our code. In fact, &lt;code&gt;ls&lt;/code&gt; ends the process we made with an &lt;code&gt;exit()&lt;/code&gt; and that is what we receive our exit status from in our parent processes &lt;code&gt;wait()&lt;/code&gt; call.&lt;/p&gt;
&lt;h2 id=&#34;the-same-as-a-shellscript&#34;&gt;
    &lt;a href=&#34;#the-same-as-a-shellscript&#34;&gt;
	The same, as a Shellscript
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The examples above have been written in C. We can do the same, in &lt;code&gt;bash&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; cat probe1.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;! /bin/bash --
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;echo &amp;#34;Starting child:&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sleep 10 &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;echo &amp;#34;The child is $!&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;echo &amp;#34;The parent is $$&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;echo &amp;#34;$(date): Parent waits.&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;wait
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;echo &amp;#34;The child $! has the exit status $?&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;echo &amp;#34;$(date): Parent woke up.&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:/tmp/kris&amp;gt; ./probe1.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Starting child:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;The child is 18071
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;The parent is 18070
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Fri Jan  5 13:49:56 CET 2007: Parent waits.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;The child 18071 has the exit status 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Fri Jan  5 13:50:06 CET 2007: Parent woke up.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;the-actual-bash&#34;&gt;
    &lt;a href=&#34;#the-actual-bash&#34;&gt;
	The actual bash
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We can also trace the shell while it executes a single command. The information from above should allow us to understand what goes on, and see how the shell actually works.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:~&amp;gt; strace -f -e execve,clone,fork,waitpid bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;kris@linux:~&amp;gt; ls
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;clone(Process 30048 attached
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;child_tidptr=0xb7dab6f8) = 30048
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[pid 30025] waitpid(-1, Process 30025 suspended
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; &amp;lt;unfinished ...&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[pid 30048] execve(&amp;#34;/bin/ls&amp;#34;, [&amp;#34;/bin/ls&amp;#34;, &amp;#34;-N&amp;#34;, &amp;#34;--color=tty&amp;#34;, &amp;#34;-T&amp;#34;, &amp;#34;0&amp;#34;],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[/* 107 vars */]) = 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Process 30025 resumed
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Process 30048 detached
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;... waitpid resumed&amp;gt; [{WIFEXITED(s) &amp;amp;&amp;amp; WEXITSTATUS(s) == 0}], WSTOPPED
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;WCONTINUED) = 30048
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;--- SIGCHLD (Child exited) @ 0 (0) ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Linux uses a generalization of the original Unix &lt;code&gt;fork()&lt;/code&gt;, named &lt;code&gt;clone()&lt;/code&gt;, to create child processes. That is why we do not see &lt;code&gt;fork()&lt;/code&gt; in a Linux system to create a child process, but a &lt;code&gt;clone()&lt;/code&gt; call with some parameters.&lt;/p&gt;
&lt;p&gt;Linux also uses a specialized variant of &lt;code&gt;wait()&lt;/code&gt;, called &lt;code&gt;waitpid()&lt;/code&gt;, to wait for a specific pid.&lt;/p&gt;
&lt;p&gt;Linux finally uses the &lt;code&gt;exec()&lt;/code&gt; variant &lt;code&gt;execve()&lt;/code&gt; to load programs, but that is just shuffling the paramters around. At the end of &lt;code&gt;ls&lt;/code&gt; (PID 30048) the process 30025 will wake up from the &lt;code&gt;wait()&lt;/code&gt; and continue.&lt;/p&gt;
&lt;h2 id=&#34;original-code-what-windows-does-and-what-microsoft-thinks-about-linux&#34;&gt;
    &lt;a href=&#34;#original-code-what-windows-does-and-what-microsoft-thinks-about-linux&#34;&gt;
	Original Code, what Windows does, and what Microsoft thinks about Linux
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This text is based on &lt;a href=&#34;http://groups.google.com/group/de.comp.os.unix.linux.misc/msg/4035c67415f9bc09&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a USENET article&lt;/a&gt;

 I wrote a long time ago.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://minnie.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh/xec.c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt;

 is the original C-code of the original &lt;code&gt;sh&lt;/code&gt; from 1979, with the &lt;code&gt;fork()&lt;/code&gt; system call. Search for &lt;code&gt;case TFORK:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, check out the programming style of Mr. Bourne - this is C, even if it does not look like it.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://blog.koehntopp.info/2007/01/07/fork-exec-wait-und-exit.html&#34;&gt;original 2007 blog article&lt;/a&gt;

, has a followup article &lt;a href=&#34;https://blog.koehntopp.info/2007/01/07/fork-und-exec-vs-createprocess.html&#34;&gt;on Windows CreateProcess()&lt;/a&gt;

, which has not been translated.&lt;/p&gt;
&lt;p&gt;When implementing &lt;code&gt;fork()&lt;/code&gt; in Windows as part of the WSL 1, Microsoft ran into a lot of problems with the syscall, and wrote an article about how they hate it, and why they think their &lt;code&gt;CreateProcessEx()&lt;/code&gt; (in Unix: &lt;code&gt;spawn()&lt;/code&gt;) would be better. The &lt;a href=&#34;https://www.microsoft.com/en-us/research/uploads/prod/2019/04/fork-hotos19.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt;

 makes a number of good points, but is still wrong. :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rechenzentren und ihren Stromverbrauch regulieren</title>
      <link>https://blog.koehntopp.info/2020/11/01/rechenzentren-und-ihren-stromverbrauch-regulieren.html</link>
      <pubDate>Sun, 01 Nov 2020 13:04:46 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2020/11/01/rechenzentren-und-ihren-stromverbrauch-regulieren.html</guid>
      <description>&lt;p&gt;Es gibt ein Interview mit Stefan Ramesohl vom Umweltministerium (des Bundes) in Netzpolitik.org: &amp;ldquo;&lt;a href=&#34;https://netzpolitik.org/2020/interview-zur-umweltpolitischen-digitalagenda-warum-niemand-weiss-wie-viele-rechenzentren-es-in-europa-gibt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Warum niemand weiß, wie viele Rechenzentren es in Europa gibt&lt;/a&gt;

&amp;rdquo;. Im Wesentlichen hat das Umweltministerium angesagt, daß es auf europäischer Ebene Rechenzentren erfassen und katalogisieren will, um in einem zweiten Schritt den Energieverbrauch von Rechenzentren zu regulieren.&lt;/p&gt;
&lt;p&gt;Das ist sehr spannend, denn derzeit gibt es keine Übersicht über Rechenzentren in Europa, und tatsächlich sind einige Rechenzentrumsbetreiber sehr paranoid, was den genauen Standort ihrer Hardware angeht und wieviel und welche Hardware darin ist oder was diese tut. Das ist zwar lächerlich - es ist sehr schwierig eine Energiesenke wie ein Rechenzentrum und ihre Abwärme zu verstecken - aber auch ein sehr sensitives Thema.&lt;/p&gt;
&lt;h2 id=&#34;eine-leseliste&#34;&gt;
    &lt;a href=&#34;#eine-leseliste&#34;&gt;
	Eine Leseliste
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In dem Interview gibt es ein paar Dinge, die Anmerkungen verdienen, aber bevor es los geht noch die anderen Artikel in diesem Blog als Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2017/07/19/threads-vs-watts.html&#34;&gt;Threads vs. Watts&lt;/a&gt;

: Ich habe einen Dell R630 mit zwei Xeon 6132 CPUs getestet, und deren Energieverbrauch unter Last gemessen. Die Resultate sind repräsentativ für die ganze Klasse von Rechnern, die eine Art Arbeitspferd im modernen Rechenzentrum sind. Der Hauptpunkt: 50% der maximalen Energieaufnahme werden bereits bei 20% Auslastung aufgenommen.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2018/02/21/a-journey-to-open-compute.html&#34;&gt;A Journey to Open Compute&lt;/a&gt;

: Mit Open Compute hat Facebook die Energieaufnahme eines Rechners in Idle auf 50% eines herkömmlichen Rechners senken können, und unter Volllast auf 80%. Das wird ermöglicht, indem man Rechner, Rack und Raum nach einer gemeinsamen Spezifikation baut und optimiert. Der Open Compute Standard ist jetzt eine offene Spezifikation, aber wegen der Abhängigkeiten zwischen Raum, Rack und Rechner lohnt sich das alles nur, wenn man ein &lt;a href=&#34;https://en.wikipedia.org/wiki/Big_Tech#GAFAM_or_FAAMG&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GAFAM&lt;/a&gt;

-type Hyperscaler ist.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2017/11/07/power-budgets-for-computing-resources-portable-and-stationary.html&#34;&gt;Power budgets for computing resources - portable and stationary&lt;/a&gt;

 listet generell die Zusammenhänge zwischen Rechnen, Batterieverbrauch und Abwärme auf.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2019/10/05/data-centers-and-energy.html&#34;&gt;Data Centers and Energy&lt;/a&gt;

: Wenn man Netflix schaut, wird Energie verbraucht. Wo und wieviel? Wir reden über Endgeräte (die nur wenige Watt brauchen), über Open Compute in Rechenzentren und über Energieverbrauch im Netzwerk, speziell auf der letzten Meile. Letzterer variiert enorm: 5G braucht sehr viel Energie, (V)DSL ist ebenfalls sehr aufwendig, und Glasfaser nicht - sie ist leicht eine Zehnerpotenz günstiger.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2019/12/28/streaming-and-energy.html&#34;&gt;Streaming and Energy&lt;/a&gt;

 und &lt;a href=&#34;https://blog.koehntopp.info/2020/03/19/netflix-does-not-bring-down-the-internet.html&#34;&gt;Netflix does not bring down the Internet&lt;/a&gt;

: Speziell Videostreaming funktioniert schon sehr optimiert: Videos werden in Edge Data Centers gespeichert und nicht neu codiert, sie werden in der niedrigsten sinnvollen Auflösung geliefert und die Decodierung erfolgt mit spezieller Hardware, damit die Batterie im Endgerät länger hält. All das braucht weniger Energie als angenommen.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.koehntopp.info/2020/06/08/cloud-and-energy.html&#34;&gt;Cloud and Energy&lt;/a&gt;

: Das Uptime Institut sagt: &amp;ldquo;Data center energy efficiency gains have flattened out&amp;rdquo; (und sieht einen durchschnittlichen PUE von 1.58). Uptime sagt im selben Text aber auch, daß neuere und größere Facilities mit Open Compute &lt;em&gt;signifikant&lt;/em&gt; bessere PUE haben. Der einfachste Weg zur Verbesserung von PUE für die meisten Firmen ist, ihre Workloads in die Cloud zu verlagern (und dynamisch zu skalieren). Das hat bei korrekter Durchführung neben Energieffizienz auch noch jede Menge andere Vorteile, die sich aus einem gelungenen Outsourcing ergeben.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hyperscaler-rechenzentren-sind-viel-energieeffizienter&#34;&gt;
    &lt;a href=&#34;#hyperscaler-rechenzentren-sind-viel-energieeffizienter&#34;&gt;
	Hyperscaler-Rechenzentren sind viel energieeffizienter
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auf Twitter ging ich auf &lt;a href=&#34;https://twitter.com/isotopp/status/1322857383929012224&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;das Interview ein&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Netzpolitik.org:&lt;/em&gt; Diese großen Player können ja kein Interesse an staatlicher Regulierung haben, sondern werden versuchen, eine branchenweite Selbstverpflichtung herbeizuführen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Eher nicht. Als &lt;a href=&#34;https://en.wikipedia.org/wiki/Big_Tech#GAFAM_or_FAAMG&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GAFAM&lt;/a&gt;

 wäre man sinnvollerweise für mehr Regulierung, denn das käme effektiv einem Cloud-Zwang gleich.&lt;/p&gt;
&lt;p&gt;Wie oben bereits dargestellt, hat GAFAM bereits Rechenzentren, die sehr viel effizienter mit der Energie umgehen als normale Rechenzentren es tun. Das ist so, weil diese Rechenzentren Raum, Rack und Rechner als ein System designed haben und weil die Betreiber als Hyperscaler es sich leisten können, solche Rechenzentren nach Maß zu designen, bauen zu lassen und zu optimieren.&lt;/p&gt;
&lt;p&gt;Während also ein traditionelles Rechenzentrum Rechner für eine Million Watt betreibt und dafür um die 600.000W an Kühlung und anderer Sekundärenergie aufbringen muß (Power Utilization Efficiency, PUE 1.6), können die am Besten optimierten Google-Rechenzentren eine Million Watt an Rechnern mit 60.000W Sekundärenergie betreiben (PUE 1.06).&lt;/p&gt;
&lt;p&gt;Ein effektiver PUE von &amp;lt;1.2 ist par für die Hyperscaler-Cloud.&lt;/p&gt;
&lt;p&gt;Ein kleinerer Rechenzentrums-Nutzer füllt nicht ein ganzes RZ mit Rechnern, läßt also nicht nach Maß bauen, sondern mietet existierenden RZ-Space, der prinzipbedingt nicht gut geeignet ist für Open Compute (OCP). Existierende RZ-Space ist generisch, er muß jede Art von IT-Equiment aufnehmen können und ist daher oft Überkühlt, der Airflow ist nicht optimiert und hat auf diese Weise mindestens dreimal mehr Overhead als RZ-Space, den Hyperscaler nach Maß bauen (PUE &amp;lt;1.2 vs. PUE ~ 1.6). Noch kleinere Benutzer füllen nur einzelne Räume oder haben Raumabschnitte (&amp;ldquo;Cages&amp;rdquo;), teilen also die Kühlung mit anderen Nutzern.&lt;/p&gt;
&lt;p&gt;Hyperscaler bauen nicht nur ein RZ, sondern tun das in Serie, und iterieren dabei das Design. Sie lassen auch Rechner und Rechnerkonzepte wie OCP entwickeln, und stimmen dabei das Design des RZ auf das Design von Rack und Rechner ab - daher kommt die energetische Überlegenheit von OCP.&lt;/p&gt;
&lt;p&gt;Dazu kommt, wie oben auch dargestellt, daß ein ausgelasteter Rechner energieeffizienter ist als einer, der teilweise vor sich hin idled. Ein Dell R630 verbraucht bereits 50% seiner maximalen Energie bei 20% Auslastung.&lt;/p&gt;
&lt;p&gt;Maschinen auszulasten und Workloads dynamisch zu skalieren ist etwas, für das &amp;ldquo;die Cloud&amp;rdquo;, also die API-gesteuerten Rechenzentren der Hyperscaler, gebaut worden sind. Hyperscale Clouds haben &amp;ldquo;sellable cores per provisioned cores&amp;rdquo; als eine zentrale Optimierungsmetrik, sie wollen ausgelastete Rechner, weil das die Einnahmen definiert.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2017/07/watt-thread.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Watts per Thread (Dell R630, Dual Xeon 6132)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wie dem auch sei: Aus energetischer Sicht ist Auslastung wichtig, weil die Watts zur Aktivierung des n-ten Rechenkerns asymptotisch günstiger sind. Das ist so, weil die Idle-Energieaufnahme der Maschine und des ganzen Rechenzentrums drumherum sich so amortisiert.&lt;/p&gt;
&lt;p&gt;Außerdem: Wenn man es sich leisten kann, Hyperthreading zu aktivieren (Wegen der diversen Intel-Caching-Bugs der letzten Jahre ist das oft ein Sicherheitsrisiko), dann sind die Hyperthreads energetisch betrachtet nahezu kostenfrei. Integer- und Stringprocessing-Workloads können Hypterthreads als nahezu vollwertige zweite CPU betrachten, Fließkomma-intensive Workloads nicht.&lt;/p&gt;
&lt;p&gt;Webshops sind, wenn sie richtig gebaut worden sind, String- und Integer-Anwendungen und sehr wenig Fließkomma-intensiv, könnten also von Hyperthreading voll profitieren. Die Anzahl der nutzbaren Cores verdoppelt sich rechnerisch und ist bei Webshop fast vollständig realisierbar - ein Webshop mit einer fast reinen Integer/String Workload kann von den 56 rechnerischen Kernen einer Dual-6132 eine Load von deutlich über 40 stabil verarbeiten.&lt;/p&gt;
&lt;h2 id=&#34;kosten-und-energie&#34;&gt;
    &lt;a href=&#34;#kosten-und-energie&#34;&gt;
	Kosten und Energie
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Über eine Nutzungsdauer von fünf Jahren gerechnet machen Energiekosten in etwa die Hälfte der Gesamtkosten eines Rechners aus - für einen Hyperscaler ist das ein so intensiver Kostenfaktor, daß sie aus wirtschaftlichen Gründen seit mehr als 15 Jahren intensiv die Energieaufnahme ihrer Rechenzentren in allen Punkten optimieren.&lt;/p&gt;
&lt;p&gt;Das ist der primäre Grund für das Open Compute Projekt (OCP) und die Bauweise der Hyperscaler-Rechenzentren. Für Hyperscaler lohnt dies, weil das der Kernbereich ihres wirtschaftlichen Handelns ist.&lt;/p&gt;
&lt;p&gt;Dazu kommt, wie in der Leseliste dargestellt, daß alle Hyperscaler (bis auf Amazon) bereits 100% graugrün sind, also zu großen Teilen bereits auf tatsächlich regenerativer Energie laufen und den Rest mit Zertifikaten kompensieren, und obendrein sehr nah in der Zukunft liegende Ziele haben, was komplett grünen Betrieb &lt;em&gt;und&lt;/em&gt; Überkompensation angeht. Speziell Google ist ein sehr großer Investor in Wind- und Solarkraftanlagen, Netflix überkompensiert bereits jetzt, ist also Carbon-Negative.&lt;/p&gt;
&lt;p&gt;Für ein Firma, für die der Betrieb und die Skalierung von Rechenzentren und ihrer Hardware nicht der Kern ihres wirtschaftlichen Handelns ist, ist es ausgeschlossen hier mitzuhalten.&lt;/p&gt;
&lt;p&gt;Oder wie Ramesohl es formuliert:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Es ist einfach so, dass eine gewisse Skalierung zu großen Vorteilen führt, die dann wiederum über eine Wettbewerbsfähigkeit im Markt die Marktposition stärkt und damit den Marktanteil erhöht. Das ist ein selbstverstärkender Effekt. Hinzu kommt, dass diese Akteure in der Lage waren, zu investieren und sich damit ein technologisches Know-how aufzubauen, was wiederum im Umkehrschluss ihre Marktposition stärkt.&lt;/p&gt;
&lt;p&gt;Das ist richtig, dass gerade bei den großen Playern entsprechende selbstdefinierte Nachhaltigkeitsziele vorliegen. Das sind teilweise sehr ambitionierte Pläne, die versuchen, die Emissionen, die im Laufe der Unternehmensgeschichte bisher aufgelaufen sind, rückwirkend zu kompensieren.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;bandbreite-und-energie&#34;&gt;
    &lt;a href=&#34;#bandbreite-und-energie&#34;&gt;
	Bandbreite und Energie
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ramesohl sagt auch:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Da geht es um die Frage, ob jede Internetwerbung eine Autoplay-Funktion braucht, also abspielt, wenn ich nur über die Seite scrolle. Das erzeugt nämlich ein enormes Datenvolumen. Oder die Frage, ob alles standardmäßig in höchster Auflösung gestreamt werden muss, wenn es auf einem kleinen Bildschirm angeschaut wird.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dahinter steht die Fehlmeinung, daß eine Netzwerkinfrastruktur mehr Energie benötigt, wenn Daten übertragen werden. Das ist nicht der Fall.&lt;/p&gt;
&lt;p&gt;So wie eine Festplatte oder RAM nicht schwerer werden oder mehr Energie verbrauchen, wenn Daten darin gespeichert werden, so braucht ein kabelgebundenener Netzwerklink nicht (wesentlich) mehr Energie, wenn Daten übertragen werden.&lt;/p&gt;
&lt;p&gt;RAM und Festplatten brauchen (mehr) Energie, wenn Daten &lt;em&gt;geändert&lt;/em&gt; werden, also Bits gekippt werden.&lt;/p&gt;
&lt;p&gt;Und kabelgebundenene Netzwerkinfrastruktur überträgt immer Daten (Trägersignale), auf die die Nutzlast dann aufmoduliert wird. Das wiederum braucht im Vergleich zur Grundlast des Netzes (das Senden des Trägers) kaum Energie. Anders sieht es bei Funkverbindungen, also Datenübertragung via Mobilfunknetz aus, dort wird der Sender komplett abgeschaltet, wenn er nicht gebraucht wird, um das Spektrum frei zu halten.&lt;/p&gt;
&lt;p&gt;Speziell bei Glasfaser ist es so, daß man die Bandbreite zudem mit nur wenig mehr Energieaufwand um Größenordnungen hochdrehen kann, wenn man will - durch den Austausch der Laser kann dasselbe Medium in der Kapazität verzehnfacht oder verhundertfacht werden ohne signifikat mehr Energie zu verbrauchen.&lt;/p&gt;
&lt;h2 id=&#34;was-tun-wir-mit-all-dem-compute&#34;&gt;
    &lt;a href=&#34;#was-tun-wir-mit-all-dem-compute&#34;&gt;
	Was tun wir mit all dem Compute
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Am Ende ist es eventuell eine gute Idee, nicht nur genauer hin zu schauen, wo Rechenzentren stehen und wie sie designed sind, sondern was mit den Megawatts gemacht wird, die dort verwendet werden. Auf diese Weise bekommen wir eventuell Bitcoin weg gebombt. Das wäre schon einmal sehr wichtig, denn hier wird Energie in der Größenordnung ganzer Staaten in sinnlosen Berechnungen (&amp;ldquo;Proof of Work&amp;rdquo;) verheizt. Und nein, das kann man nicht ändern, PoW kann nicht sinnvolles berechnen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When a file changes, do a thing</title>
      <link>https://blog.koehntopp.info/2019/11/19/when-a-file-changes-do-a-thing.html</link>
      <pubDate>Tue, 19 Nov 2019 12:49:53 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/11/19/when-a-file-changes-do-a-thing.html</guid>
      <description>&lt;p&gt;When developing there is often an edit-compile-test cycle, or an
edit-distribute-changes cycle or a similar repetetive task. You
could poll changes, for example with cron every minute or
similarly, but that is wasteful and slow.&lt;/p&gt;
&lt;p&gt;All modern operating systems have mechanisms for processes to
subscribe to file or directory changes. In MacOS, we do have the
&lt;a href=&#34;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/FSEvents_ProgGuide/TechnologyOverview/TechnologyOverview.html#//apple_ref/doc/uid/TP40005289-CH3-SW1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;File System Events&lt;/a&gt;


API since 10.5, in Linux we got three different implementations
(as described in &lt;a href=&#34;https://lwn.net/Articles/604686/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LWN&lt;/a&gt;

): The
original dnotify, its replacement inotify and the even more
recent fanotify (which got its own &lt;a href=&#34;https://lwn.net/Articles/605128/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LWN
article&lt;/a&gt;

). BSD has kqueue.&lt;/p&gt;
&lt;p&gt;The idea is that you subscribe to a directory and get notified
for change/create/delete/rename events inside that directory
and/or all events recursively beneath that starting point (a
&amp;lsquo;root&amp;rsquo;). You would be interested into the type of change and the
name of the file path that changes, and you would probably want
to be able to retrieve lists of these changes in batch.&lt;/p&gt;
&lt;p&gt;To make that useful, you would need a shell interface to this,
and there are quite a few by now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The most convenient seems to be
&lt;a href=&#34;https://github.com/clibs/entr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;entr&lt;/a&gt;

, because it works most
closely with shell programs.&lt;/li&gt;
&lt;li&gt;There is also &lt;a href=&#34;https://facebook.github.io/watchman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;watchman&lt;/a&gt;

,
but this requires submitting jobs and processing results in
Javascript to fully use its potential.&lt;/li&gt;
&lt;li&gt;One of the first programs to use filesystem subscriptions is
&lt;a href=&#34;https://github.com/emcrisostomo/fswatch/wiki/How-to-Use-fswatch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fswatch&lt;/a&gt;

,
but while highly portable, it is cumbersome to use. Instead of
running commands, it just reports filenames to feed into a
pipe to handle.&lt;/li&gt;
&lt;li&gt;Ruby seems to have a library called
&lt;a href=&#34;https://github.com/guard/guard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Guard&lt;/a&gt;

 that also comes with
an interface to shell, but can also being used as a ruby gem.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/package/spy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spy&lt;/a&gt;

 is a weird piece
of Haskell that produces a small binary that can run commands
on file system changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python seems to come with a bunch of modules and interfaces in
various states of disrepair,
&lt;a href=&#34;https://github.com/rvoicilas/inotify-tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;inotify-tools&lt;/a&gt;

, the
very tiny wrapper &lt;a href=&#34;https://pypi.org/project/inotify_simple/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;inotify_simple&lt;/a&gt;


(the simple here refers to the fact that it is a tiny
wrapper around the C library, not simple to use), the more
convenient &lt;a href=&#34;https://pypi.org/project/inotify/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;inotify&lt;/a&gt;

 and the
high level wrapper
&lt;a href=&#34;https://pythonhosted.org/watchdog/quickstart.html#a-simple-example&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;watchdog&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;a-test-scenario&#34;&gt;
    &lt;a href=&#34;#a-test-scenario&#34;&gt;
	A test scenario
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;As a test scenario I have a &lt;code&gt;ship-to-kvm&lt;/code&gt; command that I want to
run on every file change. It looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;rsync -e ssh -t -v --delete --delete-excluded --exclude=&amp;#39;.git&amp;#39; -r \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  ~/git_tree/myproject \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  devuser@devbox.example.com:myproject
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;when I save my local file from my local editor so that the tree
myproject is made available on my devbox.&lt;/p&gt;
&lt;h2 id=&#34;entr&#34;&gt;
    &lt;a href=&#34;#entr&#34;&gt;
	entr
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;With &lt;a href=&#34;https://github.com/clibs/entr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;entr&lt;/a&gt;

, that is rather
simple. The package &lt;code&gt;entr&lt;/code&gt; is available in Homebrew on MacOS
(&lt;code&gt;brew install entr&lt;/code&gt;) or as a package in Linux (&lt;code&gt;yum install -y entr&lt;/code&gt;, &lt;code&gt;apt install entr&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You ask entr to watch a list of files or a directory, and when
things change to run a command. You can hit space to force
execution even when nothing changed, or &lt;code&gt;q&lt;/code&gt; to end the command.&lt;/p&gt;
&lt;p&gt;Various ways to handle changes are provided:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ls *.js &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; entr -r node myproject.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-r&lt;/code&gt; option here will SIGTERM the node instance, wait for it
to complete and then restart it.&lt;/p&gt;
&lt;p&gt;To get notification of new and deleted files, you need to watch
directories, which are inferred from a file list. This is done
with the &lt;code&gt;-d&lt;/code&gt; option and in fact the command terminates so you
need to wrap it in a loop:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; :&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt;   ls &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; entr -d ship-to-kvm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are a few other options, but these two should cover the
most common use cases.&lt;/p&gt;
&lt;h2 id=&#34;watchman&#34;&gt;
    &lt;a href=&#34;#watchman&#34;&gt;
	watchman
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/watchman/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;watchman&lt;/a&gt;

 is the facebook
take on things. It consists of a daemon that is automatically
started when you are using the frontend command, and a frontend
command that actually does not expose all the functionality
unless you feed it JSON job files. All command results are also
JSON.&lt;/p&gt;
&lt;p&gt;watchman has the concept of roots, filesystem subtrees that are
being watched, and then triggers that are attached to roots or
subtrees of roots, and are being run on change. A simple
predicate language and a selection of regex libraries can be
used to formulate conditions for triggers.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; watchman watch ~/git_tree/myproject &lt;span class=&#34;c1&#34;&gt;# this will start the daemon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; watchman -j ship-to-kvm.json        &lt;span class=&#34;c1&#34;&gt;# this defines the job&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and the actual job definition is then something like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;trigger&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;~/git_tree/myproject&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ship-to-kvm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;expression&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pcre&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;^[a-zA-Z0-9]&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ship-to-kvm&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This may look nicer to developers, but I seem to prefer the entr
way of doing things.&lt;/p&gt;
&lt;h2 id=&#34;python-watchdog&#34;&gt;
    &lt;a href=&#34;#python-watchdog&#34;&gt;
	Python watchdog
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The Python library
&lt;a href=&#34;https://pythonhosted.org/watchdog/quickstart.html#a-simple-example&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;watchdog&lt;/a&gt;


provides a convenient programmatic interface to inotify and friends
by defining an Observer class and scheduling operations to the
observer when there are events outstanding.&lt;/p&gt;
&lt;p&gt;The example from the manual looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;logging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;watchdog.observers&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Observer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;watchdog.events&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoggingEventHandler&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;basicConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; - &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(message)s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;datefmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;event_handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoggingEventHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;observer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Observer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;observer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recursive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;observer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;observer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;observer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and when run does things like this for a &lt;code&gt;touch keks; sleep 1; rm keks&lt;/code&gt; in a secondary shell:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:40 - Modified directory: ./.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:44 - Created file: ./keks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:44 - Modified directory: .
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:44 - Modified directory: ./.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:53 - Deleted file: ./keks
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:53 - Modified directory: .
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;2019-11-19 14:36:53 - Modified directory: ./.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The actual observer selection allows a rich palette of event
classes and filters, so dispatching and filtering events is easy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Everything was a file, but we got better</title>
      <link>https://blog.koehntopp.info/2019/11/14/everything-was-a-file-but-we-got-better.html</link>
      <pubDate>Thu, 14 Nov 2019 11:42:07 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/11/14/everything-was-a-file-but-we-got-better.html</guid>
      <description>&lt;p&gt;I fell into the Twitters again. &lt;a href=&#34;https://twitter.com/carrickdb/status/1194842452361789441&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@CarrickDB&lt;/a&gt;

 joked about Unix,
Files and Directories:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/carrickdb/status/1194842452361789441&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/everything-is-a-file.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;And that is a case of &amp;ldquo;Haha, only serious&amp;rdquo;. Because directories
used to be files, and that was a bad time. Check out the V7 Unix
&lt;a href=&#34;https://github.com/v7unix/v7unix/blob/master/v7/usr/src/cmd/mkdir.c#L49&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mkdir&lt;/a&gt;


command. At this point in history we do not have a &lt;code&gt;mkdir(2)&lt;/code&gt;
syscall, yet, so we need to construct the entire directory in
multiple steps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/v7unix/v7unix/blob/master/v7/usr/src/cmd/mkdir.c#L49&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;mknod(2)&lt;/code&gt; an inode that has the &lt;code&gt;S_IFDIR&lt;/code&gt; flag set&lt;/a&gt;

,
even if that macro does not even exist yet.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/v7unix/v7unix/blob/master/v7/usr/src/cmd/mkdir.c#L57&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;manually link the entry for the current directory &lt;code&gt;.&lt;/code&gt; into that&lt;/a&gt;

&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/v7unix/v7unix/blob/master/v7/usr/src/cmd/mkdir.c#L64&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;manually link the entry for the parent directory &lt;code&gt;..&lt;/code&gt; into that&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This fragile and broken: &lt;code&gt;mkdir&lt;/code&gt; could be interrupted while
doing that or another program could try to race &lt;code&gt;mkdir&lt;/code&gt; while it
is doing that. In both cases we get directories that are invalid
and dangerous to traverse, because they break crucial
assumptions users make about directories.&lt;/p&gt;
&lt;p&gt;This is also before &lt;code&gt;readdir(2)&lt;/code&gt; and friends, so programs like
&lt;code&gt;ls&lt;/code&gt; &lt;a href=&#34;https://github.com/v7unix/v7unix/blob/master/v7/usr/src/cmd/ls.c#L304&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open directories like files&lt;/a&gt;


and then make assumptions about the format of dentries on disk.
Specifically, they assume a 16 bit inode number and then a
filename of 14 characters or less and a directory that is an array
of these entries. Unfortunately, time has not been kind to the
assumption of 65535 files or less per partition, and also we
require filenames that are longer than 14 bytes these days.&lt;/p&gt;
&lt;p&gt;Finally have a look at the hot mess that the
&lt;a href=&#34;https://github.com/v7unix/v7unix/blob/master/v7/usr/src/cmd/rmdir.c#L29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rmdir&lt;/a&gt;


command is. What could probably go wrong?&lt;/p&gt;
&lt;p&gt;Well, &lt;a href=&#34;https://twitter.com/opheleon/status/1194941703632932865&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jan Kraetzschmar&lt;/a&gt;


reminds us that this kind of non-atomic rmdir can also produce
structures in the filesystem that are disconnected from the main
tree starting at &lt;code&gt;/&lt;/code&gt;. In that case you end up with orphaned, unreachable
inodes that still have a non-zero link count. &lt;code&gt;fsck&lt;/code&gt; should be
able to find them and free them, but of course that would be a
disruptive operation. Making &lt;code&gt;mkdir&lt;/code&gt; and &lt;code&gt;rmdir&lt;/code&gt; system call avoids
all of these problems.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why all of this was fixed in 1984 or so, when BSD
FFS came around and we got long filenames, wider inodes,
&lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;rmdir&lt;/code&gt; and &lt;code&gt;readdir&lt;/code&gt; as syscalls and many other
improvements.&lt;/p&gt;
&lt;h2 id=&#34;what-if-really-everything-was-a-file&#34;&gt;
    &lt;a href=&#34;#what-if-really-everything-was-a-file&#34;&gt;
	What if really everything was a file?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Another decade later, around 1995 or so, we got Plan 9, not from
outer space, but from Bell Labs.&lt;/p&gt;
&lt;p&gt;It not only brought us Unicode everywhere, but also an
exploration of &amp;lsquo;What if really everything was a file?&amp;rsquo;,
including other machines on the network and processes on our
machine. From that we get todays
&lt;a href=&#34;https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs#/proc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;procfs&lt;/a&gt;


in Linux (and in many other modern Unices).&lt;/p&gt;
&lt;p&gt;Except that you can&amp;rsquo;t &lt;code&gt;rm -rf /proc/1&lt;/code&gt; to shut down the box.&lt;/p&gt;
&lt;h2 id=&#34;things-that-still-are-not-a-file-and-should-be-dead&#34;&gt;
    &lt;a href=&#34;#things-that-still-are-not-a-file-and-should-be-dead&#34;&gt;
	Things that still are not a file, and should be dead
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I am not going to mention System V IPC here at all. Not shm, not
sem, and not msq. They are abominations that should never have
escaped the lab cages they have been conceived in.&lt;/p&gt;
&lt;p&gt;There is &lt;code&gt;mmap&lt;/code&gt;, and mmap is good. Or can be, as long as you do
not conflate in memory and on disk representations of data, and
understand the value of MVCC. But that is another story and
should be told another day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Filling disk space fast</title>
      <link>https://blog.koehntopp.info/2019/11/11/filling-disk-space-fast.html</link>
      <pubDate>Mon, 11 Nov 2019 16:23:55 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/11/11/filling-disk-space-fast.html</guid>
      <description>&lt;p&gt;Some of the databases at work are a tad on the large side, in the high
2-digit terabytes of size. Copying these to new machines at the moment takes
a rather long time, multiple days, up to a week. Speeding it up pays
twice, because with shorter copy times there is also less binlog to catch
up.&lt;/p&gt;
&lt;p&gt;I have been looking into disk copy speeds in order to better understand the
limits. When creating a partition from NVME devices, the most simple layout
is a concatenation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvcreate -n kris -L 10t vg00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;data.0 &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1024k &lt;span class=&#34;nv&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10240&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using a single &lt;code&gt;dd&lt;/code&gt; command, I get about 600 MB/sec read or written from it.
For 50TB, this is 87400 seconds, slightly more than one day.&lt;/p&gt;
&lt;p&gt;The key to NVME saturation is parallel access, so lets do this in parallel
with multiple processes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; seq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;128&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; parallel dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;data.&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1024k &lt;span class=&#34;nv&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10240&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will run as many processes in parallel as I have CPUs. On the test
machine it will keep 32 processes running at all times, filling the queues
of the NVME device deeply. It can reach 3250 MB/s, so 50 TB translate into
16130 seconds, 4.5h.&lt;/p&gt;
&lt;p&gt;Had I created the NVME device as a striped RAID-0, I would have gotten even
better performance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lvcreate -n kris -L 10t -i12 -I64k vg00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; seq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;128&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; parallel dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;data.&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1024k &lt;span class=&#34;nv&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10240&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This configuration can reach up to 5.2 GB/s locally, so for 50TB, we get to
2.75h disk write time.&lt;/p&gt;
&lt;p&gt;Now, what I actually want is unfortunately something different: A copy of
the original database image from machine A transferred to machine B. So that
will translate into something along the lines of&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir /root/kris
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; !$
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; fpart -o chunk -n &lt;span class=&#34;m&#34;&gt;128&lt;/span&gt; /mysql/testschema
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; find . -type f &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; parallel rsync --files-from&lt;span class=&#34;o&#34;&gt;={}&lt;/span&gt; / kris@B:/mysql/testschema
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but that is still suffering from all the rsync+ssh overhead. It will give
you around 2.7 GB/s. Using tar, this becomes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; find . -type f &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; parallel &lt;span class=&#34;s1&#34;&gt;&amp;#39;tar cvf - --files-from={} | ssh kkoehntopp@B &amp;#34;tar -C /a -xf -&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which is much faster for a clean, non-incremental copy. But that is still
using ssh to encrypt and can become a bottleneck in some use cases.&lt;/p&gt;
&lt;p&gt;You could run &lt;a href=&#34;http://moo.nac.uci.edu/~hjm/tnc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tnc&lt;/a&gt;

 to use tar and netcat
to get rid of both sources of overhead to speed things up even more and run
at media speed.
&lt;a href=&#34;http://moo.nac.uci.edu/~hjm/HOWTO_move_data.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to transfer large amounts of data via network&lt;/a&gt;


in general is a useful resource and has a few more ideas and tools on how to
handle things.&lt;/p&gt;
&lt;h2 id=&#34;tools-used&#34;&gt;
    &lt;a href=&#34;#tools-used&#34;&gt;
	Tools used
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;GNU &lt;code&gt;parallel&lt;/code&gt; - a perl script that is part of CentOS 7, which can
comfortably construct and run command lines in parallel execution. It has no
large advantage over &lt;code&gt;xargs -P&lt;/code&gt;, but I like the flexibility of the
substitutions offer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fpart&lt;/code&gt; - a tool that will take a list of filenames or pairs of size and
filename (du output) and sort it into chunks of files so that each chunk
contains the approximately same amount of bytes.&lt;/p&gt;
&lt;h2 id=&#34;other-tools&#34;&gt;
    &lt;a href=&#34;#other-tools&#34;&gt;
	Other tools
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fpsync&lt;/code&gt; - deprecated tool, part of &lt;code&gt;fpart&lt;/code&gt;, does a parallel rsync, badly.
Do not use this. Also, the successor tool (&lt;code&gt;parsyncfp&lt;/code&gt;) is not really
valuable if you can do fpart and your transfer command of choice yourself.
Actually doing it yourself is more transparent and easier to test.&lt;/p&gt;
&lt;h2 id=&#34;this-requires-nvme&#34;&gt;
    &lt;a href=&#34;#this-requires-nvme&#34;&gt;
	This requires NVME
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;NVME devices have multiple deep queues. They can utilize parallel access and
turn it into performance. In fact, getting the full performance out of a
NVME device probably requires asyncio or parallel processes.&lt;/p&gt;
&lt;p&gt;That is, because a single NVME device can give you around 800000 IOPS or
more, so you should complete one IO every 1.2 microseconds. On the other
hand, actual read latency is on the order to 100 micros, and write latency
buffered/unbuffered is at around 50/450 micros, so a single threaded access
can realize only a fraction of the total I/O potential of the device.&lt;/p&gt;
&lt;p&gt;NVME devices are using the same flash storage that SSD use, but they remove
the SATA controller from the equation. Instead the flash resides directly on
the PCI bus. NVME can be made available locally or remotely, and the way we
have set our network the network is not the bottleneck. Network access
inside our data centers will add 20 micros or less in latency.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ceph and NVME - not a good combination?</title>
      <link>https://blog.koehntopp.info/2019/07/16/ceph-and-nvme---not-a-good-combination.html</link>
      <pubDate>Tue, 16 Jul 2019 08:21:25 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/07/16/ceph-and-nvme---not-a-good-combination.html</guid>
      <description>&lt;p&gt;Saving an &lt;a href=&#34;https://twitter.com/isotopp/status/1151013922528534528&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;older twitter thread on Ceph&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ceph.com/community/part-4-rhcs-3-2-bluestore-advanced-performance-investigation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/ceph-blog.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;I just have finished reading
&lt;a href=&#34;https://ceph.com/community/part-4-rhcs-3-2-bluestore-advanced-performance-investigation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Part 4: RHCS 3.2 Bluestore Advanced Performance Investigation&lt;/a&gt;


and now I do not know what to say.&lt;/p&gt;
&lt;p&gt;Ceph set out with the idea to make storage a commodity by using
regular PCs + a lot of local hard disks + software to make
inexpensive storage. For that, you ran a number of control
processes and an OSD process per disk (&amp;ldquo;object storage demon&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Some people were very enthusiastic, envisioning OSD processes
becoming an integrated part of any storage device as part of
computational storage, even.&lt;/p&gt;
&lt;p&gt;Something else happened: NVME. NVME is flash memory on a PCIe
bus, giving you a very large number of IOPS with mediocre
latency. You get around 1 million IO operations per second, but
a read takes ~100 microseconds, and an unbuffered write takes
about 420 micros. That means, you need to run 100s of parallel
things.&lt;/p&gt;
&lt;p&gt;Ceph is full of logs. Logs kill parallelism by design, or at
least severely limit it. Also, Ceph is full of computational
complexity. And that is ok, when a disk seek takes 5ms on a 3GHz
CPU, and you got 15 million clock cycles think time per disk
seek. Less so, when you need to keep 100s of ops in flight.
Suddenly, the budget shrinks by /1000, and your serializing
architecture gets in the way of things.&lt;/p&gt;
&lt;p&gt;Now read this report. We are talking about NVME devices, 11T,
maybe 16T per device, 4 PCIe lanes. These people are talking
about 4 OSD processes (down to 2, and they consider this an
improvement) per device. And they eat six (sic!) cores per NVME
device. Apart from this never making it to computational storage
for thermal reasons, this is an insane cost.&lt;/p&gt;
&lt;p&gt;In modern storage, bandwidth is usually limited by the network,
not the local devices: You can RAID your storage bandwidth until
you saturated the 100 GBit/s network, and then you are done.&lt;/p&gt;
&lt;p&gt;IOPS are unlimited in the same way: You get not quite 1 million
IOPS per device, so if that is not sufficient, spread across
many.&lt;/p&gt;
&lt;p&gt;The only remaining challenge in this
&lt;a href=&#34;https://blog.koehntopp.info/2017/07/07/the-data-center-in-the-age-of-abundance.html&#34;&gt;age of abundance in the data center&lt;/a&gt;


is commit (fsync) latency: how long to push things to a
persistent storage. Even that comes down a lot, with optane or
NVRAM in the client or as early as possible in the server.&lt;/p&gt;
&lt;p&gt;Relatively low powered all-flash iSCSI appliances do routinely
250 micros commit latency, and things involving NVMEoF and RDMA
can come down to under 100 micros reliably, if you have the
coin. Want faster? Put Optane or NVRAM into each client.&lt;/p&gt;
&lt;p&gt;And it is telling that the paper here talks about latency
improvements only in relative numbers (&amp;ldquo;30% less&amp;rdquo;), but never
actually speaks about absolute timings.&lt;/p&gt;
&lt;p&gt;Maybe it is time to stop and think, and re-evaluate if this Ceph
thing is the smart thing to do with storage in the face of NVME,
Optane and NVRAM. Because the numbers look all wrong to me. Even
the units look wrong, actually.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/antondollmaier/status/1151022173982724097&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conversations deeper in the Thread&lt;/a&gt;

:&lt;/p&gt;
&lt;p&gt;There was were questions on what to use for low-latency
disaggregated storage and if one needed redundancy at all.&lt;/p&gt;
&lt;p&gt;Examples of low-latency storage are software solutions from
&lt;a href=&#34;http://lightbitslabs.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lightbitslabs&lt;/a&gt;

, from
&lt;a href=&#34;http://datera.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Datera&lt;/a&gt;

, and from
&lt;a href=&#34;http://quobyte.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quobyte&lt;/a&gt;

. There are many more.&lt;/p&gt;
&lt;p&gt;And funnily enough, if you talk to your inhouse customers, most
actually don&amp;rsquo;t want any of this, because they talk to a database
(MySQL, Cassandra, Elastic, &amp;hellip;) and not to &amp;ldquo;storage&amp;rdquo; directly.&lt;/p&gt;
&lt;p&gt;Then you speak to the MySQL people and they say &amp;ldquo;We have
replication and
&lt;a href=&#34;https://github.com/github/orchestrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;

, even
masters are throwaway&amp;rdquo;. You talk to the Cassandra team and they
laugh in Paxos. And so on. So most of these teams actually
prefer &amp;ldquo;RDMA to a NVME namespace&amp;rdquo; over storage software with
redundancy, and do resiliency higher up on the stack, in
application context.&lt;/p&gt;
&lt;p&gt;As a storage team, you have to have some kind of low-latency
non-replicated solution first, because that&amp;rsquo;s what is actually
the primary demand. You also need a lowish-latency, OLTP-capable
redundant solution (&amp;lt;500 microseconds is fine), but there is
only unscaled, low level demand.&lt;/p&gt;
&lt;p&gt;And then there is huge demand for volume at any latency,
append-only preferred over rewriteable for many reasons. So S3
with heavy tiering. Ceph is actually pretty good at that, but
that is likely not NVME, but many large disk drives.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Not quite storage any more</title>
      <link>https://blog.koehntopp.info/2019/06/14/not-quite-storage-any-more.html</link>
      <pubDate>Fri, 14 Jun 2019 15:01:43 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/06/14/not-quite-storage-any-more.html</guid>
      <description>&lt;p&gt;While I was testing away on all the SSD and NVME toys, I got my hand on a test box with even stranger that usual equipment. It was a Dual Platinum-8280 box with a really weird amount of memory: 7.5 TB.&lt;/p&gt;
&lt;p&gt;“&lt;a href=&#34;https://ark.intel.com/content/www/us/en/ark/products/192478/intel-xeon-platinum-8280-processor-38-5m-cache-2-70-ghz.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;8280&lt;/a&gt;

”. This is a machine with a “2” in the second digit, indicating &lt;a href=&#34;https://en.wikipedia.org/wiki/Cascade_Lake_%28microarchitecture%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cascade Lake&lt;/a&gt;

, CLX.&lt;/p&gt;
&lt;p&gt;And one thing that is new with CLX is “Intel Optane Persistent Memory Technology”. That is actually &lt;a href=&#34;https://en.wikipedia.org/wiki/3D_XPoint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;3D XPoint&lt;/a&gt;

 (“Crosspoint”), a big invention in applied materials science. It is a thing that Intel and Micron have been co-developing, Intel sells it under the trade name of Optane (and internally it was named Apache Pass) and Micron has it as QuantX. So far I have only seen Optane.&lt;/p&gt;
&lt;p&gt;Supposedly Optane is 10x denser than RAM (right now, it is 4x denser), and it is only 10x slower than RAM.&lt;/p&gt;
&lt;h2 id=&#34;optane&#34;&gt;
    &lt;a href=&#34;#optane&#34;&gt;
	Optane
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;From a Unix point-of-view, Optane is weird. It is persistent, so storage, not memory. But unlike all the storage you know and hate, it is byte addressable. And that is a big thing.&lt;/p&gt;
&lt;p&gt;For example, NAND flash is byte-readable, but really only erasable (and that means bulk-writeable) in fairly large chunks - 64 KB to 1024 KB blocks at a time. It is being fed to you through the means of a block device, to there is a file system buffer cache, and you get to touch it only through open(2), read(2) and write(2). You can use &lt;a href=&#34;http://man7.org/linux/man-pages/man2/mmap.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mmap(2)&lt;/a&gt;

 and &lt;a href=&#34;http://man7.org/linux/man-pages/man2/msync.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;msync(2)&lt;/a&gt;

, but the thing you are fondling through this interface is the buffer cache and not the actual device. All storage subsystems Unix has been dealing with in the last 50 years have been block storage, originally 512 bytes, these days mostly 4096 bytes per block.&lt;/p&gt;
&lt;p&gt;Nobody has seen byte-addressable persistent storage in Unixland for a very long time, and worse, nobody has an API for it. There is no software that thinks “Oh, RAM. I am going to stuff things into it and that is safe for eternity.” (Well, MongoDB does, but that’s… incidental, if not accidental). Anyway, there is now a PMEM API, maintained by Intel, of course, but no applications use it – yet.&lt;/p&gt;
&lt;p&gt;Optane also has a consistent latency, which is also very extremely low – it is about 10x as slow as RAM, which makes it 10x - 100x faster than NAND flash. RAM does 120ns, 0.12µs, and Optane is somewhere in the 1-2µs range.&lt;/p&gt;
&lt;p&gt;So it’s a lot like &lt;a href=&#34;https://en.wikipedia.org/wiki/Core_rope_memory&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;core rope memory&lt;/a&gt;

 is coming back, only this time it is small and fast (&lt;a href=&#34;https://www.youtube.com/watch?v=xx7Lfh5SKUQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Core Rope Memory flew us to the moon!&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;You get two flavors of Optane from Intel:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intel Optane™ DC Persistent Memory, “Optane on the memory bus with byte addresses”&lt;/li&gt;
&lt;li&gt;Intel Optane™ DC SSDs, “Optane on the PCIe bus with LBA”&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;optane-on-the-memory-bus&#34;&gt;
    &lt;a href=&#34;#optane-on-the-memory-bus&#34;&gt;
	Optane on the memory bus
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The flavor I have been tasting here is the former, Optane on the memory bus.&lt;/p&gt;
&lt;p&gt;Basically, the box has 6 very special 512GB DIMMs for each socket, for a total of 12x 512GB = 6 TB persistent not-quite-RAM, and another set of 2x 6 DIMMs regular RAM, 128 GB each. Depending on the configuration, that can show as 7.5 TB memory (many tools are confused, because the idea of persistent memory in a Unix box did not exist until last year) or as 1.5 TB RAM and 6 TB in weird devices (/dev/pmem0 and /dev/pmem1, 3TB each).&lt;/p&gt;
&lt;p&gt;The problem with Optane on the memory bus is that it stops at 6 TB.&lt;/p&gt;
&lt;p&gt;Intel is not used to building machines with very many address lines - technically the CPU is 64 bit, but not all address bits have pins on the die, and the upper lines do not physically exist on the chip or the bus. CLX extends this, and at the same time limits it to Optane, because Intel does make “M” type CPUs (the number is extended by attaching an “M” at the end) and charges quite hefty surcharge for one additional bit of address space.&lt;/p&gt;
&lt;p&gt;Anyway, 6 TB of Optane and 1.5 TB of RAM is the end of the line for this kind of box.&lt;/p&gt;
&lt;h2 id=&#34;optane-on-the-pcie-bus&#34;&gt;
    &lt;a href=&#34;#optane-on-the-pcie-bus&#34;&gt;
	Optane on the PCIe bus
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;There is another flavor of Optane and that is the Optane SSD. These are NVME-like devices that sit on the PCIe bus, and they are being addressed like block storage. That does mean you gain a lot of latency – PCIe accesses are way slower than memory accesses.&lt;/p&gt;
&lt;p&gt;But it also means that you get all the benefits of the large address space that LBA addresses give you, and you get very many PCIe lanes and slots to play with. And you get a storage controller in the middle.&lt;/p&gt;
&lt;p&gt;This controller can make use of the fact that all accesses are block-sized, and it can do additional magic to do error correction. Stephen Bates gave a &lt;a href=&#34;https://www.snia.org/sites/default/files/SDC/2017/presentations/General_Session/Bates_Stephen_Linux_Optimizations_for_Low_Latency_Block_Devices.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;presentation about Low Latency Block Devices&lt;/a&gt;

 in a 2017 &lt;a href=&#34;https://en.wikipedia.org/wiki/Storage_Networking_Industry_Association&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SNIA&lt;/a&gt;

 conference that was interesting in its own right. But in one slide he dropped a really interesting observation on block storage and error correction, which he coined the Bates Conjecture.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/optane-bates.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bates Conjecture Slide (Slide 10)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;He said that any kind of large storage has an Uncorrectable Bit Error Rate (UBER), and for new kinds of storage media, this is likely to be high in the beginning. If you access the media in blocks, you can transparently add error correction, and get a much better Recoverable Bit Error Rate (RBER). As you make the blocks larger, checksums have less overhead and can become larger, and the RBER goes down for a constantly bad UBER. So new and unreliable media will come as block storage to the market much easier.&lt;/p&gt;
&lt;p&gt;So if you have the coin, Khajiit can build you a box with way more Optane on the PCIe bus than on the memory bus to hold your warez persistently. On the other hand, there are no prices listed anywhere close to where Intel pushes Optane at developers and that should make you stop and think.&lt;/p&gt;
&lt;h2 id=&#34;abusing-pmem-as-a-disk&#34;&gt;
    &lt;a href=&#34;#abusing-pmem-as-a-disk&#34;&gt;
	Abusing PMEM as a disk
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We have the box, and it exposes the memory as two pmem devices, and they happen to be block devices. What is one going to do with it?&lt;/p&gt;
&lt;p&gt;Architect an application that uses this magic memory in a transactional way, with lockless data structures that maximize parallel access by many threads with a minimum amount of delay, leveraging the tools made available to developers on the Intel website, of course.&lt;/p&gt;
&lt;p&gt;Seriously, it’s a block device.&lt;/p&gt;
&lt;p&gt;So let’s make a file system and use this one-of-a-kind pinnacle of 21st century storage technology as a really fast SSD, because… Well, it’s easier done than the other thing.&lt;/p&gt;
&lt;p&gt;Anyway, here’s the fio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=142k, BW=2212MiB/s (2319MB/s)(648GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (nsec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  227],  5.00th=[  231], 10.00th=[  233], 20.00th=[  243],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  245], 40.00th=[  249], 50.00th=[  253], 60.00th=[  258],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  266], 80.00th=[  274], 90.00th=[  298], 95.00th=[  314],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  338], 99.50th=[  350], 99.90th=[  438], 99.95th=[  540],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[10176]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Shut your mouth, please. The scale actually switched to ns (1/10E-9) instead of µs (1/10E-6). We are at 0.227µs - 0.350µs here, and are good till the 99.95th, actually.&lt;/p&gt;
&lt;p&gt;So, dumb sysadmin bloke hodored 142 000 single threaded IOPS out of a /dev/pmem, xfs and fio combo, at a data rate of 2.3 GB/s. Imagine what an actual developer could do with this stuff (if they used a proper systems programming language instead of Javascript, that is).&lt;/p&gt;
&lt;p&gt;Pure writes (times 8):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  write: IOPS=63.3k, BW=989MiB/s (1037MB/s)(290GiB/300000msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (nsec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  249],  5.00th=[  255], 10.00th=[  258], 20.00th=[  262],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  266], 40.00th=[  270], 50.00th=[  274], 60.00th=[  274],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  290], 80.00th=[  326], 90.00th=[  370], 95.00th=[  382],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  430], 99.50th=[  438], 99.90th=[  470], 99.95th=[  482],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 3376]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;506400 IOPS, 8 GB/s, 0.249µs-0.482µs till the 99.95th. And the 8x read + 8x write is much of the same, 500k IOPS, 8 GB, stable latencies of 1/4 to 1/2 µs till the 99.95th.&lt;/p&gt;
&lt;p&gt;Let’s get cocky and try to work our way up. We are sitting on two 8280 CPUs, that’s 56 real cores or 112 threads. How well does this thing deal with parallel access?&lt;/p&gt;
&lt;p&gt;Well, up to 32 readers, I get an aggregate of 32 GB/s, 2m aggregated IOPS and the same latencies until the 99.90th, and then a slight degradation at the 99.95th. With even more threads, things tend to level out and then break down. The 100-way parallel run ends up with 200k IOPS only.&lt;/p&gt;
&lt;h2 id=&#34;some-graphics&#34;&gt;
    &lt;a href=&#34;#some-graphics&#34;&gt;
	Some graphics
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Here is a comparison of some key performance data: SSD with smart controller, SSD direct, NVME direct and Optane.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/optane-latency.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read, Buffered and Unbuffered Writes. The Optane Data is there, you just cannot see it, because it is too fast. The scale is µs.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Moral: NVME don’t buy you much latency, but look at those sweet IOPS, all available in parallel accesses/deep queues only.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/optane-iops.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;IOPS and Bandwidth of various storage hardware compared&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;recommendations&#34;&gt;
    &lt;a href=&#34;#recommendations&#34;&gt;
	Recommendations
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;“Optane on the memory bus” brings a new kind of storage to Linux. There are libraries to use it to the fullest.&lt;/p&gt;
&lt;p&gt;Abusing “Optane on the memory bus” as a block device shows the potential of the technology, but is at the same time severely underutilizing the true capabilities of the hardware.&lt;/p&gt;
&lt;p&gt;Despite Optane having even more IOPS than NVME NAND flash and being faster, the gap between latency and IOPS is smaller than with NVME NAND flash, thus the level of parallelism in access required to fully unlock the performance potential of the device is smaller.&lt;/p&gt;
&lt;p&gt;The latency introduced by the Linux block device subsystem is increasingly becoming a problem, as is the age-old UNIX API around open(2) and friends. Since this is like the core of Unix, we are actually seeing the beginning of the end of the usefulness of the Unix API – that is, if something else is actually showing up to take its place instead. If you have experience with AS/400 aka IBM i-Series, now is the time to capitalize on it.&lt;/p&gt;
&lt;p&gt;The slow takeup of Optane with consumers is not only due to Intels really outlandish pricing model, but also because to fully unlock the potential of Optane on the memory bus (beyond it being a really nifty flash disk) our applications and the way we design applications needs to be rethought.&lt;/p&gt;
&lt;p&gt;At this point Intel is better off peddling Optane to application makers such as Oracle MySQL than us directly, because without applications truly making use of persistent memory we have no reason to buy it.&lt;/p&gt;
&lt;p&gt;It’s still fun to play with.&lt;/p&gt;
&lt;h2 id=&#34;pmdk&#34;&gt;
    &lt;a href=&#34;#pmdk&#34;&gt;
	PMDK
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Intel has classes for developers on using the persistent memory development kit (PMDK) and the underlying stuff. They are necessary, because an application rethink it coming up, which will fundamentally change the way we think about storage.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adventures in Storageland</title>
      <link>https://blog.koehntopp.info/2019/06/13/adventures-in-storageland.html</link>
      <pubDate>Thu, 13 Jun 2019 14:37:35 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/06/13/adventures-in-storageland.html</guid>
      <description>&lt;h2 id=&#34;adventures-in-storageland&#34;&gt;
    &lt;a href=&#34;#adventures-in-storageland&#34;&gt;
	Adventures in Storageland
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;devices&#34;&gt;
    &lt;a href=&#34;#devices&#34;&gt;
	Devices
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In the last few weeks, I have been benchmarking server storage in order to get a better idea what the state of the hardware is these days. There is a summary with recommendations at the end of this article.
Storage technology&lt;/p&gt;
&lt;p&gt;In the past, we had stored data on rotating disks.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/storage-hdd.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An open hard disk chassis. You can see the topmost of a stack of disks, and the arm with the r/w heads.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While the capacities of hard disks changed, access speeds and the underlying technology did not change so much. So today you can get a stack of rotating disks that stores 10, 12 or 14 TB per drive, but the access time is still in the millisecond range.&lt;/p&gt;
&lt;p&gt;It is likely around or slightly below 5ms, so you get to transfer data from 200-250 different locations per second. Databases do mostly random access, and that means you get to write 200-250 commit/s to disk.&lt;/p&gt;
&lt;p&gt;All of that changed around 2012 or so. At that time, NAND flash based storage became available at scale under the name of Solid State Drive (SSD). At work, first deployment of SSD at scale was in that year, in a very volatile replication chain and it completely transformed the way we worked with hotel room availability data.&lt;/p&gt;
&lt;p&gt;SSD are plug-in replacements for traditional hard disks: They have the same connectors and bus systems, and the same form factor. They may be flatter, though: A modern U.2 (2.5”) SSD is either tall (15mm) or flat (7mm).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/storage-ssd.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;15mm U.2 drive and it’s content.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On the inside they are different, though: They contain one logic board which houses a lot of flash NAND chips and a custom flash NAND controller. The logic board may be folded in order to make most use of the available height to increase storage capacity. The image above shows a SSD chassis and its content, unfolded.&lt;/p&gt;
&lt;p&gt;The folded design is far from optimal: Inside such a chassis you have a thermal design power of 7W-9W in a consumer device, and up to 25W in an enterprise device - power consumption is linear with the number of chips, and superlinear with the clock rates of the chips. U.2 form factor is good for HDD, but not so good for SSD, because it is hard to cool.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/storage-m2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;M.2 flash drive in a holder on a mainboard.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One attempt of handling this better is M.2, which is basically a logic board for flash NAND chips and a controller, and a board holder on the main board. This cools obviously much better, but is very hard to handle inside a data center and has a very limited lifetime in terms of number of plug-in/removal operations inside a consumer device.&lt;/p&gt;
&lt;p&gt;The attempt to fix all of that is the “flash ruler”, “EDSFF”.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2019/06/storage-ruler.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Intel flash rulers in a 1U high chassis.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;“Ruler” type flash is built to the height of a rack unit, has a specificed chassis form that allows for cooling (up to 40W TDP per “long” device), has managed air flow, and is designed to be toolless, field replaceable and hot pluggable. It looks like the perfect solution.&lt;/p&gt;
&lt;p&gt;Until you realise that there are two incompatible competing standards, each of which has exactly one supplier: Intel and Samsung.&lt;/p&gt;
&lt;p&gt;So, for most, at the moment, U.2 it is, until the “ruler” proponents get their stuff sorted out.&lt;/p&gt;
&lt;h3 id=&#34;interfaces&#34;&gt;
    &lt;a href=&#34;#interfaces&#34;&gt;
	Interfaces
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The interface we use to talk to hard disks has evolved and not evolved at the same time, for a very long time. In the past, we spoke SCSI commands over a parallel SCSI bus to our disks.&lt;/p&gt;
&lt;p&gt;Today, we use multi-Gbit rated serial buses to speak ancient SCSI commands and SCSI command extensions to our devices. The bus is SATA or SAS - either serial attached consumer disk protocol, or serial attached enterprise disk protocol, so to speak, only that SATA has become good enough to be used in the enterprise, too. Bus speed is 3 GBit/s, 6 GBit/s (what most people actually use) or 12 Gbit/s.&lt;/p&gt;
&lt;p&gt;SATA interfaces are block storage interfaces, so you get to access and address blocks of 512 bytes or 4096 bytes on the device, and you specify block numbers. In the past that was geometry addresses ( cylinder-head-sector ), but that became meaningless very quickly as storage technology improved and in the last 20 years everybody always has been using LBA and letting the storage controller do its thing.&lt;/p&gt;
&lt;p&gt;Still, these days we are actually speaking to memory chips, and doing this through a block interface originally designed for rotating storage makes a lot of overhead and increasingly little sense.&lt;/p&gt;
&lt;p&gt;How about putting the flash chips directly on the PCIe 3.0 bus, and dropping the controller interface? That’s NVME. You are taking the same form factor, the same flash chips and the same controller chip, with a different firmware and are plugging it into a PCIe 3.0 extension instead.&lt;/p&gt;
&lt;p&gt;The result is about half the latency, and a much higher transfer bandwidth. We can in fact build connectors that accept and automatically switch between SATA and NVME, no problem.&lt;/p&gt;
&lt;h3 id=&#34;benchmarking-it&#34;&gt;
    &lt;a href=&#34;#benchmarking-it&#34;&gt;
	Benchmarking it
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;So, in testing, what can we expect? In MySQL land, I/O is done in blocks of 16 KB, and is done as random I/O mostly, in reads as well as writes. So we are writing a benchmark specification for fio that is testing things: A single threaded 16 KB sequential read test for a baseline throughput benchmark, a 16 KB block size random-write benchmark, 8-way parallel for random I/O calibration, and a mixed r/w benchmark, 8 way parallel, to simulate an operational database.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[seq-read]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; rw=read
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; size=40g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; directory=/a/fio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; fadvise_hint=0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; blocksize=16k
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; direct=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; numjobs=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; nrfiles=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; runtime=300
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; ioengine=libaio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; time_based
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This spec defines a 40g test file in a benchmark directory, which is being read without caching, for 300s, linearly and single threaded.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[random-write]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; # 8 processes, 5g files each = 40g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; rw=randwrite
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; size=5g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; directory=/a/fio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; fadvise_hint=0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; blocksize=16k
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; direct=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; numjobs=8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; nrfiles=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; runtime=300
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; ioengine=libaio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; time_based
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The same, but random writes, in 8 threads in parallel. Each writer has their own file, so 8 files at 5GB each, for 40 GB total.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[read-write]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; rw=rw
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; rwmixread=80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; size=5g
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; directory=/a/fio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; fadvise_hint=0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; blocksize=16k
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; direct=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; numjobs=8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; nrfiles=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; runtime=300
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; ioengine=libaio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; time_based
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the same as the randwrite, only this time 80% reads, 20% writes.&lt;/p&gt;
&lt;h4 id=&#34;a-blade-with-a-sata-ssd&#34;&gt;
    &lt;a href=&#34;#a-blade-with-a-sata-ssd&#34;&gt;
	A blade with a SATA SSD
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;When running this on a normal blade, the SSD is actually attached to a caching RAID controller.&lt;/p&gt;
&lt;p&gt;Such a controller is actually an ARM based computer in it’s own right, sitting on the PCIe board. It has a multi-core CPU, a few GB memory, and a supercapacitor to buffer things when the power fails. It is taking disk writes, caching them on the onboard memory and then does its things in the background to write this to some kind of storage.&lt;/p&gt;
&lt;p&gt;Originally it is designed to make slow hard disks fast, but with SSD as a backing storage it is not unlikely that the only thing it does is increasing latency.&lt;/p&gt;
&lt;p&gt;So here is the baseline for a traditional Dell M630 with a PERC controller and a 1.92TB SSD:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; fio --section&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;seq-read ./fio.cfg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;seq-read: (g=0): rw=read, bs=(R) 16.0KiB-16.0KiB, (W) 16.0KiB-16.0KiB, (T) 16.0KiB-16.0KiB, ioengine=libaio, iodepth=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;fio-3.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Starting 1 process
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;seq-read: Laying out IO file (1 file / 40960MiB)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Jobs: 1 (f=1): [R(1)][100.0%][r=245MiB/s,w=0KiB/s][r=15.7k,w=0 IOPS][eta 00m:00s]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;seq-read: (groupid=0, jobs=1): err= 0: pid=18818: Fri May 10 10:31:29 2019
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=15.3k, BW=239MiB/s (251MB/s)(70.0GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    slat (usec): min=4, max=186, avg= 5.63, stdev= 2.48
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat (nsec): min=1500, max=145648k, avg=58921.07, stdev=109647.10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     lat (usec): min=56, max=145652, avg=64.67, stdev=109.74
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   53],  5.00th=[   53], 10.00th=[   53], 20.00th=[   53],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[   53], 40.00th=[   54], 50.00th=[   55], 60.00th=[   55],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[   59], 80.00th=[   60], 90.00th=[   73], 95.00th=[   75],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[   91], 99.50th=[   99], 99.90th=[  235], 99.95th=[  433],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 2343]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   bw (  KiB/s): min=38912, max=263456, per=100.00%, avg=244768.87, stdev=24405.41, samples=599
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   iops        : min= 2432, max=16466, avg=15298.03, stdev=1525.34, samples=599
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  lat (usec)   : 2=0.01%, 4=0.01%, 10=0.01%, 50=0.04%, 100=99.47%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  lat (usec)   : 250=0.39%, 500=0.05%, 750=0.01%, 1000=0.01%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  lat (msec)   : 2=0.02%, 4=0.01%, 10=0.01%, 20=0.01%, 50=0.01%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  lat (msec)   : 250=0.01%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  cpu          : usr=4.95%, sys=12.28%, ctx=4589759, majf=0, minf=114
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &amp;gt;=64=0.0%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &amp;gt;=64=0.0%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &amp;gt;=64=0.0%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     issued rwt: total=4589635,0,0, short=0,0,0, dropped=0,0,0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     latency   : target=0, window=0, percentile=100.00%, depth=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Run status group 0 (all jobs):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   READ: bw=239MiB/s (251MB/s), 239MiB/s-239MiB/s (251MB/s-251MB/s), io=70.0GiB (75.2GB), run=300001-300001msec
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Disk stats (read/write):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    dm-4: ios=4588416/35691, merge=0/0, ticks=259207/18045, in_queue=277259, util=86.48%, aggrios=4605315/37547, aggrmerge=274/2057, aggrticks=262279/21346, aggrin_queue=283104, aggrutil=86.21%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  sda: ios=4605315/37547, merge=274/2057, ticks=262279/21346, in_queue=283104, util=86.21%
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That’s a lot of output, but we are interested into a few key numbers here. This is a sequential benchmark, because we asked for that (–section=). We get 15.300 IO operations per second (IOPS), and a bandwidth of 239 MB/s (with 1024-based metric). In our 300s benchmark, we transferred 70 GB.&lt;/p&gt;
&lt;p&gt;fio dynamically shifts units as it sees fit, so we need to make sure if we are looking at milliseconds (ms, 1/1000 of a second, 1 kHz event frequency), microseconds (µs, us, 1/1 000 000 of a second, 1 MHz event frequency) or nanoseconds (ns, 1/1 000 000 000 of a second, 1 GHz event frequency).&lt;/p&gt;
&lt;p&gt;fio also knows three different latencies, lat, clat and slat. They do mean different things for different I/O engines, and in our case (using async I/O with libaio), the meaningful numbers are clat (completion latency) or overall lat, but not slat (submission latency numbers).&lt;/p&gt;
&lt;p&gt;We do get a clat histogram in usec, and that is useful: There is a relatively stable completion time up to the 99.50th percentile, and then things rise. clat is 50µs (20 000 per second) to 100µs (10 000 per second), and we do indeed get 15 000 IOPS in total.&lt;/p&gt;
&lt;p&gt;For the random write benchmark we get 8 times output like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  write: IOPS=2454, BW=38.4MiB/s (40.2MB/s)(11.2GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  202],  5.00th=[  237], 10.00th=[  249], 20.00th=[  269],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  285], 40.00th=[  302], 50.00th=[  314], 60.00th=[  330],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  347], 80.00th=[  396], 90.00th=[  482], 95.00th=[  570],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[ 2212], 99.50th=[ 2966], 99.90th=[ 6915], 99.95th=[ 7832],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 9503]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The total of the IOPS is 19588, and the clat inflection is around the 95th percentile with 200µs to 570µs write latency, and then runaway times in the ms range. Aggregated bandwidth is around 300 MB/s (6 GBit/s are 715 MB/s theoretical max).&lt;/p&gt;
&lt;p&gt;And for the r/w mix (80% read/20% write), we get 8 readers and 8 writers, each reporting&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...   
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  read: IOPS=2153, BW=33.6MiB/s (35.3MB/s)(9.86GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  155],  5.00th=[  204], 10.00th=[  231], 20.00th=[  265],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  297], 40.00th=[  322], 50.00th=[  338], 60.00th=[  355],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  379], 80.00th=[  412], 90.00th=[  478], 95.00th=[  873],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[ 2073], 99.50th=[ 2212], 99.90th=[ 2409], 99.95th=[ 2540],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 6849]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  write: IOPS=540, BW=8647KiB/s (8855kB/s)(2533MiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   60],  5.00th=[   76], 10.00th=[   85], 20.00th=[  105],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  127], 40.00th=[  149], 50.00th=[  172], 60.00th=[  194],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  217], 80.00th=[  241], 90.00th=[  277], 95.00th=[  314],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  371], 99.50th=[  449], 99.90th=[ 1696], 99.95th=[ 2737],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 6456]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The sum of all IOPS is 21412, and the clat inflection is at the 95th with 155µs to 873µs for read, and at the 99.50th for write with 60µs to 449µs (and it’s actually more complicated than this for writers, but that’s a different story). We do see a total aggregated bandwidth of 336 MB/s (out of 715 MB/s max).&lt;/p&gt;
&lt;p&gt;We are looking at a device that has a read-latency in the range of 150 µs, and that in linear read mode can likely leverage readahead and local buffers in some way to get below 50 µs in good cases.&lt;/p&gt;
&lt;p&gt;Write latency is likely 3x that, unbuffered, but like all flash devices it has RAM and can use a fraction of that RAM to buffer a part of the writes. This is more effective for smaller write loads, and we can see that in the comparison of the numbers between the full write test compared to the r/w mix.&lt;/p&gt;
&lt;h4 id=&#34;a-blade-without-the-smart-controller&#34;&gt;
    &lt;a href=&#34;#a-blade-without-the-smart-controller&#34;&gt;
	A blade without the smart controller
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Let’s try a blade without the smart controller, this time a HP BL460c with a directly attached SSD without the caching RAID controller. In this test device, the disk controller is a dumb SATA attachment, no buffering, processing, RAIDing or other “smartness” inbetween.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=14.2k, BW=222MiB/s (233MB/s)(64.0GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   50],  5.00th=[   51], 10.00th=[   52], 20.00th=[   53],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[   53], 40.00th=[   55], 50.00th=[   56], 60.00th=[   62],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[   64], 80.00th=[   64], 90.00th=[   66], 95.00th=[   68],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[   77], 99.50th=[   79], 99.90th=[  355], 99.95th=[  537],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 3130]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So 14.2k instead of 15.3k with the expensive controller, and 50-79µs instead of 53-99µs with the expensive controller. For pure writes (times 8):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  write: IOPS=3458, BW=54.0MiB/s (56.7MB/s)(15.8GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  151],  5.00th=[  188], 10.00th=[  194], 20.00th=[  227],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  237], 40.00th=[  245], 50.00th=[  253], 60.00th=[  260],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  262], 80.00th=[  269], 90.00th=[  306], 95.00th=[  375],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  938], 99.50th=[ 1057], 99.90th=[ 3916], 99.95th=[ 4228],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 5211]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, 28507 IOPS in total (compared to 19588 for the expensive controller), and 150-375µs (compared to 200-570µs for the expensive controller), and better behavior for the runaway times, too.&lt;/p&gt;
&lt;p&gt;For the mix (times 8):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=2296, BW=35.9MiB/s (37.6MB/s)(10.5GiB/300002msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  174],  5.00th=[  202], 10.00th=[  223], 20.00th=[  258],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  285], 40.00th=[  310], 50.00th=[  334], 60.00th=[  363],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  400], 80.00th=[  445], 90.00th=[  529], 95.00th=[  635],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[ 1876], 99.50th=[ 2966], 99.90th=[ 3490], 99.95th=[ 3654],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 4555]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  write: IOPS=576, BW=9225KiB/s (9446kB/s)(2703MiB/300002msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   52],  5.00th=[   58], 10.00th=[   63], 20.00th=[   72],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[   89], 40.00th=[   98], 50.00th=[  116], 60.00th=[  124],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  139], 80.00th=[  155], 90.00th=[  174], 95.00th=[  190],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  223], 99.50th=[  237], 99.90th=[  258], 99.95th=[  273],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[  293]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That comes out as a total of 23005 IOPS (as opposed to 21412), and for reads, a range of 174-635µs (155-873µs for the expensive controller), while for writes it is 52-237µs (60-449µs).&lt;/p&gt;
&lt;p&gt;Indeed, latency and degraded behavior are better for directly attached disks, the caching RAID controller (200€ extra per device) is substracting value.&lt;/p&gt;
&lt;p&gt;We can confirm these results with more benchmarking in additional, slightly different configurations (Dell, HP, new and old machines) across the test zoo.&lt;/p&gt;
&lt;h4 id=&#34;some-nvme&#34;&gt;
    &lt;a href=&#34;#some-nvme&#34;&gt;
	Some NVME
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;A colleague donated a NVME based HP box to the test. It actually has 4 NVME devices, and we naively build a striped RAID-0 from it using LVM2, because why not? Each 16 KB write goes to a different NVME device, in a round-robin fashion (This is a silly thing to do, but that would require a longer digression to explain - the 1M stripe setup does not fundamentally change things, though).&lt;/p&gt;
&lt;p&gt;The outcome is unexpected and disappointing, or is it?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=8459, BW=132MiB/s (139MB/s)(38.7GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   97],  5.00th=[  101], 10.00th=[  102], 20.00th=[  102],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  103], 40.00th=[  106], 50.00th=[  116], 60.00th=[  119],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  123], 80.00th=[  123], 90.00th=[  124], 95.00th=[  127],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  133], 99.50th=[  145], 99.90th=[  186], 99.95th=[  196],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[  221]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;My colleague claims that a single NVME device is capable of a million IOPS, yet here we see fewer than 10 000, and 100-200µs completion latencies. What’s wrong?&lt;/p&gt;
&lt;p&gt;Write test (times 8):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;write: IOPS=23.3k, BW=365MiB/s (383MB/s)(107GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   19],  5.00th=[   19], 10.00th=[   20], 20.00th=[   20],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[   21], 40.00th=[   22], 50.00th=[   24], 60.00th=[   26],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[   36], 80.00th=[   47], 90.00th=[   61], 95.00th=[   70],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[   95], 99.50th=[  114], 99.90th=[  192], 99.95th=[  293],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 2409]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Total IOPS: 183000, range: 19-200µs. Mix (times 8):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=6960, BW=109MiB/s (114MB/s)(31.9GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   97],  5.00th=[  103], 10.00th=[  104], 20.00th=[  108],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  112], 40.00th=[  118], 50.00th=[  121], 60.00th=[  125],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  126], 80.00th=[  129], 90.00th=[  141], 95.00th=[  169],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  412], 99.50th=[  611], 99.90th=[ 1385], 99.95th=[ 1696],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 2311]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  write: IOPS=1740, BW=27.2MiB/s (28.5MB/s)(8161MiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[   19],  5.00th=[   19], 10.00th=[   20], 20.00th=[   20],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[   20], 40.00th=[   20], 50.00th=[   21], 60.00th=[   21],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[   22], 80.00th=[   23], 90.00th=[   27], 95.00th=[   30],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[   60], 99.50th=[   70], 99.90th=[   95], 99.95th=[  113],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[  202]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Total IOPS: 70010, range: 19-100µs for writes, and 100-200µs for reads. So we do get a large number of IOPS, but not in the first scenario.&lt;/p&gt;
&lt;p&gt;What’s wrong? Well, latency is.&lt;/p&gt;
&lt;p&gt;In the read-only case, we have a clat of 116µs in the 50th percentile, so with 1000000µs to the second, we get 1000000/116 = 8620 IOPS single threaded, and indeed we measured 8459. Math works, every single time.&lt;/p&gt;
&lt;p&gt;So we might have a total IOPS capacity of the total device that may be 100k or even a million IOPS, but we also do have a (surprisingly constant) read latency of 100-200µs and that is not going to change. The only way to get all these IOPS is to have many concurrent accesses, all of which will take at least 100µs per read.&lt;/p&gt;
&lt;p&gt;As we can see by going 8-way parallel (for pure writes) or 16 way parallel (8 readers, 8 writers) we get a lot more in terms of IOPS, at the expected latencies per thread.&lt;/p&gt;
&lt;p&gt;And indeed, a sequential read test with 128 readers in parallel yields (times 128):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;   read: IOPS=5289, BW=82.7MiB/s (86.7MB/s)(24.2GiB/300001msec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    clat percentiles (usec):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     |  1.00th=[  118],  5.00th=[  126], 10.00th=[  133], 20.00th=[  141],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 30.00th=[  147], 40.00th=[  155], 50.00th=[  163], 60.00th=[  176],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 70.00th=[  192], 80.00th=[  215], 90.00th=[  247], 95.00th=[  281],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.00th=[  367], 99.50th=[  412], 99.90th=[  523], 99.95th=[  586],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;     | 99.99th=[ 1090]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These are not bad numbers at all: 648223 IOPS in total, at 100-400µs, and even above the 99.50th relatively stable times. The total aggregated bandwidth is 9.9GB/s (80 Gbit/s) with very little jitter (so we are not even maxing this out, we are not even at 1/3 the max for PCIe).&lt;/p&gt;
&lt;h2 id=&#34;recommendations-and-learnings&#34;&gt;
    &lt;a href=&#34;#recommendations-and-learnings&#34;&gt;
	Recommendations and Learnings
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;From a SSD, we can expect about 20k IOPS, and about 3-4 GBit/s bandwidth (6 GBit/s bus) using MySQL type of workloads.&lt;/p&gt;
&lt;p&gt;A caching RAID controller adds negative value: It costs more, but does not improve the numbers. Latency and jitter actually increase. We lose access to the SMART data, too, and have to rely on controller diagnostics instead. We should stop buying caching RAID controllers (and we have indeed done that).&lt;/p&gt;
&lt;p&gt;NVME is a different bus to the same disk hardware (Flash NAND and controller) that is in a SSD, but it creates a much better latency and throughput. It can do that, because it attaches the storage directly to the PCIe bus instead of the much slower and more complicated SATA bus. It opens the gate to much higher bandwidth and IOPS numbers from the same hardware, but latency is unchanged (but much more stable under load).&lt;/p&gt;
&lt;p&gt;We should stop buying SATA attached devices and focus on NVME instead. We should make sure that the pricing matches, because the hardware is essentially the same, only the bus interface changes.&lt;/p&gt;
&lt;p&gt;Read latency is around 100µs for a NVME read, and write latency is around 420µs for an unbuffered flash write (20µs for a write to the supercap buffered cache RAM on the NVME device, and we have probably around 512 MB of that per NVME device).&lt;/p&gt;
&lt;p&gt;That also means that access to the NVME flash disk needs to be as parallel as possible, up and beyond 100-way parallel, in order to unlock the full IOPS yield the hardware can do:&lt;/p&gt;
&lt;p&gt;We have 1 000 000 µs to the second, but latency is not 1µs, but 100µs/400µs, so we can and need to run 100-400 parallel accesses to be able to saturate the device.&lt;/p&gt;
&lt;p&gt;It is very hard to impossible to get 100-way parallel commits from a relational database, so in order to saturate even a single NVME device we are likely to need multiple applications or database instances on a single device. From an IOPS point-of-view, it should never be necessary to have more than one NVME device per box.&lt;/p&gt;
&lt;p&gt;That means in order to make most of NVME you really need the capability to run multiple workloads on a single device. Virtual machine and Kubernetes based databases are becoming a necessity in order to make full use of our hardware, even at the storage level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mozilla und IRC</title>
      <link>https://blog.koehntopp.info/2019/04/29/mozilla-irc.html</link>
      <pubDate>Mon, 29 Apr 2019 17:41:47 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/04/29/mozilla-irc.html</guid>
      <description>&lt;p&gt;Heise berichtet: &lt;a href=&#34;https://www.heise.de/newsticker/meldung/Mozilla-will-weg-von-IRC-und-sucht-Alternative-4409327.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mozilla will weg von IRC und sucht Alternative&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Und das Heiseforum sabbert reflexartig:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aber IRC ist doch noch gut, da muß man nur einmal mit der Drahtbürste rüber und dann kann das wieder auf Lager gelegt werden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Und:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XMPP! XMPP ist gut, denn es ist ein offener Standard.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ja, dann also mal Iso-Standard-Rant 8859-1:&lt;/p&gt;
&lt;p&gt;Erst mal IRC.&lt;/p&gt;
&lt;p&gt;IRC ist kaum mal ein Protokoll.
Es gibt einen einzigen RFC zum Thema IRC, rfc1459 von 1993 und das enthält nicht mal MIME, weiß nichts von UTF-8 und definiert den Zeichensatz von IRC als ASCII-Variante Geschmacksrichtung Schweden mit []{} als lustige Sonderzeichen.&lt;/p&gt;
&lt;p&gt;Moderne Anforderungen an Chat werden nicht abgedeckt:
In der Variante wie im RFC gibt es keine Identitäten und keine Authentisierung, kein TLS und auch sonst keine Sicherheit.
Ein IRC-Server nach diesem Standard würde Spam, Identitätsdiebstahl und Abhören Tür und Tor öffnen.
Ircnet ist ein deutsches Netz nach diesem Standard und hat genau alle diese Probleme &amp;ndash; Ban und Blockierung erfolgt nach IP-Ranges und als Nutzer aus dem AS der Deutschen Telekom muß man im Ircnet schwere Einschränkungen hin nehmen, weil Ircnet seine Nutzer nicht unterscheiden kann.&lt;/p&gt;
&lt;p&gt;Irc hat keine Presence und keine Persistenz.
Das ist natürlich blöd, wenn man ein Mobilnutzer ist und nicht nur laufend Disconnected, sondern auch noch laufend eine wechselnde Portnummer und IP auf dem Gateway des Mobilnetzes hat.
Das Konzept von Pushnachrichten-Servern wie sie Google und Apple für mobile Nutzung voraussetzen kennt IRC nicht.
Damit ist eine sinnvolle Teilnahme an IRC mit einem mobilen Client nicht möglich und man belästigt alle Channelteilnehmer laufend mit QUIT-Nachrichten, und hat keine Historie des Chats, wenn man gerade offline ist.&lt;/p&gt;
&lt;p&gt;IRC hat nicht nur keine Zeichensätze, sondern auch sonst keine Form von moderner Kommunikation:
Keinen funktionierenden File Transfer, denn DCC und CTCP funktionieren weitverbreitet nicht mehr, keine Inline Images, keine Eskalation zu Voice- und Videochat, keine strukturierte Kommunikation mit Threads, sodaß man auch nicht Themen und Replies auf Themen bannen kann, und auch alle anderen Merkmale moderner Chat-Anwendungen fehlen.&lt;/p&gt;
&lt;p&gt;IRC baut Chat um eine spatiale Metapher - Räume oder Channels, offene Gruppen.
Es ist möglich, geschlossene Gruppen oder 1:1 zu machen, aber das ist mehr so aufgesetzt.
Zugangskontrollen sind - auch wegen des fehlenden Identitätsmanagements - primitiv:
Geschlossene Gruppen sind offene Gruppen mit einem globalen Paßwort, Zugangskontrolle um Identität und ACLs gibt es mehr so nicht.&lt;/p&gt;
&lt;p&gt;TLS und Verschlüsselung existieren in unterschiedlichen Geschmacksrichtungen, sind aber undefiniert.&lt;/p&gt;
&lt;p&gt;Dann XMPP.&lt;/p&gt;
&lt;p&gt;Das ist quasi das Gegenteil von IRC:
Es gibt nicht einen Standard für XMPP, es gibt &lt;a href=&#34;https://xmpp.org/extensions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://xmpp.org/extensions/&lt;/a&gt;

.
Es gibt keine Profile.
Es ist jedem Client und Server überlassen, einen beliebigen Subset dieser Standards beliebig mißzuverstehen und zu implementieren und dann zu hoffen, daß etwas Sinnvolles dabei herauskommt.&lt;/p&gt;
&lt;p&gt;Das Resultat ist dann zum Beispiel ein Cisco Jabber Server, der für jede Nachricht ein DELAYED-Attribut setzt, auch bei Nachrichten, die nicht delayed sind und erwartet, daß der Client das an den Timestamp-Values in den Attributen selbst auseinander fisselt.
Und ein libpurple, wie es in Adium eingesetzt wird, das das nicht juckt und daß alle Nachrichten mit DELAYED-Attribut immer als gelesen anzeigt.&lt;/p&gt;
&lt;p&gt;Und wenn jemand zwei beliebige Jabber-Clients und einen beliebigen XMPP-Server dazu bekommt, einen Filetransfer zu machen, wenn auf einer Seite ein NAT involviert ist, ohne eine schwarze Ziege oder gar einige Menschen zu opfern - meinen Respekt.
Im Allgemeinen kann man aber sagen, daß das für normalsterbliche Menschen auch mit viel Blutvergießen nicht lösbar ist.&lt;/p&gt;
&lt;p&gt;XMPP ist ein Protokoll, das für alles mögliche eingesetzt ist - nicht nur für Chaträume, sondern auch für einen Haufen anderer Maschine-Maschine Kommunikation.
Das Ergebnis ist ein Protokoll, das von jedem irgendwie eingesetzt wird, aber eigentlich für niemanden funktioniert und ganz sicher nicht interoperabel ist.
Das ist auch einer der Gründe, warum Jabber als Chat allgemein tot ist und sich proprietäre Chat-Lösungen durchgesetzt haben - Client installieren, loslegen.
Es geht einfach.&lt;/p&gt;
&lt;p&gt;Offene Protokolle und Lösungen haben bei Chat einen Marktanteil von nahe 0 und das wird sich auch in naher Zukunft nicht ändern.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bashismen</title>
      <link>https://blog.koehntopp.info/2019/03/04/bashismen.html</link>
      <pubDate>Mon, 04 Mar 2019 11:36:29 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2019/03/04/bashismen.html</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;https://twitter.com/isotopp/status/1102527703033491456&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;trolled Twitter&lt;/a&gt;

 with some Ha-Ha-Only-Serious.&lt;/p&gt;
&lt;p&gt;Every now and then someone complains on Twitter about the use of Bashisms in Shellscripts or legacy systems that are not completely Linux-compatible.
I usually troll back with the claim that anything that is not Linux is broken, and that anything that is not Bash is broken.&lt;/p&gt;
&lt;p&gt;That is of course a troll, and I am of course at the same time totally serious.&lt;/p&gt;
&lt;p&gt;Yes, MacOS exists and does not have a Linux userland, and that is a problem (just try to use Docker, you get a VM that runs Linux that then starts Containers).
Yes, Debian ships systems with ash, and your Openwrt runs Busybox, and in both cases that is the first thing everybody changes.
At least if they are going to use these systems for real, and for good reasons, too.&lt;/p&gt;
&lt;p&gt;The thing is, time did not stop.
It&amp;rsquo;s 2019, and the by far dominant majority of all systems run Linux, bash and a few other things.
It is perfectly okay to demand that these things are present, because the world has moved on and is way beyond kernel, operating systems and shell questions.
In fact, the need to be able to run Docker images at scale is so huge that even Microsoft implemented a Linux kernel API on their operating system, which underneath is anything but close to what Linux requires.&lt;/p&gt;
&lt;p&gt;The other thing is, of course, if portability matters, you do not run Bash or any other kind of Shell.
Or if security matters.
Or extensibility.
Or anything at all.
Use Python.
Or, PHP or even Perl, if you are like from the last millennium.&lt;/p&gt;
&lt;p&gt;But never write Shell Scripts.
Ever.
Or if you do, do not expect them to run anywhere but on your box.
This in the history of mankind has never worked.&lt;/p&gt;
&lt;p&gt;So, get yourself a real computer.
And use a proper programming language.
Thank you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AMD EPYC</title>
      <link>https://blog.koehntopp.info/2018/12/03/amd-epyc.html</link>
      <pubDate>Mon, 03 Dec 2018 18:08:51 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2018/12/03/amd-epyc.html</guid>
      <description>&lt;p&gt;So we have been production benchmarking two AMD EPYC servers today.
A Quanta 1U2Node chassis with a 7551P in one slot and a 7401P in the other.
512GB of memory, 25 Gbit/s Mellanox Card.&lt;/p&gt;
&lt;p&gt;A production benchmarking installs a production puppet class, sets up nginx queue monitoring and then gradually increase load balancer weights until the nginx grows a queue of request backlog.
At which point we call it a day and return to default weights for the box.&lt;/p&gt;
&lt;p&gt;Systems under test have been four Intels, a E5-2620v4 and a Silver 4110, a E5-2690v4 and a Gold 6132.
The Intels are of course all 2P.&lt;/p&gt;
&lt;p&gt;With our memory intense production workload, the Xeon E5 and Xeon XP actually perform equally, so the 2620 and 4110 drop at 9000 workunits, the 2690 and 6132 at 15000, each.&lt;/p&gt;
&lt;p&gt;The 7401P did 13000, and the 7551P terminated at 15000, but it ran into a worker limit at a load at 50 or so, so we know this is not the absolute ceiling.&lt;/p&gt;
&lt;p&gt;So you have a $2000 7551P wiping the floor with two 6132 ($4200 list), and a $1000 7401P doing 44% better than $1000 of lower bin Intel.
Notably, latency with AMD is 20% higher due to lower clock.
But unlike lower bin Intel, AMD performance under load (all cores busy) is almost stable, where Intel clocks down 25%.
So while slower, the CPU is harder, performance under load is as stable as a high bin part.
This is good for VM work and K8s.&lt;/p&gt;
&lt;p&gt;All in all, we need to go into vendors now and see what kind of 1P AMD is on the menu.&lt;/p&gt;
&lt;p&gt;Also, AMD, ship me a 1P Rome board.
Any form factor or vendor will do at this stage.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

